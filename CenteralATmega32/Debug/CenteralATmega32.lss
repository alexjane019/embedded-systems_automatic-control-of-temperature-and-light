
CenteralATmega32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002774  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000027a  00800060  00002774  00002808  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  008002da  008002da  00002a82  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002a82  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002ab4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  00002af0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003864  00000000  00000000  00002c30  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000003d3  00000000  00000000  00006494  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001447  00000000  00000000  00006867  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000007bc  00000000  00000000  00007cb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000046c  00000000  00000000  0000846c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003647  00000000  00000000  000088d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  0000bf1f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e4 04 	jmp	0x9c8	; 0x9c8 <__ctors_end>
       4:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>
       8:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>
       c:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>
      10:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>
      14:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>
      18:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>
      1c:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>
      20:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>
      24:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>
      28:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>
      2c:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>
      30:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>
      34:	0c 94 22 0a 	jmp	0x1444	; 0x1444 <__vector_13>
      38:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>
      3c:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>
      40:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>
      44:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>
      48:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>
      4c:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>
      50:	0c 94 01 05 	jmp	0xa02	; 0xa02 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	c1 c1       	rjmp	.+898    	; 0x3d8 <font+0x210>
      56:	c1 c1       	rjmp	.+898    	; 0x3da <font+0x212>
      58:	00 00       	nop
      5a:	c2 c2       	rjmp	.+1412   	; 0x5e0 <__FUSE_REGION_LENGTH__+0x1e0>
      5c:	fe fe       	.word	0xfefe	; ????
      5e:	01 00       	.word	0x0001	; ????
      60:	c3 c3       	rjmp	.+1926   	; 0x7e8 <__FUSE_REGION_LENGTH__+0x3e8>
      62:	1f 1f       	adc	r17, r31
      64:	01 00       	.word	0x0001	; ????
      66:	c4 c4       	rjmp	.+2440   	; 0x9f0 <__do_clear_bss+0x6>
      68:	fc fc       	.word	0xfcfc	; ????
      6a:	01 00       	.word	0x0001	; ????
      6c:	c5 c5       	rjmp	.+2954   	; 0xbf8 <circle+0x6>
      6e:	c5 c5       	rjmp	.+2954   	; 0xbfa <circle+0x8>
      70:	01 01       	movw	r0, r2
      72:	c6 bd       	out	0x26, r28	; 38
      74:	bf be       	out	0x3f, r11	; 63
      76:	01 01       	movw	r0, r2
      78:	c7 c7       	rjmp	.+3982   	; 0x1008 <putItSz+0xf0>
      7a:	c0 c0       	rjmp	.+384    	; 0x1fc <font+0x34>
      7c:	01 00       	.word	0x0001	; ????
      7e:	c8 82       	st	Y, r12
      80:	84 83       	std	Z+4, r24	; 0x04
      82:	01 01       	movw	r0, r2
      84:	c9 c9       	rjmp	.-3182   	; 0xfffff418 <__eeprom_end+0xff7ef418>
      86:	fd fd       	.word	0xfdfd	; ????
      88:	01 00       	.word	0x0001	; ????
      8a:	ca 85       	ldd	r28, Y+10	; 0x0a
      8c:	87 86       	std	Z+15, r8	; 0x0f
      8e:	01 01       	movw	r0, r2
      90:	cb 88       	ldd	r12, Y+19	; 0x13
      92:	8a 89       	ldd	r24, Y+18	; 0x12
      94:	01 01       	movw	r0, r2
      96:	cc 8b       	std	Y+20, r28	; 0x14
      98:	cc 8b       	std	Y+20, r28	; 0x14
      9a:	01 01       	movw	r0, r2
      9c:	cd 8c       	ldd	r12, Y+29	; 0x1d
      9e:	cd 8c       	ldd	r12, Y+29	; 0x1d
      a0:	01 01       	movw	r0, r2
      a2:	ce 11       	cpse	r28, r14
      a4:	ce 11       	cpse	r28, r14
      a6:	01 01       	movw	r0, r2
      a8:	cf cf       	rjmp	.-98     	; 0x48 <__SREG__+0x9>
      aa:	13 13       	cpse	r17, r19
      ac:	01 00       	.word	0x0001	; ????
      ae:	d0 d0       	rcall	.+416    	; 0x250 <font+0x88>
      b0:	8f 8f       	std	Y+31, r24	; 0x1f
      b2:	01 00       	.word	0x0001	; ????
      b4:	d1 d1       	rcall	.+930    	; 0x458 <__FUSE_REGION_LENGTH__+0x58>
      b6:	1b 1b       	sub	r17, r27
      b8:	01 00       	.word	0x0001	; ????
      ba:	d2 d2       	rcall	.+1444   	; 0x660 <__FUSE_REGION_LENGTH__+0x260>
      bc:	91 91       	ld	r25, Z+
      be:	01 00       	.word	0x0001	; ????
      c0:	d3 92       	.word	0x92d3	; ????
      c2:	94 93       	xch	Z, r25
      c4:	01 01       	movw	r0, r2
      c6:	d4 95       	.word	0x95d4	; ????
      c8:	97 96       	adiw	r26, 0x27	; 39
      ca:	01 01       	movw	r0, r2
      cc:	d5 17       	cp	r29, r21
      ce:	9a 99       	sbic	0x13, 2	; 19
      d0:	01 01       	movw	r0, r2
      d2:	d6 9b       	sbis	0x1a, 6	; 26
      d4:	9d 9c       	mul	r9, r13
      d6:	01 01       	movw	r0, r2
      d8:	d7 d7       	rcall	.+4014   	; 0x1088 <putItSz+0x170>
      da:	d7 d7       	rcall	.+4014   	; 0x108a <putItSz+0x172>
      dc:	00 00       	nop
      de:	d8 d8       	rcall	.-3664   	; 0xfffff290 <__eeprom_end+0xff7ef290>
      e0:	9e 9e       	mul	r9, r30
      e2:	01 01       	movw	r0, r2
      e4:	d9 d9       	rcall	.-3150   	; 0xfffff498 <__eeprom_end+0xff7ef498>
      e6:	9f 9f       	mul	r25, r31
      e8:	01 01       	movw	r0, r2
      ea:	da a0       	ldd	r13, Y+34	; 0x22
      ec:	a2 a1       	ldd	r26, Z+34	; 0x22
      ee:	01 01       	movw	r0, r2
      f0:	db a3       	std	Y+35, r29	; 0x23
      f2:	a5 a4       	ldd	r10, Z+45	; 0x2d
      f4:	01 01       	movw	r0, r2
      f6:	dc dc       	rcall	.-1608   	; 0xfffffab0 <__eeprom_end+0xff7efab0>
      f8:	dc dc       	rcall	.-1608   	; 0xfffffab2 <__eeprom_end+0xff7efab2>
      fa:	00 00       	nop
      fc:	dd a6       	std	Y+45, r13	; 0x2d
      fe:	a8 a7       	std	Y+40, r26	; 0x28
     100:	01 01       	movw	r0, r2
     102:	de a9       	ldd	r29, Y+54	; 0x36
     104:	ab aa       	std	Y+51, r10	; 0x33
     106:	01 01       	movw	r0, r2
     108:	df ac       	ldd	r13, Y+63	; 0x3f
     10a:	ae ad       	ldd	r26, Y+62	; 0x3e
     10c:	01 01       	movw	r0, r2
     10e:	e0 e0       	ldi	r30, 0x00	; 0
     110:	e0 e0       	ldi	r30, 0x00	; 0
     112:	00 00       	nop
     114:	e1 af       	std	Z+57, r30	; 0x39
     116:	b1 b0       	in	r11, 0x01	; 1
     118:	01 01       	movw	r0, r2
     11a:	e2 e2       	ldi	r30, 0x22	; 34
     11c:	e2 e2       	ldi	r30, 0x22	; 34
     11e:	00 00       	nop
     120:	e3 b2       	in	r14, 0x13	; 19
     122:	b4 b3       	in	r27, 0x14	; 20
     124:	01 01       	movw	r0, r2
     126:	e4 b5       	in	r30, 0x24	; 36
     128:	b7 b6       	in	r11, 0x37	; 55
     12a:	01 01       	movw	r0, r2
     12c:	e5 b8       	out	0x05, r14	; 5
     12e:	ba b9       	out	0x0a, r27	; 10
     130:	01 01       	movw	r0, r2
     132:	e6 e6       	ldi	r30, 0x66	; 102
     134:	bc bc       	out	0x2c, r11	; 44
     136:	01 00       	.word	0x0001	; ????
     138:	e7 e7       	ldi	r30, 0x77	; 119
     13a:	e7 e7       	ldi	r30, 0x77	; 119
     13c:	00 00       	nop
     13e:	e8 e8       	ldi	r30, 0x88	; 136
     140:	e8 e8       	ldi	r30, 0x88	; 136
     142:	00 00       	nop
     144:	e9 e9       	ldi	r30, 0x99	; 153
     146:	e9 e9       	ldi	r30, 0x99	; 153
     148:	00 00       	nop
     14a:	ea ea       	ldi	r30, 0xAA	; 170
     14c:	ea ea       	ldi	r30, 0xAA	; 170
     14e:	00 00       	nop
     150:	eb eb       	ldi	r30, 0xBB	; 187
     152:	eb eb       	ldi	r30, 0xBB	; 187
     154:	00 00       	nop
     156:	ec bd       	out	0x2c, r30	; 44
     158:	bf be       	out	0x3f, r11	; 63
     15a:	01 01       	movw	r0, r2
     15c:	ed bd       	out	0x2d, r30	; 45
     15e:	bf be       	out	0x3f, r11	; 63
     160:	01 01       	movw	r0, r2
     162:	ee ee       	ldi	r30, 0xEE	; 238
     164:	ee ee       	ldi	r30, 0xEE	; 238
     166:	00 00       	nop
     168:	ef ef       	ldi	r30, 0xFF	; 255
     16a:	ef ef       	ldi	r30, 0xFF	; 255
     16c:	00 00       	nop
     16e:	f0 f0       	brcs	.+60     	; 0x1ac <__trampolines_end+0x158>
     170:	f0 f0       	brcs	.+60     	; 0x1ae <__trampolines_end+0x15a>
     172:	00 00       	nop
     174:	f1 f1       	breq	.+124    	; 0x1f2 <font+0x2a>
     176:	f1 f1       	breq	.+124    	; 0x1f4 <font+0x2c>
     178:	00 00       	nop
     17a:	f2 f2       	brmi	.-68     	; 0x138 <__trampolines_end+0xe4>
     17c:	f2 f2       	brmi	.-68     	; 0x13a <__trampolines_end+0xe6>
     17e:	00 00       	nop
     180:	f3 f3       	brvs	.-4      	; 0x17e <__trampolines_end+0x12a>
     182:	f3 f3       	brvs	.-4      	; 0x180 <__trampolines_end+0x12c>
     184:	00 00       	nop
     186:	f5 f5       	brhc	.+124    	; 0x204 <font+0x3c>
     188:	f5 f5       	brhc	.+124    	; 0x206 <font+0x3e>
     18a:	00 00       	nop
     18c:	f6 f6       	brtc	.-68     	; 0x14a <__trampolines_end+0xf6>
     18e:	f6 f6       	brtc	.-68     	; 0x14c <__trampolines_end+0xf8>
     190:	00 00       	nop
     192:	f7 f7       	brid	.-4      	; 0x190 <__trampolines_end+0x13c>
     194:	f7 f7       	brid	.-4      	; 0x192 <__trampolines_end+0x13e>
     196:	00 00       	nop
     198:	f8 f8       	.word	0xf8f8	; ????
     19a:	f8 f8       	.word	0xf8f8	; ????
     19c:	00 00       	nop
     19e:	fb f9       	.word	0xf9fb	; ????
     1a0:	fb fa       	.word	0xfafb	; ????
     1a2:	01 01       	movw	r0, r2
     1a4:	bb bb       	out	0x1b, r27	; 27
     1a6:	f4 f4       	brge	.+60     	; 0x1e4 <font+0x1c>
     1a8:	01 00       	.word	0x0001	; ????
     1aa:	81 1c       	adc	r8, r1
     1ac:	1e 1d       	adc	r17, r14
     1ae:	01 01       	movw	r0, r2
     1b0:	90 18       	sub	r9, r0
     1b2:	1a 19       	sub	r17, r10
     1b4:	01 01       	movw	r0, r2
     1b6:	98 14       	cp	r9, r8
     1b8:	16 15       	cp	r17, r6
     1ba:	01 01       	movw	r0, r2
     1bc:	8e 8e       	std	Y+30, r8	; 0x1e
     1be:	12 12       	cpse	r1, r18
     1c0:	01 00       	.word	0x0001	; ????
     1c2:	8d 10       	cpse	r8, r13
     1c4:	8d 10       	cpse	r8, r13
     1c6:	01 01       	movw	r0, r2

000001c8 <font>:
	...
     248:	20 20 28 28 68 b0 60 20 20 20 28 2a 28 30 20 20       ((h.`   (*(0  
     258:	00 80 80 44 32 24 20 20 00 24 24 24 38 20 20 20     ...D2$  .$$$8   
     268:	20 20 20 20 24 2a 11 00 20 20 20 24 2a 11 20 20         $*..   $*.  
     278:	30 20 20 20 24 2a 11 20 20 20 30 20 30 28 28 18     0   $*.   0 0((.
     288:	20 24 22 21 24 2a 11 00 24 22 21 24 2a 11 20 20      $"!$*..$"!$*.  
     298:	30 24 22 21 24 2a 11 20 00 80 80 40 30 20 20 20     0$"!$*. ...@0   
     2a8:	20 20 20 60 a0 60 28 30 20 20 20 60 b0 60 20 20        `.`(0   `.`  
     2b8:	00 30 28 60 a0 60 30 20 00 04 06 1d 25 24 20 20     .0(`.`0 ....%$  
	...
     2d0:	00 00 4f 00 00 00 00 00 00 07 00 07 00 00 00 00     ..O.............
     2e0:	00 14 7f 14 7f 14 00 00 00 24 2a 7f 2a 12 00 00     .........$*.*...
     2f0:	00 23 13 08 64 62 00 00 00 36 49 55 22 40 00 00     .#..db...6IU"@..
     300:	00 00 05 03 00 00 00 00 00 1c 22 41 00 00 00 00     .........."A....
     310:	00 41 22 1c 00 00 00 00 00 14 08 3e 08 14 00 00     .A"........>....
     320:	00 08 08 3e 08 08 00 00 00 00 28 18 00 00 00 00     ...>......(.....
     330:	00 08 08 08 08 08 08 00 00 30 30 00 00 00 00 00     .........00.....
     340:	00 20 10 08 04 02 00 00 00 3e 51 49 45 3e 00 00     . .......>QIE>..
     350:	00 00 42 7f 40 00 00 00 00 42 61 51 49 46 00 00     ..B.@....BaQIF..
     360:	00 21 41 45 4b 31 00 00 00 18 14 12 7f 10 00 00     .!AEK1..........
     370:	00 00 27 45 45 45 39 00 00 3c 4a 49 49 30 00 00     ..'EEE9..<JII0..
     380:	00 01 71 09 05 03 00 00 00 36 49 49 49 36 00 00     ..q......6III6..
     390:	00 06 49 49 29 1e 00 00 00 00 36 36 00 00 00 00     ..II).....66....
     3a0:	00 00 56 36 00 00 00 00 00 08 14 22 41 00 00 00     ..V6......."A...
     3b0:	00 24 24 24 24 24 00 00 00 00 41 22 14 08 00 00     .$$$$$....A"....
     3c0:	00 02 01 51 09 06 00 00 00 32 49 79 41 3e 00 00     ...Q.....2IyA>..
     3d0:	00 7e 11 11 11 7e 00 00 00 7f 49 49 49 36 00 00     .~...~....III6..
     3e0:	00 3e 41 41 41 22 00 00 00 7f 41 41 22 1c 00 00     .>AAA"....AA"...
     3f0:	00 7f 49 49 49 41 00 00 00 7f 09 09 09 01 00 00     ..IIIA..........
     400:	00 3e 41 49 49 3a 00 00 00 7f 08 08 08 7f 00 00     .>AII:..........
     410:	00 00 41 7f 41 00 00 00 00 20 40 41 3f 01 00 00     ..A.A.... @A?...
     420:	00 7f 08 14 22 41 00 00 00 7f 40 40 40 40 00 00     ...."A....@@@@..
     430:	00 7f 02 0c 02 7f 00 00 00 7f 04 08 10 7f 00 00     ................
     440:	00 3e 41 41 41 3e 00 00 00 7f 09 09 09 06 00 00     .>AAA>..........
     450:	3e 41 51 21 5e 00 00 00 00 7f 09 19 29 46 00 00     >AQ!^.......)F..
     460:	00 46 49 49 49 31 00 00 00 01 01 7f 01 01 00 00     .FIII1..........
     470:	00 3f 40 40 40 3f 00 00 00 1f 20 40 20 1f 00 00     .?@@@?.... @ ...
     480:	00 3f 40 60 40 3f 00 00 00 63 14 08 14 63 00 00     .?@`@?...c...c..
     490:	00 07 08 70 08 07 00 00 00 61 51 49 45 43 00 00     ...p.....aQIEC..
     4a0:	00 7f 41 41 00 00 00 00 00 15 16 7c 16 15 00 00     ..AA.......|....
     4b0:	00 41 41 7f 00 00 00 00 00 04 02 01 02 04 00 00     .AA.............
     4c0:	00 40 40 40 40 40 00 00 00 01 02 04 00 00 00 00     .@@@@@..........
     4d0:	00 20 54 54 54 78 00 00 00 7f 44 44 44 38 00 00     . TTTx....DDD8..
     4e0:	00 38 44 44 44 00 00 00 00 38 44 44 48 7f 00 00     .8DDD....8DDH...
     4f0:	00 38 54 54 54 18 00 00 00 10 7e 11 01 02 00 00     .8TTT.....~.....
     500:	00 0c 52 52 52 3e 00 00 00 7f 08 04 04 78 00 00     ..RRR>.......x..
     510:	00 00 44 7d 40 00 00 00 00 20 40 40 3d 00 00 00     ..D}@.... @@=...
     520:	00 7f 10 28 44 00 00 00 00 00 41 7f 40 00 00 00     ...(D.....A.@...
     530:	00 7c 04 18 04 78 00 00 00 7c 08 04 04 78 00 00     .|...x...|...x..
     540:	00 38 44 44 44 38 00 00 00 7c 14 14 14 08 00 00     .8DDD8...|......
     550:	00 08 14 14 18 7c 00 00 00 7c 08 04 04 08 00 00     .....|...|......
     560:	00 48 54 54 54 20 00 00 00 04 3f 44 40 20 00 00     .HTTT ....?D@ ..
     570:	00 3c 40 40 20 7c 00 00 00 1c 20 40 20 1c 00 00     .<@@ |.... @ ...
     580:	00 1e 20 10 20 1e 00 00 00 22 14 08 14 22 00 00     .. . ...."..."..
     590:	00 06 48 48 48 3e 00 00 00 44 64 54 4c 44 00 00     ..HHH>...DdTLD..
     5a0:	00 08 36 41 00 00 00 00 00 00 00 7f 00 00 00 00     ..6A............
     5b0:	00 41 36 08 00 00 00 00 00 08 08 2a 1c 08 00 00     .A6........*....
     5c0:	00 08 1c 2a 08 08 00 00 00 3c 42 41 42 3c 00 00     ...*.....<BAB<..
     5d0:	00 30 28 60 a0 60 28 30 20 20 20 20 a0 20 28 30     .0(`.`(0    . (0
     5e0:	20 20 20 20 b0 20 20 20 00 30 28 20 a0 20 30 20         .   .0( . 0 
     5f0:	20 20 20 22 20 22 28 30 20 20 20 22 30 22 20 20        " "(0   "0"  
     600:	00 30 28 22 20 22 30 20 20 20 20 22 21 22 28 30     .0(" "0    "!"(0
     610:	20 20 20 22 31 22 20 20 00 30 28 22 21 22 30 20        "1"  .0("!"0 
     620:	20 20 28 28 28 b0 20 20 20 20 28 28 28 30 20 20       (((.    (((0  
     630:	00 c0 a8 28 68 b0 60 20 00 00 80 80 44 32 04 00     ...(h.` ....D2..
     640:	00 24 25 24 38 20 20 20 30 24 22 21 24 2a 11 00     .$%$8   0$"!$*..
     650:	00 80 80 40 34 20 20 20 20 20 20 38 20 38 20 18     ...@4      8 8 .
     660:	20 20 38 20 38 20 38 20 60 80 80 78 20 38 20 18       8 8 8 `..x 8 .
     670:	20 20 20 38 22 39 22 18 20 20 38 22 39 22 38 20        8"9".  8"9"8 
     680:	60 80 80 78 22 39 22 18 30 20 20 20 24 2a 11 00     `..x"9".0   $*..
     690:	20 30 20 30 28 28 38 20 60 80 80 60 30 28 28 38      0 0((8 `..`0((8
     6a0:	20 20 30 20 30 28 2a 18 20 30 20 30 28 2a 38 20       0 0(*. 0 0(*8 
     6b0:	60 80 80 60 30 28 2a 38 20 20 3e 30 28 28 38 20     `..`0(*8  >0((8 
     6c0:	20 20 3e 30 28 2a 38 20 20 20 20 20 30 28 28 00       >0(*8     0((.
     6d0:	20 20 20 30 28 28 20 20 00 40 a0 b0 28 28 20 20        0((  .@..((  
     6e0:	20 20 20 20 30 28 2a 00 20 20 20 30 28 2a 20 20         0(*.   0(*  
     6f0:	00 40 a0 b0 28 2a 20 20 20 20 20 20 30 28 2a 30     .@..(*      0(*0
     700:	20 20 30 28 2a 30 20 20 00 18 20 20 30 28 2a 30       0(*0  ..  0(*0
     710:	20 20 20 20 30 2a 28 32 20 20 30 2a 28 32 20 20         0*(2  0*(2  
     720:	60 80 80 b2 a8 7a 20 20 22 25 25 25 25 25 25 19     `....z  "%%%%%%.
     730:	20 20 20 1c 22 21 20 20 30 28 2c 2a 20 3f 20 20        ."!  0(,* ?  
     740:	20 20 20 20 20 20 1f 00 20 20 20 20 1f 20 20 20           ..    .   
     750:	00 30 40 40 3f 20 20 20 20 20 20 20 30 48 48 30     .0@@?       0HH0
     760:	20 20 30 48 48 30 20 20 80 40 30 48 48 30 20 20       0HH0  .@0HH0  
     770:	20 20 20 20 22 20 18 00 20 20 20 20 1a 20 20 20         " ..    .   
     780:	30 40 44 40 30 20 20 20 20 20 20 30 28 3a 2c 18     0@D@0      0(:,.
     790:	20 20 30 28 3a 2c 38 20 00 18 14 14 18 20 20 20       0(:,8 .....   
     7a0:	00 21 22 24 28 10 0f 00 00 b0 a8 78 20 20 20 20     .!"$(......x    
     7b0:	20 20 20 a0 20 a0 28 30 20 20 20 a0 30 a0 20 20        . .(0   .0.  
     7c0:	00 60 80 80 a0 50 10 20 00 1e 20 20 20 20 20 20     .`...P. ..      
     7d0:	00 20 30 28 28 20 00 00 00 04 02 02 3a 02 02 01     . 0(( ......:...
     7e0:	00 00 04 06 3d 05 04 00 00 00 04 b6 ad 7d 04 00     ....=........}..
     7f0:	00 00 80 c0 bf a0 80 00 04 66 85 95 a8 a8 48 00     .........f....H.
     800:	00 00 00 3f 00 00 00 00 00 30 28 20 a0 20 28 30     ...?.....0( . (0
     810:	00 00 30 2a 28 32 00 00 00 30 28 22 20 22 28 30     ..0*(2...0(" "(0
     820:	00 30 28 22 21 22 28 30 00 c0 a8 a8 28 b0 20 20     .0("!"(0....(.  
     830:	00 c0 a8 a8 a8 30 20 20 00 c0 a8 aa 28 30 20 20     .....0  ....(0  
     840:	00 00 24 24 24 38 00 00 00 00 24 25 24 38 00 00     ..$$$8....$%$8..
     850:	00 80 80 40 30 00 00 00 00 00 80 80 40 34 00 00     ...@0.......@4..
     860:	60 80 80 78 20 38 20 18 60 80 80 78 22 39 22 18     `..x 8 .`..x"9".
     870:	60 80 80 60 30 28 28 18 60 80 80 60 30 28 2a 18     `..`0((.`..`0(*.
     880:	00 22 14 08 14 22 00 00 20 20 3e 30 28 28 18 00     ."..."..  >0((..
     890:	20 20 3e 30 28 2a 18 00 00 00 40 a0 b0 28 28 00       >0(*....@..((.
     8a0:	00 00 40 a0 b0 2a 28 00 20 20 20 20 20 20 20 20     ..@..*(.        
     8b0:	00 18 20 20 30 28 2a 30 00 60 80 80 b2 a8 7a 00     ..  0(*0.`....z.
     8c0:	00 30 28 2c 2a 20 3f 00 00 40 a9 aa a8 f0 00 00     .0(,* ?..@......
     8d0:	00 00 60 80 80 7e 00 00 00 40 aa a9 aa f0 00 00     ..`..~...@......
     8e0:	00 00 c0 20 30 28 28 30 00 00 60 80 88 80 60 00     ... 0((0..`...`.
     8f0:	00 00 30 28 28 30 00 00 00 00 00 b0 a8 78 00 00     ..0((0.......x..
     900:	04 26 25 25 28 10 0f 00 04 22 22 26 29 10 0f 00     .&%%(....""&)...
     910:	00 21 22 24 a8 d0 af a0 00 70 aa a9 aa 30 00 00     .!"$.....p...0..
     920:	00 70 aa a8 aa 30 00 00 00 30 40 40 50 28 08 00     .p...0...0@@P(..
     930:	00 30 c0 40 d0 28 08 00 00 00 02 79 02 00 00 00     .0.@.(.....y....
     940:	00 00 02 78 02 00 00 00 00 00 00 00 00 05 05 05     ...x............
     950:	00 00 00 04 03 0b 06 06 a0 a0 a0 00 00 00 00 00     ................
     960:	00 00 01 01 01 01 00 00 00 21 22 24 28 10 2f 20     .........!"$(./ 
     970:	00 00 00 00 00 04 03 03 00 00 80 80 80 80 00 00     ................
     980:	00 00 10 10 54 10 10 00 00 00 02 04 02 04 02 00     ....T...........
     990:	20 24 26 25 25 20 28 30 20 24 26 25 35 20 20 20      $&%% (0 $&%5   
     9a0:	08 6c 8a 8a a0 50 10 20 04 b6 ad 7d 24 20 20 20     .l...P. ...}$   
     9b0:	00 19 14 15 18 20 20 20 04 02 02 1a 22 22 21 20     .....   ....""! 
     9c0:	00 40 60 50 48 50 40 40                             .@`PHP@@

000009c8 <__ctors_end>:
     9c8:	11 24       	eor	r1, r1
     9ca:	1f be       	out	0x3f, r1	; 63
     9cc:	cf e5       	ldi	r28, 0x5F	; 95
     9ce:	d8 e0       	ldi	r29, 0x08	; 8
     9d0:	de bf       	out	0x3e, r29	; 62
     9d2:	cd bf       	out	0x3d, r28	; 61

000009d4 <__do_copy_data>:
     9d4:	12 e0       	ldi	r17, 0x02	; 2
     9d6:	a0 e6       	ldi	r26, 0x60	; 96
     9d8:	b0 e0       	ldi	r27, 0x00	; 0
     9da:	e4 e7       	ldi	r30, 0x74	; 116
     9dc:	f7 e2       	ldi	r31, 0x27	; 39
     9de:	02 c0       	rjmp	.+4      	; 0x9e4 <__do_copy_data+0x10>
     9e0:	05 90       	lpm	r0, Z+
     9e2:	0d 92       	st	X+, r0
     9e4:	aa 3d       	cpi	r26, 0xDA	; 218
     9e6:	b1 07       	cpc	r27, r17
     9e8:	d9 f7       	brne	.-10     	; 0x9e0 <__do_copy_data+0xc>

000009ea <__do_clear_bss>:
     9ea:	22 e0       	ldi	r18, 0x02	; 2
     9ec:	aa ed       	ldi	r26, 0xDA	; 218
     9ee:	b2 e0       	ldi	r27, 0x02	; 2
     9f0:	01 c0       	rjmp	.+2      	; 0x9f4 <.do_clear_bss_start>

000009f2 <.do_clear_bss_loop>:
     9f2:	1d 92       	st	X+, r1

000009f4 <.do_clear_bss_start>:
     9f4:	a5 3e       	cpi	r26, 0xE5	; 229
     9f6:	b2 07       	cpc	r27, r18
     9f8:	e1 f7       	brne	.-8      	; 0x9f2 <.do_clear_bss_loop>
     9fa:	0e 94 f1 0f 	call	0x1fe2	; 0x1fe2 <main>
     9fe:	0c 94 b8 13 	jmp	0x2770	; 0x2770 <_exit>

00000a02 <__bad_interrupt>:
     a02:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000a06 <trigger>:
        {                       
           goto_xy(j,i);                              
           glcd_write(bmp[(128*i)+j]);
        }                                              
    }
}
     a06:	a9 9a       	sbi	0x15, 1	; 21
     a08:	00 c0       	rjmp	.+0      	; 0xa0a <trigger+0x4>
     a0a:	00 00       	nop
     a0c:	a9 98       	cbi	0x15, 1	; 21
     a0e:	00 c0       	rjmp	.+0      	; 0xa10 <trigger+0xa>
     a10:	00 00       	nop
     a12:	08 95       	ret

00000a14 <glcd_on>:
     a14:	aa 9a       	sbi	0x15, 2	; 21
     a16:	ab 9a       	sbi	0x15, 3	; 21
     a18:	97 98       	cbi	0x12, 7	; 18
     a1a:	a8 98       	cbi	0x15, 0	; 21
     a1c:	8f e3       	ldi	r24, 0x3F	; 63
     a1e:	8b bb       	out	0x1b, r24	; 27
     a20:	0e 94 03 05 	call	0xa06	; 0xa06 <trigger>
     a24:	08 95       	ret

00000a26 <goto_col>:
     a26:	97 98       	cbi	0x12, 7	; 18
     a28:	a8 98       	cbi	0x15, 0	; 21
     a2a:	80 34       	cpi	r24, 0x40	; 64
     a2c:	91 05       	cpc	r25, r1
     a2e:	18 f4       	brcc	.+6      	; 0xa36 <goto_col+0x10>
     a30:	aa 9a       	sbi	0x15, 2	; 21
     a32:	ab 98       	cbi	0x15, 3	; 21
     a34:	03 c0       	rjmp	.+6      	; 0xa3c <goto_col+0x16>
     a36:	ab 9a       	sbi	0x15, 3	; 21
     a38:	aa 98       	cbi	0x15, 2	; 21
     a3a:	80 54       	subi	r24, 0x40	; 64
     a3c:	8f 73       	andi	r24, 0x3F	; 63
     a3e:	80 64       	ori	r24, 0x40	; 64
     a40:	8b bb       	out	0x1b, r24	; 27
     a42:	0e 94 03 05 	call	0xa06	; 0xa06 <trigger>
     a46:	08 95       	ret

00000a48 <goto_row>:
     a48:	97 98       	cbi	0x12, 7	; 18
     a4a:	a8 98       	cbi	0x15, 0	; 21
     a4c:	87 70       	andi	r24, 0x07	; 7
     a4e:	88 6b       	ori	r24, 0xB8	; 184
     a50:	8b bb       	out	0x1b, r24	; 27
     a52:	0e 94 03 05 	call	0xa06	; 0xa06 <trigger>
     a56:	08 95       	ret

00000a58 <goto_xy>:
     a58:	cf 93       	push	r28
     a5a:	df 93       	push	r29
     a5c:	eb 01       	movw	r28, r22
     a5e:	0e 94 13 05 	call	0xa26	; 0xa26 <goto_col>
     a62:	ce 01       	movw	r24, r28
     a64:	0e 94 24 05 	call	0xa48	; 0xa48 <goto_row>
     a68:	df 91       	pop	r29
     a6a:	cf 91       	pop	r28
     a6c:	08 95       	ret

00000a6e <glcd_write>:
     a6e:	97 9a       	sbi	0x12, 7	; 18
     a70:	a8 98       	cbi	0x15, 0	; 21
     a72:	8b bb       	out	0x1b, r24	; 27
     a74:	00 00       	nop
     a76:	0e 94 03 05 	call	0xa06	; 0xa06 <trigger>
     a7a:	08 95       	ret

00000a7c <glcd_clrln>:
     a7c:	cf 93       	push	r28
     a7e:	df 93       	push	r29
     a80:	c8 2f       	mov	r28, r24
     a82:	d0 e0       	ldi	r29, 0x00	; 0
     a84:	be 01       	movw	r22, r28
     a86:	80 e0       	ldi	r24, 0x00	; 0
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	0e 94 2c 05 	call	0xa58	; 0xa58 <goto_xy>
     a8e:	be 01       	movw	r22, r28
     a90:	80 e4       	ldi	r24, 0x40	; 64
     a92:	90 e0       	ldi	r25, 0x00	; 0
     a94:	0e 94 2c 05 	call	0xa58	; 0xa58 <goto_xy>
     a98:	aa 9a       	sbi	0x15, 2	; 21
     a9a:	c1 e4       	ldi	r28, 0x41	; 65
     a9c:	d0 e0       	ldi	r29, 0x00	; 0
     a9e:	80 e0       	ldi	r24, 0x00	; 0
     aa0:	0e 94 37 05 	call	0xa6e	; 0xa6e <glcd_write>
     aa4:	21 97       	sbiw	r28, 0x01	; 1
     aa6:	d9 f7       	brne	.-10     	; 0xa9e <glcd_clrln+0x22>
     aa8:	df 91       	pop	r29
     aaa:	cf 91       	pop	r28
     aac:	08 95       	ret

00000aae <glcd_clear>:
     aae:	cf 93       	push	r28
     ab0:	c0 e0       	ldi	r28, 0x00	; 0
     ab2:	8c 2f       	mov	r24, r28
     ab4:	0e 94 3e 05 	call	0xa7c	; 0xa7c <glcd_clrln>
     ab8:	cf 5f       	subi	r28, 0xFF	; 255
     aba:	c8 30       	cpi	r28, 0x08	; 8
     abc:	d1 f7       	brne	.-12     	; 0xab2 <glcd_clear+0x4>
     abe:	cf 91       	pop	r28
     ac0:	08 95       	ret

00000ac2 <glcd_read>:
     ac2:	1a ba       	out	0x1a, r1	; 26
     ac4:	a8 9a       	sbi	0x15, 0	; 21
     ac6:	97 9a       	sbi	0x12, 7	; 18
     ac8:	80 34       	cpi	r24, 0x40	; 64
     aca:	18 f4       	brcc	.+6      	; 0xad2 <glcd_read+0x10>
     acc:	85 b3       	in	r24, 0x15	; 21
     ace:	84 60       	ori	r24, 0x04	; 4
     ad0:	02 c0       	rjmp	.+4      	; 0xad6 <glcd_read+0x14>
     ad2:	85 b3       	in	r24, 0x15	; 21
     ad4:	8b 7f       	andi	r24, 0xFB	; 251
     ad6:	85 bb       	out	0x15, r24	; 21
     ad8:	aa 9b       	sbis	0x15, 2	; 21
     ada:	03 c0       	rjmp	.+6      	; 0xae2 <glcd_read+0x20>
     adc:	85 b3       	in	r24, 0x15	; 21
     ade:	87 7f       	andi	r24, 0xF7	; 247
     ae0:	02 c0       	rjmp	.+4      	; 0xae6 <glcd_read+0x24>
     ae2:	85 b3       	in	r24, 0x15	; 21
     ae4:	88 60       	ori	r24, 0x08	; 8
     ae6:	85 bb       	out	0x15, r24	; 21
     ae8:	00 00       	nop
     aea:	a9 9a       	sbi	0x15, 1	; 21
     aec:	00 00       	nop
     aee:	a9 98       	cbi	0x15, 1	; 21
     af0:	86 e0       	ldi	r24, 0x06	; 6
     af2:	8a 95       	dec	r24
     af4:	f1 f7       	brne	.-4      	; 0xaf2 <glcd_read+0x30>
     af6:	00 c0       	rjmp	.+0      	; 0xaf8 <glcd_read+0x36>
     af8:	a9 9a       	sbi	0x15, 1	; 21
     afa:	00 00       	nop
     afc:	89 b3       	in	r24, 0x19	; 25
     afe:	a9 98       	cbi	0x15, 1	; 21
     b00:	00 00       	nop
     b02:	9f ef       	ldi	r25, 0xFF	; 255
     b04:	9a bb       	out	0x1a, r25	; 26
     b06:	08 95       	ret

00000b08 <point_at>:
     b08:	cf 92       	push	r12
     b0a:	df 92       	push	r13
     b0c:	ef 92       	push	r14
     b0e:	ff 92       	push	r15
     b10:	0f 93       	push	r16
     b12:	1f 93       	push	r17
     b14:	cf 93       	push	r28
     b16:	df 93       	push	r29
     b18:	d8 2f       	mov	r29, r24
     b1a:	d9 2e       	mov	r13, r25
     b1c:	7b 01       	movw	r14, r22
     b1e:	c4 2e       	mov	r12, r20
     b20:	8b 01       	movw	r16, r22
     b22:	16 95       	lsr	r17
     b24:	07 95       	ror	r16
     b26:	16 95       	lsr	r17
     b28:	07 95       	ror	r16
     b2a:	16 95       	lsr	r17
     b2c:	07 95       	ror	r16
     b2e:	b8 01       	movw	r22, r16
     b30:	0e 94 2c 05 	call	0xa58	; 0xa58 <goto_xy>
     b34:	cc 20       	and	r12, r12
     b36:	21 f0       	breq	.+8      	; 0xb40 <point_at+0x38>
     b38:	81 e0       	ldi	r24, 0x01	; 1
     b3a:	c8 16       	cp	r12, r24
     b3c:	91 f0       	breq	.+36     	; 0xb62 <point_at+0x5a>
     b3e:	20 c0       	rjmp	.+64     	; 0xb80 <point_at+0x78>
     b40:	8d 2f       	mov	r24, r29
     b42:	0e 94 61 05 	call	0xac2	; 0xac2 <glcd_read>
     b46:	97 e0       	ldi	r25, 0x07	; 7
     b48:	e9 22       	and	r14, r25
     b4a:	ff 24       	eor	r15, r15
     b4c:	21 e0       	ldi	r18, 0x01	; 1
     b4e:	30 e0       	ldi	r19, 0x00	; 0
     b50:	02 c0       	rjmp	.+4      	; 0xb56 <point_at+0x4e>
     b52:	22 0f       	add	r18, r18
     b54:	33 1f       	adc	r19, r19
     b56:	ea 94       	dec	r14
     b58:	e2 f7       	brpl	.-8      	; 0xb52 <point_at+0x4a>
     b5a:	20 95       	com	r18
     b5c:	c8 2f       	mov	r28, r24
     b5e:	c2 23       	and	r28, r18
     b60:	0f c0       	rjmp	.+30     	; 0xb80 <point_at+0x78>
     b62:	8d 2f       	mov	r24, r29
     b64:	0e 94 61 05 	call	0xac2	; 0xac2 <glcd_read>
     b68:	97 e0       	ldi	r25, 0x07	; 7
     b6a:	e9 22       	and	r14, r25
     b6c:	ff 24       	eor	r15, r15
     b6e:	21 e0       	ldi	r18, 0x01	; 1
     b70:	30 e0       	ldi	r19, 0x00	; 0
     b72:	02 c0       	rjmp	.+4      	; 0xb78 <point_at+0x70>
     b74:	22 0f       	add	r18, r18
     b76:	33 1f       	adc	r19, r19
     b78:	ea 94       	dec	r14
     b7a:	e2 f7       	brpl	.-8      	; 0xb74 <point_at+0x6c>
     b7c:	c8 2f       	mov	r28, r24
     b7e:	c2 2b       	or	r28, r18
     b80:	b8 01       	movw	r22, r16
     b82:	8d 2f       	mov	r24, r29
     b84:	9d 2d       	mov	r25, r13
     b86:	0e 94 2c 05 	call	0xa58	; 0xa58 <goto_xy>
     b8a:	8c 2f       	mov	r24, r28
     b8c:	0e 94 37 05 	call	0xa6e	; 0xa6e <glcd_write>
     b90:	df 91       	pop	r29
     b92:	cf 91       	pop	r28
     b94:	1f 91       	pop	r17
     b96:	0f 91       	pop	r16
     b98:	ff 90       	pop	r15
     b9a:	ef 90       	pop	r14
     b9c:	df 90       	pop	r13
     b9e:	cf 90       	pop	r12
     ba0:	08 95       	ret

00000ba2 <v_line>:
     ba2:	af 92       	push	r10
     ba4:	bf 92       	push	r11
     ba6:	cf 92       	push	r12
     ba8:	df 92       	push	r13
     baa:	ef 92       	push	r14
     bac:	ff 92       	push	r15
     bae:	0f 93       	push	r16
     bb0:	cf 93       	push	r28
     bb2:	df 93       	push	r29
     bb4:	5c 01       	movw	r10, r24
     bb6:	eb 01       	movw	r28, r22
     bb8:	6b 01       	movw	r12, r22
     bba:	c4 0e       	add	r12, r20
     bbc:	d5 1e       	adc	r13, r21
     bbe:	6c 15       	cp	r22, r12
     bc0:	7d 05       	cpc	r23, r13
     bc2:	68 f4       	brcc	.+26     	; 0xbde <v_line+0x3c>
     bc4:	2f 5f       	subi	r18, 0xFF	; 255
     bc6:	e2 2e       	mov	r14, r18
     bc8:	f1 2c       	mov	r15, r1
     bca:	40 2f       	mov	r20, r16
     bcc:	be 01       	movw	r22, r28
     bce:	c5 01       	movw	r24, r10
     bd0:	0e 94 84 05 	call	0xb08	; 0xb08 <point_at>
     bd4:	ce 0d       	add	r28, r14
     bd6:	df 1d       	adc	r29, r15
     bd8:	cc 15       	cp	r28, r12
     bda:	dd 05       	cpc	r29, r13
     bdc:	b0 f3       	brcs	.-20     	; 0xbca <v_line+0x28>
     bde:	df 91       	pop	r29
     be0:	cf 91       	pop	r28
     be2:	0f 91       	pop	r16
     be4:	ff 90       	pop	r15
     be6:	ef 90       	pop	r14
     be8:	df 90       	pop	r13
     bea:	cf 90       	pop	r12
     bec:	bf 90       	pop	r11
     bee:	af 90       	pop	r10
     bf0:	08 95       	ret

00000bf2 <circle>:
     bf2:	2f 92       	push	r2
     bf4:	3f 92       	push	r3
     bf6:	4f 92       	push	r4
     bf8:	5f 92       	push	r5
     bfa:	6f 92       	push	r6
     bfc:	7f 92       	push	r7
     bfe:	8f 92       	push	r8
     c00:	9f 92       	push	r9
     c02:	af 92       	push	r10
     c04:	bf 92       	push	r11
     c06:	cf 92       	push	r12
     c08:	df 92       	push	r13
     c0a:	ef 92       	push	r14
     c0c:	ff 92       	push	r15
     c0e:	0f 93       	push	r16
     c10:	1f 93       	push	r17
     c12:	cf 93       	push	r28
     c14:	df 93       	push	r29
     c16:	cd b7       	in	r28, 0x3d	; 61
     c18:	de b7       	in	r29, 0x3e	; 62
     c1a:	6b 97       	sbiw	r28, 0x1b	; 27
     c1c:	0f b6       	in	r0, 0x3f	; 63
     c1e:	f8 94       	cli
     c20:	de bf       	out	0x3e, r29	; 62
     c22:	0f be       	out	0x3f, r0	; 63
     c24:	cd bf       	out	0x3d, r28	; 61
     c26:	3c 01       	movw	r6, r24
     c28:	2b 01       	movw	r4, r22
     c2a:	5b 8b       	std	Y+19, r21	; 0x13
     c2c:	4a 8b       	std	Y+18, r20	; 0x12
     c2e:	2d 83       	std	Y+5, r18	; 0x05
     c30:	0a 8f       	std	Y+26, r16	; 0x1a
     c32:	1a 89       	ldd	r17, Y+18	; 0x12
     c34:	41 15       	cp	r20, r1
     c36:	51 05       	cpc	r21, r1
     c38:	09 f4       	brne	.+2      	; 0xc3c <circle+0x4a>
     c3a:	e3 c0       	rjmp	.+454    	; 0xe02 <circle+0x210>
     c3c:	44 9f       	mul	r20, r20
     c3e:	90 01       	movw	r18, r0
     c40:	45 9f       	mul	r20, r21
     c42:	30 0d       	add	r19, r0
     c44:	30 0d       	add	r19, r0
     c46:	11 24       	eor	r1, r1
     c48:	3d 8b       	std	Y+21, r19	; 0x15
     c4a:	2c 8b       	std	Y+20, r18	; 0x14
     c4c:	81 2c       	mov	r8, r1
     c4e:	91 2c       	mov	r9, r1
     c50:	b1 2c       	mov	r11, r1
     c52:	cb 01       	movw	r24, r22
     c54:	a0 e0       	ldi	r26, 0x00	; 0
     c56:	b0 e0       	ldi	r27, 0x00	; 0
     c58:	8e 8b       	std	Y+22, r24	; 0x16
     c5a:	9f 8b       	std	Y+23, r25	; 0x17
     c5c:	a8 8f       	std	Y+24, r26	; 0x18
     c5e:	b9 8f       	std	Y+25, r27	; 0x19
     c60:	bb 8e       	std	Y+27, r11	; 0x1b
     c62:	1a 87       	std	Y+10, r17	; 0x0a
     c64:	23 01       	movw	r4, r6
     c66:	20 2e       	mov	r2, r16
     c68:	3b 01       	movw	r6, r22
     c6a:	cc 88       	ldd	r12, Y+20	; 0x14
     c6c:	dd 88       	ldd	r13, Y+21	; 0x15
     c6e:	9b 8d       	ldd	r25, Y+27	; 0x1b
     c70:	99 9f       	mul	r25, r25
     c72:	c0 18       	sub	r12, r0
     c74:	d1 08       	sbc	r13, r1
     c76:	11 24       	eor	r1, r1
     c78:	e1 2c       	mov	r14, r1
     c7a:	f1 2c       	mov	r15, r1
     c7c:	c7 01       	movw	r24, r14
     c7e:	b6 01       	movw	r22, r12
     c80:	0e 94 60 12 	call	0x24c0	; 0x24c0 <__floatunsisf>
     c84:	0e 94 32 13 	call	0x2664	; 0x2664 <sqrt>
     c88:	0e 94 31 12 	call	0x2462	; 0x2462 <__fixunssfsi>
     c8c:	36 2e       	mov	r3, r22
     c8e:	06 2f       	mov	r16, r22
     c90:	10 e0       	ldi	r17, 0x00	; 0
     c92:	d8 01       	movw	r26, r16
     c94:	a6 0d       	add	r26, r6
     c96:	b7 1d       	adc	r27, r7
     c98:	ba 83       	std	Y+2, r27	; 0x02
     c9a:	a9 83       	std	Y+1, r26	; 0x01
     c9c:	64 01       	movw	r12, r8
     c9e:	c4 0c       	add	r12, r4
     ca0:	d5 1c       	adc	r13, r5
     ca2:	42 2d       	mov	r20, r2
     ca4:	bd 01       	movw	r22, r26
     ca6:	c6 01       	movw	r24, r12
     ca8:	0e 94 84 05 	call	0xb08	; 0xb08 <point_at>
     cac:	73 01       	movw	r14, r6
     cae:	e0 1a       	sub	r14, r16
     cb0:	f1 0a       	sbc	r15, r17
     cb2:	42 2d       	mov	r20, r2
     cb4:	b7 01       	movw	r22, r14
     cb6:	c6 01       	movw	r24, r12
     cb8:	0e 94 84 05 	call	0xb08	; 0xb08 <point_at>
     cbc:	52 01       	movw	r10, r4
     cbe:	a8 18       	sub	r10, r8
     cc0:	b9 08       	sbc	r11, r9
     cc2:	42 2d       	mov	r20, r2
     cc4:	69 81       	ldd	r22, Y+1	; 0x01
     cc6:	7a 81       	ldd	r23, Y+2	; 0x02
     cc8:	c5 01       	movw	r24, r10
     cca:	0e 94 84 05 	call	0xb08	; 0xb08 <point_at>
     cce:	42 2d       	mov	r20, r2
     cd0:	b7 01       	movw	r22, r14
     cd2:	c5 01       	movw	r24, r10
     cd4:	0e 94 84 05 	call	0xb08	; 0xb08 <point_at>
     cd8:	ba 85       	ldd	r27, Y+10	; 0x0a
     cda:	8b 2f       	mov	r24, r27
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	80 1b       	sub	r24, r16
     ce0:	91 0b       	sbc	r25, r17
     ce2:	7c 01       	movw	r14, r24
     ce4:	22 f4       	brpl	.+8      	; 0xcee <circle+0xfc>
     ce6:	ee 24       	eor	r14, r14
     ce8:	ff 24       	eor	r15, r15
     cea:	e8 1a       	sub	r14, r24
     cec:	f9 0a       	sbc	r15, r25
     cee:	e2 e0       	ldi	r30, 0x02	; 2
     cf0:	ee 16       	cp	r14, r30
     cf2:	f1 04       	cpc	r15, r1
     cf4:	0c f4       	brge	.+2      	; 0xcf8 <circle+0x106>
     cf6:	74 c0       	rjmp	.+232    	; 0xde0 <circle+0x1ee>
     cf8:	6e 89       	ldd	r22, Y+22	; 0x16
     cfa:	7f 89       	ldd	r23, Y+23	; 0x17
     cfc:	88 8d       	ldd	r24, Y+24	; 0x18
     cfe:	99 8d       	ldd	r25, Y+25	; 0x19
     d00:	0e 94 60 12 	call	0x24c0	; 0x24c0 <__floatunsisf>
     d04:	69 83       	std	Y+1, r22	; 0x01
     d06:	7a 83       	std	Y+2, r23	; 0x02
     d08:	8b 83       	std	Y+3, r24	; 0x03
     d0a:	9c 83       	std	Y+4, r25	; 0x04
     d0c:	63 2d       	mov	r22, r3
     d0e:	70 e0       	ldi	r23, 0x00	; 0
     d10:	80 e0       	ldi	r24, 0x00	; 0
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	0e 94 60 12 	call	0x24c0	; 0x24c0 <__floatunsisf>
     d18:	6e 83       	std	Y+6, r22	; 0x06
     d1a:	7f 83       	std	Y+7, r23	; 0x07
     d1c:	88 87       	std	Y+8, r24	; 0x08
     d1e:	99 87       	std	Y+9, r25	; 0x09
     d20:	fa 85       	ldd	r31, Y+10	; 0x0a
     d22:	6f 2f       	mov	r22, r31
     d24:	70 e0       	ldi	r23, 0x00	; 0
     d26:	80 e0       	ldi	r24, 0x00	; 0
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	0e 94 60 12 	call	0x24c0	; 0x24c0 <__floatunsisf>
     d2e:	6a 87       	std	Y+10, r22	; 0x0a
     d30:	7b 87       	std	Y+11, r23	; 0x0b
     d32:	8c 87       	std	Y+12, r24	; 0x0c
     d34:	9d 87       	std	Y+13, r25	; 0x0d
     d36:	2e 81       	ldd	r18, Y+6	; 0x06
     d38:	3f 81       	ldd	r19, Y+7	; 0x07
     d3a:	48 85       	ldd	r20, Y+8	; 0x08
     d3c:	59 85       	ldd	r21, Y+9	; 0x09
     d3e:	0e 94 bc 12 	call	0x2578	; 0x2578 <fmin>
     d42:	9b 01       	movw	r18, r22
     d44:	ac 01       	movw	r20, r24
     d46:	69 81       	ldd	r22, Y+1	; 0x01
     d48:	7a 81       	ldd	r23, Y+2	; 0x02
     d4a:	8b 81       	ldd	r24, Y+3	; 0x03
     d4c:	9c 81       	ldd	r25, Y+4	; 0x04
     d4e:	0e 94 c5 11 	call	0x238a	; 0x238a <__addsf3>
     d52:	20 e0       	ldi	r18, 0x00	; 0
     d54:	30 e0       	ldi	r19, 0x00	; 0
     d56:	40 e8       	ldi	r20, 0x80	; 128
     d58:	5f e3       	ldi	r21, 0x3F	; 63
     d5a:	0e 94 c5 11 	call	0x238a	; 0x238a <__addsf3>
     d5e:	0e 94 31 12 	call	0x2462	; 0x2462 <__fixunssfsi>
     d62:	6e 87       	std	Y+14, r22	; 0x0e
     d64:	7f 87       	std	Y+15, r23	; 0x0f
     d66:	88 8b       	std	Y+16, r24	; 0x10
     d68:	99 8b       	std	Y+17, r25	; 0x11
     d6a:	21 e0       	ldi	r18, 0x01	; 1
     d6c:	c2 1a       	sub	r12, r18
     d6e:	d1 08       	sbc	r13, r1
     d70:	02 2d       	mov	r16, r2
     d72:	2d 81       	ldd	r18, Y+5	; 0x05
     d74:	a7 01       	movw	r20, r14
     d76:	6e 85       	ldd	r22, Y+14	; 0x0e
     d78:	7f 85       	ldd	r23, Y+15	; 0x0f
     d7a:	c6 01       	movw	r24, r12
     d7c:	0e 94 d1 05 	call	0xba2	; 0xba2 <v_line>
     d80:	2e 81       	ldd	r18, Y+6	; 0x06
     d82:	3f 81       	ldd	r19, Y+7	; 0x07
     d84:	48 85       	ldd	r20, Y+8	; 0x08
     d86:	59 85       	ldd	r21, Y+9	; 0x09
     d88:	6a 85       	ldd	r22, Y+10	; 0x0a
     d8a:	7b 85       	ldd	r23, Y+11	; 0x0b
     d8c:	8c 85       	ldd	r24, Y+12	; 0x0c
     d8e:	9d 85       	ldd	r25, Y+13	; 0x0d
     d90:	0e 94 9d 12 	call	0x253a	; 0x253a <fmax>
     d94:	9b 01       	movw	r18, r22
     d96:	ac 01       	movw	r20, r24
     d98:	69 81       	ldd	r22, Y+1	; 0x01
     d9a:	7a 81       	ldd	r23, Y+2	; 0x02
     d9c:	8b 81       	ldd	r24, Y+3	; 0x03
     d9e:	9c 81       	ldd	r25, Y+4	; 0x04
     da0:	0e 94 c4 11 	call	0x2388	; 0x2388 <__subsf3>
     da4:	0e 94 31 12 	call	0x2462	; 0x2462 <__fixunssfsi>
     da8:	69 83       	std	Y+1, r22	; 0x01
     daa:	7a 83       	std	Y+2, r23	; 0x02
     dac:	8b 83       	std	Y+3, r24	; 0x03
     dae:	9c 83       	std	Y+4, r25	; 0x04
     db0:	2d 81       	ldd	r18, Y+5	; 0x05
     db2:	a7 01       	movw	r20, r14
     db4:	69 81       	ldd	r22, Y+1	; 0x01
     db6:	7a 81       	ldd	r23, Y+2	; 0x02
     db8:	c6 01       	movw	r24, r12
     dba:	0e 94 d1 05 	call	0xba2	; 0xba2 <v_line>
     dbe:	3f ef       	ldi	r19, 0xFF	; 255
     dc0:	a3 1a       	sub	r10, r19
     dc2:	b3 0a       	sbc	r11, r19
     dc4:	2d 81       	ldd	r18, Y+5	; 0x05
     dc6:	a7 01       	movw	r20, r14
     dc8:	6e 85       	ldd	r22, Y+14	; 0x0e
     dca:	7f 85       	ldd	r23, Y+15	; 0x0f
     dcc:	c5 01       	movw	r24, r10
     dce:	0e 94 d1 05 	call	0xba2	; 0xba2 <v_line>
     dd2:	2d 81       	ldd	r18, Y+5	; 0x05
     dd4:	a7 01       	movw	r20, r14
     dd6:	69 81       	ldd	r22, Y+1	; 0x01
     dd8:	7a 81       	ldd	r23, Y+2	; 0x02
     dda:	c5 01       	movw	r24, r10
     ddc:	0e 94 d1 05 	call	0xba2	; 0xba2 <v_line>
     de0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     de2:	8f 5f       	subi	r24, 0xFF	; 255
     de4:	8b 8f       	std	Y+27, r24	; 0x1b
     de6:	88 2e       	mov	r8, r24
     de8:	91 2c       	mov	r9, r1
     dea:	3a 86       	std	Y+10, r3	; 0x0a
     dec:	aa 89       	ldd	r26, Y+18	; 0x12
     dee:	bb 89       	ldd	r27, Y+19	; 0x13
     df0:	8a 16       	cp	r8, r26
     df2:	9b 06       	cpc	r9, r27
     df4:	08 f4       	brcc	.+2      	; 0xdf8 <circle+0x206>
     df6:	39 cf       	rjmp	.-398    	; 0xc6a <circle+0x78>
     df8:	a3 2c       	mov	r10, r3
     dfa:	c3 01       	movw	r24, r6
     dfc:	32 01       	movw	r6, r4
     dfe:	2c 01       	movw	r4, r24
     e00:	02 c0       	rjmp	.+4      	; 0xe06 <circle+0x214>
     e02:	81 2c       	mov	r8, r1
     e04:	91 2c       	mov	r9, r1
     e06:	b1 2c       	mov	r11, r1
     e08:	73 01       	movw	r14, r6
     e0a:	b1 e0       	ldi	r27, 0x01	; 1
     e0c:	eb 1a       	sub	r14, r27
     e0e:	f1 08       	sbc	r15, r1
     e10:	e8 0c       	add	r14, r8
     e12:	f9 1c       	adc	r15, r9
     e14:	0a 8d       	ldd	r16, Y+26	; 0x1a
     e16:	2d 81       	ldd	r18, Y+5	; 0x05
     e18:	a5 01       	movw	r20, r10
     e1a:	b2 01       	movw	r22, r4
     e1c:	c7 01       	movw	r24, r14
     e1e:	0e 94 d1 05 	call	0xba2	; 0xba2 <v_line>
     e22:	62 01       	movw	r12, r4
     e24:	ca 18       	sub	r12, r10
     e26:	db 08       	sbc	r13, r11
     e28:	0a 8d       	ldd	r16, Y+26	; 0x1a
     e2a:	2d 81       	ldd	r18, Y+5	; 0x05
     e2c:	a5 01       	movw	r20, r10
     e2e:	b6 01       	movw	r22, r12
     e30:	c7 01       	movw	r24, r14
     e32:	0e 94 d1 05 	call	0xba2	; 0xba2 <v_line>
     e36:	73 01       	movw	r14, r6
     e38:	ef ef       	ldi	r30, 0xFF	; 255
     e3a:	ee 1a       	sub	r14, r30
     e3c:	fe 0a       	sbc	r15, r30
     e3e:	e8 18       	sub	r14, r8
     e40:	f9 08       	sbc	r15, r9
     e42:	0a 8d       	ldd	r16, Y+26	; 0x1a
     e44:	2d 81       	ldd	r18, Y+5	; 0x05
     e46:	a5 01       	movw	r20, r10
     e48:	b2 01       	movw	r22, r4
     e4a:	c7 01       	movw	r24, r14
     e4c:	0e 94 d1 05 	call	0xba2	; 0xba2 <v_line>
     e50:	0a 8d       	ldd	r16, Y+26	; 0x1a
     e52:	2d 81       	ldd	r18, Y+5	; 0x05
     e54:	a5 01       	movw	r20, r10
     e56:	b6 01       	movw	r22, r12
     e58:	c7 01       	movw	r24, r14
     e5a:	0e 94 d1 05 	call	0xba2	; 0xba2 <v_line>
     e5e:	6b 96       	adiw	r28, 0x1b	; 27
     e60:	0f b6       	in	r0, 0x3f	; 63
     e62:	f8 94       	cli
     e64:	de bf       	out	0x3e, r29	; 62
     e66:	0f be       	out	0x3f, r0	; 63
     e68:	cd bf       	out	0x3d, r28	; 61
     e6a:	df 91       	pop	r29
     e6c:	cf 91       	pop	r28
     e6e:	1f 91       	pop	r17
     e70:	0f 91       	pop	r16
     e72:	ff 90       	pop	r15
     e74:	ef 90       	pop	r14
     e76:	df 90       	pop	r13
     e78:	cf 90       	pop	r12
     e7a:	bf 90       	pop	r11
     e7c:	af 90       	pop	r10
     e7e:	9f 90       	pop	r9
     e80:	8f 90       	pop	r8
     e82:	7f 90       	pop	r7
     e84:	6f 90       	pop	r6
     e86:	5f 90       	pop	r5
     e88:	4f 90       	pop	r4
     e8a:	3f 90       	pop	r3
     e8c:	2f 90       	pop	r2
     e8e:	08 95       	ret

00000e90 <putIt>:
     e90:	0f 93       	push	r16
     e92:	1f 93       	push	r17
     e94:	cf 93       	push	r28
     e96:	df 93       	push	r29
     e98:	8c 01       	movw	r16, r24
     e9a:	cb 01       	movw	r24, r22
     e9c:	ea 01       	movw	r28, r20
     e9e:	0e 94 13 05 	call	0xa26	; 0xa26 <goto_col>
     ea2:	ce 01       	movw	r24, r28
     ea4:	0e 94 24 05 	call	0xa48	; 0xa48 <goto_row>
     ea8:	00 0f       	add	r16, r16
     eaa:	11 1f       	adc	r17, r17
     eac:	00 0f       	add	r16, r16
     eae:	11 1f       	adc	r17, r17
     eb0:	00 0f       	add	r16, r16
     eb2:	11 1f       	adc	r17, r17
     eb4:	e8 01       	movw	r28, r16
     eb6:	c8 53       	subi	r28, 0x38	; 56
     eb8:	de 4f       	sbci	r29, 0xFE	; 254
     eba:	00 53       	subi	r16, 0x30	; 48
     ebc:	1e 4f       	sbci	r17, 0xFE	; 254
     ebe:	fe 01       	movw	r30, r28
     ec0:	84 91       	lpm	r24, Z
     ec2:	0e 94 37 05 	call	0xa6e	; 0xa6e <glcd_write>
     ec6:	21 96       	adiw	r28, 0x01	; 1
     ec8:	c0 17       	cp	r28, r16
     eca:	d1 07       	cpc	r29, r17
     ecc:	c1 f7       	brne	.-16     	; 0xebe <putIt+0x2e>
     ece:	df 91       	pop	r29
     ed0:	cf 91       	pop	r28
     ed2:	1f 91       	pop	r17
     ed4:	0f 91       	pop	r16
     ed6:	08 95       	ret

00000ed8 <enlarge>:
     ed8:	44 23       	and	r20, r20
     eda:	e9 f0       	breq	.+58     	; 0xf16 <enlarge+0x3e>
     edc:	e8 2f       	mov	r30, r24
     ede:	f9 2f       	mov	r31, r25
     ee0:	30 e0       	ldi	r19, 0x00	; 0
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	78 e0       	ldi	r23, 0x08	; 8
     ee6:	50 e0       	ldi	r21, 0x00	; 0
     ee8:	13 c0       	rjmp	.+38     	; 0xf10 <enlarge+0x38>
     eea:	80 81       	ld	r24, Z
     eec:	86 95       	lsr	r24
     eee:	60 fd       	sbrc	r22, 0
     ef0:	02 c0       	rjmp	.+4      	; 0xef6 <enlarge+0x1e>
     ef2:	8c 93       	st	X, r24
     ef4:	02 c0       	rjmp	.+4      	; 0xefa <enlarge+0x22>
     ef6:	80 68       	ori	r24, 0x80	; 128
     ef8:	8c 93       	st	X, r24
     efa:	9f 5f       	subi	r25, 0xFF	; 255
     efc:	94 13       	cpse	r25, r20
     efe:	02 c0       	rjmp	.+4      	; 0xf04 <enlarge+0x2c>
     f00:	66 95       	lsr	r22
     f02:	95 2f       	mov	r25, r21
     f04:	21 50       	subi	r18, 0x01	; 1
     f06:	89 f7       	brne	.-30     	; 0xeea <enlarge+0x12>
     f08:	3f 5f       	subi	r19, 0xFF	; 255
     f0a:	31 96       	adiw	r30, 0x01	; 1
     f0c:	34 17       	cp	r19, r20
     f0e:	19 f0       	breq	.+6      	; 0xf16 <enlarge+0x3e>
     f10:	27 2f       	mov	r18, r23
     f12:	df 01       	movw	r26, r30
     f14:	ea cf       	rjmp	.-44     	; 0xeea <enlarge+0x12>
     f16:	08 95       	ret

00000f18 <putItSz>:
     f18:	2f 92       	push	r2
     f1a:	3f 92       	push	r3
     f1c:	4f 92       	push	r4
     f1e:	5f 92       	push	r5
     f20:	6f 92       	push	r6
     f22:	7f 92       	push	r7
     f24:	8f 92       	push	r8
     f26:	9f 92       	push	r9
     f28:	af 92       	push	r10
     f2a:	bf 92       	push	r11
     f2c:	cf 92       	push	r12
     f2e:	df 92       	push	r13
     f30:	ef 92       	push	r14
     f32:	ff 92       	push	r15
     f34:	0f 93       	push	r16
     f36:	1f 93       	push	r17
     f38:	cf 93       	push	r28
     f3a:	df 93       	push	r29
     f3c:	cd b7       	in	r28, 0x3d	; 61
     f3e:	de b7       	in	r29, 0x3e	; 62
     f40:	c6 54       	subi	r28, 0x46	; 70
     f42:	d1 09       	sbc	r29, r1
     f44:	0f b6       	in	r0, 0x3f	; 63
     f46:	f8 94       	cli
     f48:	de bf       	out	0x3e, r29	; 62
     f4a:	0f be       	out	0x3f, r0	; 63
     f4c:	cd bf       	out	0x3d, r28	; 61
     f4e:	8c 01       	movw	r16, r24
     f50:	86 2f       	mov	r24, r22
     f52:	97 2f       	mov	r25, r23
     f54:	1a 01       	movw	r2, r20
     f56:	42 2e       	mov	r4, r18
     f58:	96 2e       	mov	r9, r22
     f5a:	87 2e       	mov	r8, r23
     f5c:	0e 94 13 05 	call	0xa26	; 0xa26 <goto_col>
     f60:	51 01       	movw	r10, r2
     f62:	c1 01       	movw	r24, r2
     f64:	0e 94 24 05 	call	0xa48	; 0xa48 <goto_row>
     f68:	00 0f       	add	r16, r16
     f6a:	11 1f       	adc	r17, r17
     f6c:	00 0f       	add	r16, r16
     f6e:	11 1f       	adc	r17, r17
     f70:	00 0f       	add	r16, r16
     f72:	11 1f       	adc	r17, r17
     f74:	c8 01       	movw	r24, r16
     f76:	88 53       	subi	r24, 0x38	; 56
     f78:	9e 4f       	sbci	r25, 0xFE	; 254
     f7a:	7c 01       	movw	r14, r24
     f7c:	fe 01       	movw	r30, r28
     f7e:	31 96       	adiw	r30, 0x01	; 1
     f80:	23 96       	adiw	r28, 0x03	; 3
     f82:	ff af       	std	Y+63, r31	; 0x3f
     f84:	ee af       	std	Y+62, r30	; 0x3e
     f86:	23 97       	sbiw	r28, 0x03	; 3
     f88:	6e 01       	movw	r12, r28
     f8a:	f1 e4       	ldi	r31, 0x41	; 65
     f8c:	cf 0e       	add	r12, r31
     f8e:	d1 1c       	adc	r13, r1
     f90:	23 96       	adiw	r28, 0x03	; 3
     f92:	0e ad       	ldd	r16, Y+62	; 0x3e
     f94:	1f ad       	ldd	r17, Y+63	; 0x3f
     f96:	23 97       	sbiw	r28, 0x03	; 3
     f98:	f7 01       	movw	r30, r14
     f9a:	64 91       	lpm	r22, Z
     f9c:	44 2d       	mov	r20, r4
     f9e:	c8 01       	movw	r24, r16
     fa0:	0e 94 6c 07 	call	0xed8	; 0xed8 <enlarge>
     fa4:	ff ef       	ldi	r31, 0xFF	; 255
     fa6:	ef 1a       	sub	r14, r31
     fa8:	ff 0a       	sbc	r15, r31
     faa:	08 5f       	subi	r16, 0xF8	; 248
     fac:	1f 4f       	sbci	r17, 0xFF	; 255
     fae:	0c 15       	cp	r16, r12
     fb0:	1d 05       	cpc	r17, r13
     fb2:	91 f7       	brne	.-28     	; 0xf98 <putItSz+0x80>
     fb4:	44 20       	and	r4, r4
     fb6:	09 f4       	brne	.+2      	; 0xfba <putItSz+0xa2>
     fb8:	62 c0       	rjmp	.+196    	; 0x107e <putItSz+0x166>
     fba:	66 24       	eor	r6, r6
     fbc:	6a 94       	dec	r6
     fbe:	64 0c       	add	r6, r4
     fc0:	71 2c       	mov	r7, r1
     fc2:	8f ef       	ldi	r24, 0xFF	; 255
     fc4:	68 1a       	sub	r6, r24
     fc6:	78 0a       	sbc	r7, r24
     fc8:	f5 01       	movw	r30, r10
     fca:	e6 0d       	add	r30, r6
     fcc:	f7 1d       	adc	r31, r7
     fce:	27 96       	adiw	r28, 0x07	; 7
     fd0:	ff af       	std	Y+63, r31	; 0x3f
     fd2:	ee af       	std	Y+62, r30	; 0x3e
     fd4:	27 97       	sbiw	r28, 0x07	; 7
     fd6:	51 2c       	mov	r5, r1
     fd8:	24 96       	adiw	r28, 0x04	; 4
     fda:	9f ae       	std	Y+63, r9	; 0x3f
     fdc:	24 97       	sbiw	r28, 0x04	; 4
     fde:	25 96       	adiw	r28, 0x05	; 5
     fe0:	8f ae       	std	Y+63, r8	; 0x3f
     fe2:	25 97       	sbiw	r28, 0x05	; 5
     fe4:	3a c0       	rjmp	.+116    	; 0x105a <putItSz+0x142>
     fe6:	00 34       	cpi	r16, 0x40	; 64
     fe8:	11 05       	cpc	r17, r1
     fea:	29 f4       	brne	.+10     	; 0xff6 <putItSz+0xde>
     fec:	b1 01       	movw	r22, r2
     fee:	80 e4       	ldi	r24, 0x40	; 64
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	0e 94 2c 05 	call	0xa58	; 0xa58 <goto_xy>
     ff6:	f7 01       	movw	r30, r14
     ff8:	80 81       	ld	r24, Z
     ffa:	0e 94 37 05 	call	0xa6e	; 0xa6e <glcd_write>
     ffe:	0f 5f       	subi	r16, 0xFF	; 255
    1000:	1f 4f       	sbci	r17, 0xFF	; 255
    1002:	0c 15       	cp	r16, r12
    1004:	1d 05       	cpc	r17, r13
    1006:	79 f7       	brne	.-34     	; 0xfe6 <putItSz+0xce>
    1008:	f8 e0       	ldi	r31, 0x08	; 8
    100a:	ef 0e       	add	r14, r31
    100c:	f1 1c       	adc	r15, r1
    100e:	a4 0c       	add	r10, r4
    1010:	b5 1c       	adc	r11, r5
    1012:	8e 14       	cp	r8, r14
    1014:	9f 04       	cpc	r9, r15
    1016:	29 f0       	breq	.+10     	; 0x1022 <putItSz+0x10a>
    1018:	65 01       	movw	r12, r10
    101a:	c6 0c       	add	r12, r6
    101c:	d7 1c       	adc	r13, r7
    101e:	85 01       	movw	r16, r10
    1020:	e2 cf       	rjmp	.-60     	; 0xfe6 <putItSz+0xce>
    1022:	8f ef       	ldi	r24, 0xFF	; 255
    1024:	28 1a       	sub	r2, r24
    1026:	38 0a       	sbc	r3, r24
    1028:	b1 01       	movw	r22, r2
    102a:	24 96       	adiw	r28, 0x04	; 4
    102c:	8f ad       	ldd	r24, Y+63	; 0x3f
    102e:	24 97       	sbiw	r28, 0x04	; 4
    1030:	25 96       	adiw	r28, 0x05	; 5
    1032:	9f ad       	ldd	r25, Y+63	; 0x3f
    1034:	25 97       	sbiw	r28, 0x05	; 5
    1036:	0e 94 2c 05 	call	0xa58	; 0xa58 <goto_xy>
    103a:	23 96       	adiw	r28, 0x03	; 3
    103c:	ee ad       	ldd	r30, Y+62	; 0x3e
    103e:	ff ad       	ldd	r31, Y+63	; 0x3f
    1040:	23 97       	sbiw	r28, 0x03	; 3
    1042:	31 96       	adiw	r30, 0x01	; 1
    1044:	23 96       	adiw	r28, 0x03	; 3
    1046:	ff af       	std	Y+63, r31	; 0x3f
    1048:	ee af       	std	Y+62, r30	; 0x3e
    104a:	23 97       	sbiw	r28, 0x03	; 3
    104c:	27 96       	adiw	r28, 0x07	; 7
    104e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1050:	9f ad       	ldd	r25, Y+63	; 0x3f
    1052:	27 97       	sbiw	r28, 0x07	; 7
    1054:	28 16       	cp	r2, r24
    1056:	39 06       	cpc	r3, r25
    1058:	91 f0       	breq	.+36     	; 0x107e <putItSz+0x166>
    105a:	23 96       	adiw	r28, 0x03	; 3
    105c:	8e ac       	ldd	r8, Y+62	; 0x3e
    105e:	9f ac       	ldd	r9, Y+63	; 0x3f
    1060:	23 97       	sbiw	r28, 0x03	; 3
    1062:	90 e4       	ldi	r25, 0x40	; 64
    1064:	89 0e       	add	r8, r25
    1066:	91 1c       	adc	r9, r1
    1068:	24 96       	adiw	r28, 0x04	; 4
    106a:	af ac       	ldd	r10, Y+63	; 0x3f
    106c:	24 97       	sbiw	r28, 0x04	; 4
    106e:	25 96       	adiw	r28, 0x05	; 5
    1070:	bf ac       	ldd	r11, Y+63	; 0x3f
    1072:	25 97       	sbiw	r28, 0x05	; 5
    1074:	23 96       	adiw	r28, 0x03	; 3
    1076:	ee ac       	ldd	r14, Y+62	; 0x3e
    1078:	ff ac       	ldd	r15, Y+63	; 0x3f
    107a:	23 97       	sbiw	r28, 0x03	; 3
    107c:	cd cf       	rjmp	.-102    	; 0x1018 <putItSz+0x100>
    107e:	ca 5b       	subi	r28, 0xBA	; 186
    1080:	df 4f       	sbci	r29, 0xFF	; 255
    1082:	0f b6       	in	r0, 0x3f	; 63
    1084:	f8 94       	cli
    1086:	de bf       	out	0x3e, r29	; 62
    1088:	0f be       	out	0x3f, r0	; 63
    108a:	cd bf       	out	0x3d, r28	; 61
    108c:	df 91       	pop	r29
    108e:	cf 91       	pop	r28
    1090:	1f 91       	pop	r17
    1092:	0f 91       	pop	r16
    1094:	ff 90       	pop	r15
    1096:	ef 90       	pop	r14
    1098:	df 90       	pop	r13
    109a:	cf 90       	pop	r12
    109c:	bf 90       	pop	r11
    109e:	af 90       	pop	r10
    10a0:	9f 90       	pop	r9
    10a2:	8f 90       	pop	r8
    10a4:	7f 90       	pop	r7
    10a6:	6f 90       	pop	r6
    10a8:	5f 90       	pop	r5
    10aa:	4f 90       	pop	r4
    10ac:	3f 90       	pop	r3
    10ae:	2f 90       	pop	r2
    10b0:	08 95       	ret

000010b2 <glcd_putchar>:
    10b2:	ef 92       	push	r14
    10b4:	ff 92       	push	r15
    10b6:	0f 93       	push	r16
    10b8:	1f 93       	push	r17
    10ba:	cf 93       	push	r28
    10bc:	df 93       	push	r29
    10be:	c8 2f       	mov	r28, r24
    10c0:	d6 2f       	mov	r29, r22
    10c2:	f7 2e       	mov	r15, r23
    10c4:	14 2f       	mov	r17, r20
    10c6:	e5 2e       	mov	r14, r21
    10c8:	21 30       	cpi	r18, 0x01	; 1
    10ca:	09 f0       	breq	.+2      	; 0x10ce <glcd_putchar+0x1c>
    10cc:	85 c0       	rjmp	.+266    	; 0x11d8 <glcd_putchar+0x126>
    10ce:	8e 38       	cpi	r24, 0x8E	; 142
    10d0:	79 f0       	breq	.+30     	; 0x10f0 <glcd_putchar+0x3e>
    10d2:	30 f4       	brcc	.+12     	; 0x10e0 <glcd_putchar+0x2e>
    10d4:	81 38       	cpi	r24, 0x81	; 129
    10d6:	09 f4       	brne	.+2      	; 0x10da <glcd_putchar+0x28>
    10d8:	84 c0       	rjmp	.+264    	; 0x11e2 <glcd_putchar+0x130>
    10da:	8d 38       	cpi	r24, 0x8D	; 141
    10dc:	59 f0       	breq	.+22     	; 0x10f4 <glcd_putchar+0x42>
    10de:	0c c0       	rjmp	.+24     	; 0x10f8 <glcd_putchar+0x46>
    10e0:	80 39       	cpi	r24, 0x90	; 144
    10e2:	21 f0       	breq	.+8      	; 0x10ec <glcd_putchar+0x3a>
    10e4:	88 39       	cpi	r24, 0x98	; 152
    10e6:	09 f4       	brne	.+2      	; 0x10ea <glcd_putchar+0x38>
    10e8:	7e c0       	rjmp	.+252    	; 0x11e6 <glcd_putchar+0x134>
    10ea:	06 c0       	rjmp	.+12     	; 0x10f8 <glcd_putchar+0x46>
    10ec:	cb ef       	ldi	r28, 0xFB	; 251
    10ee:	7c c0       	rjmp	.+248    	; 0x11e8 <glcd_putchar+0x136>
    10f0:	cd ef       	ldi	r28, 0xFD	; 253
    10f2:	7a c0       	rjmp	.+244    	; 0x11e8 <glcd_putchar+0x136>
    10f4:	ce ef       	ldi	r28, 0xFE	; 254
    10f6:	78 c0       	rjmp	.+240    	; 0x11e8 <glcd_putchar+0x136>
    10f8:	c1 3c       	cpi	r28, 0xC1	; 193
    10fa:	08 f4       	brcc	.+2      	; 0x10fe <glcd_putchar+0x4c>
    10fc:	8a c0       	rjmp	.+276    	; 0x1212 <glcd_putchar+0x160>
    10fe:	80 c0       	rjmp	.+256    	; 0x1200 <glcd_putchar+0x14e>
    1100:	81 5c       	subi	r24, 0xC1	; 193
    1102:	91 09       	sbc	r25, r1
    1104:	fc 01       	movw	r30, r24
    1106:	ee 0f       	add	r30, r30
    1108:	ff 1f       	adc	r31, r31
    110a:	e8 0f       	add	r30, r24
    110c:	f9 1f       	adc	r31, r25
    110e:	ee 0f       	add	r30, r30
    1110:	ff 1f       	adc	r31, r31
    1112:	e7 5a       	subi	r30, 0xA7	; 167
    1114:	ff 4f       	sbci	r31, 0xFF	; 255
    1116:	e4 91       	lpm	r30, Z
    1118:	ee 23       	and	r30, r30
    111a:	59 f1       	breq	.+86     	; 0x1172 <glcd_putchar+0xc0>
    111c:	2c 2f       	mov	r18, r28
    111e:	30 e0       	ldi	r19, 0x00	; 0
    1120:	21 5c       	subi	r18, 0xC1	; 193
    1122:	31 09       	sbc	r19, r1
    1124:	f9 01       	movw	r30, r18
    1126:	ee 0f       	add	r30, r30
    1128:	ff 1f       	adc	r31, r31
    112a:	e2 0f       	add	r30, r18
    112c:	f3 1f       	adc	r31, r19
    112e:	ee 0f       	add	r30, r30
    1130:	ff 1f       	adc	r31, r31
    1132:	e8 5a       	subi	r30, 0xA8	; 168
    1134:	ff 4f       	sbci	r31, 0xFF	; 255
    1136:	e4 91       	lpm	r30, Z
    1138:	ee 23       	and	r30, r30
    113a:	d9 f0       	breq	.+54     	; 0x1172 <glcd_putchar+0xc0>
    113c:	fc 01       	movw	r30, r24
    113e:	ee 0f       	add	r30, r30
    1140:	ff 1f       	adc	r31, r31
    1142:	e8 0f       	add	r30, r24
    1144:	f9 1f       	adc	r31, r25
    1146:	ee 0f       	add	r30, r30
    1148:	ff 1f       	adc	r31, r31
    114a:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <stat>
    114e:	e8 0f       	add	r30, r24
    1150:	f1 1d       	adc	r31, r1
    1152:	eb 5a       	subi	r30, 0xAB	; 171
    1154:	ff 4f       	sbci	r31, 0xFF	; 255
    1156:	84 91       	lpm	r24, Z
    1158:	40 91 e2 02 	lds	r20, 0x02E2	; 0x8002e2 <prevY>
    115c:	50 e0       	ldi	r21, 0x00	; 0
    115e:	60 91 e3 02 	lds	r22, 0x02E3	; 0x8002e3 <prevX>
    1162:	70 e0       	ldi	r23, 0x00	; 0
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	0e 94 48 07 	call	0xe90	; 0xe90 <putIt>
    116a:	82 e0       	ldi	r24, 0x02	; 2
    116c:	80 93 e4 02 	sts	0x02E4, r24	; 0x8002e4 <stat>
    1170:	04 c0       	rjmp	.+8      	; 0x117a <glcd_putchar+0xc8>
    1172:	10 92 e4 02 	sts	0x02E4, r1	; 0x8002e4 <stat>
    1176:	c1 3c       	cpi	r28, 0xC1	; 193
    1178:	d8 f0       	brcs	.+54     	; 0x11b0 <glcd_putchar+0xfe>
    117a:	8c 2f       	mov	r24, r28
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	81 5c       	subi	r24, 0xC1	; 193
    1180:	91 09       	sbc	r25, r1
    1182:	fc 01       	movw	r30, r24
    1184:	ee 0f       	add	r30, r30
    1186:	ff 1f       	adc	r31, r31
    1188:	e8 0f       	add	r30, r24
    118a:	f9 1f       	adc	r31, r25
    118c:	ee 0f       	add	r30, r30
    118e:	ff 1f       	adc	r31, r31
    1190:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <stat>
    1194:	e8 0f       	add	r30, r24
    1196:	f1 1d       	adc	r31, r1
    1198:	ec 5a       	subi	r30, 0xAC	; 172
    119a:	ff 4f       	sbci	r31, 0xFF	; 255
    119c:	84 91       	lpm	r24, Z
    119e:	20 2f       	mov	r18, r16
    11a0:	41 2f       	mov	r20, r17
    11a2:	5e 2d       	mov	r21, r14
    11a4:	6d 2f       	mov	r22, r29
    11a6:	7f 2d       	mov	r23, r15
    11a8:	90 e0       	ldi	r25, 0x00	; 0
    11aa:	0e 94 8c 07 	call	0xf18	; 0xf18 <putItSz>
    11ae:	09 c0       	rjmp	.+18     	; 0x11c2 <glcd_putchar+0x110>
    11b0:	20 2f       	mov	r18, r16
    11b2:	41 2f       	mov	r20, r17
    11b4:	5e 2d       	mov	r21, r14
    11b6:	6d 2f       	mov	r22, r29
    11b8:	7f 2d       	mov	r23, r15
    11ba:	8c 2f       	mov	r24, r28
    11bc:	90 e0       	ldi	r25, 0x00	; 0
    11be:	0e 94 8c 07 	call	0xf18	; 0xf18 <putItSz>
    11c2:	8c 2f       	mov	r24, r28
    11c4:	90 e0       	ldi	r25, 0x00	; 0
    11c6:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <prevLet+0x1>
    11ca:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <prevLet>
    11ce:	d0 93 e3 02 	sts	0x02E3, r29	; 0x8002e3 <prevX>
    11d2:	10 93 e2 02 	sts	0x02E2, r17	; 0x8002e2 <prevY>
    11d6:	20 c0       	rjmp	.+64     	; 0x1218 <glcd_putchar+0x166>
    11d8:	20 2f       	mov	r18, r16
    11da:	90 e0       	ldi	r25, 0x00	; 0
    11dc:	0e 94 8c 07 	call	0xf18	; 0xf18 <putItSz>
    11e0:	1b c0       	rjmp	.+54     	; 0x1218 <glcd_putchar+0x166>
    11e2:	ca ef       	ldi	r28, 0xFA	; 250
    11e4:	01 c0       	rjmp	.+2      	; 0x11e8 <glcd_putchar+0x136>
    11e6:	cc ef       	ldi	r28, 0xFC	; 252
    11e8:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <prevLet>
    11ec:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <prevLet+0x1>
    11f0:	81 3c       	cpi	r24, 0xC1	; 193
    11f2:	91 05       	cpc	r25, r1
    11f4:	0c f0       	brlt	.+2      	; 0x11f8 <glcd_putchar+0x146>
    11f6:	84 cf       	rjmp	.-248    	; 0x1100 <glcd_putchar+0x4e>
    11f8:	bc cf       	rjmp	.-136    	; 0x1172 <glcd_putchar+0xc0>
    11fa:	10 92 e4 02 	sts	0x02E4, r1	; 0x8002e4 <stat>
    11fe:	bd cf       	rjmp	.-134    	; 0x117a <glcd_putchar+0xc8>
    1200:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <prevLet>
    1204:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <prevLet+0x1>
    1208:	81 3c       	cpi	r24, 0xC1	; 193
    120a:	91 05       	cpc	r25, r1
    120c:	0c f0       	brlt	.+2      	; 0x1210 <glcd_putchar+0x15e>
    120e:	78 cf       	rjmp	.-272    	; 0x1100 <glcd_putchar+0x4e>
    1210:	f4 cf       	rjmp	.-24     	; 0x11fa <glcd_putchar+0x148>
    1212:	10 92 e4 02 	sts	0x02E4, r1	; 0x8002e4 <stat>
    1216:	cc cf       	rjmp	.-104    	; 0x11b0 <glcd_putchar+0xfe>
    1218:	df 91       	pop	r29
    121a:	cf 91       	pop	r28
    121c:	1f 91       	pop	r17
    121e:	0f 91       	pop	r16
    1220:	ff 90       	pop	r15
    1222:	ef 90       	pop	r14
    1224:	08 95       	ret

00001226 <glcd_puts>:
    1226:	2f 92       	push	r2
    1228:	3f 92       	push	r3
    122a:	4f 92       	push	r4
    122c:	5f 92       	push	r5
    122e:	6f 92       	push	r6
    1230:	7f 92       	push	r7
    1232:	8f 92       	push	r8
    1234:	9f 92       	push	r9
    1236:	af 92       	push	r10
    1238:	bf 92       	push	r11
    123a:	cf 92       	push	r12
    123c:	df 92       	push	r13
    123e:	ef 92       	push	r14
    1240:	ff 92       	push	r15
    1242:	0f 93       	push	r16
    1244:	1f 93       	push	r17
    1246:	cf 93       	push	r28
    1248:	df 93       	push	r29
    124a:	cd b7       	in	r28, 0x3d	; 61
    124c:	de b7       	in	r29, 0x3e	; 62
    124e:	29 97       	sbiw	r28, 0x09	; 9
    1250:	0f b6       	in	r0, 0x3f	; 63
    1252:	f8 94       	cli
    1254:	de bf       	out	0x3e, r29	; 62
    1256:	0f be       	out	0x3f, r0	; 63
    1258:	cd bf       	out	0x3d, r28	; 61
    125a:	6c 01       	movw	r12, r24
    125c:	79 87       	std	Y+9, r23	; 0x09
    125e:	68 87       	std	Y+8, r22	; 0x08
    1260:	2a 01       	movw	r4, r20
    1262:	29 83       	std	Y+1, r18	; 0x01
    1264:	0a 83       	std	Y+2, r16	; 0x02
    1266:	0e 2c       	mov	r0, r14
    1268:	00 0c       	add	r0, r0
    126a:	ff 08       	sbc	r15, r15
    126c:	60 2e       	mov	r6, r16
    126e:	71 2c       	mov	r7, r1
    1270:	c7 01       	movw	r24, r14
    1272:	08 96       	adiw	r24, 0x08	; 8
    1274:	86 9d       	mul	r24, r6
    1276:	40 01       	movw	r8, r0
    1278:	87 9d       	mul	r24, r7
    127a:	90 0c       	add	r9, r0
    127c:	96 9d       	mul	r25, r6
    127e:	90 0c       	add	r9, r0
    1280:	11 24       	eor	r1, r1
    1282:	80 e1       	ldi	r24, 0x10	; 16
    1284:	90 e0       	ldi	r25, 0x00	; 0
    1286:	5c 01       	movw	r10, r24
    1288:	a6 18       	sub	r10, r6
    128a:	b7 08       	sbc	r11, r7
    128c:	aa 0c       	add	r10, r10
    128e:	bb 1c       	adc	r11, r11
    1290:	aa 0c       	add	r10, r10
    1292:	bb 1c       	adc	r11, r11
    1294:	aa 0c       	add	r10, r10
    1296:	bb 1c       	adc	r11, r11
    1298:	10 e0       	ldi	r17, 0x00	; 0
    129a:	21 2c       	mov	r2, r1
    129c:	31 2c       	mov	r3, r1
    129e:	fc 82       	std	Y+4, r15	; 0x04
    12a0:	eb 82       	std	Y+3, r14	; 0x03
    12a2:	f2 2e       	mov	r15, r18
    12a4:	e0 2e       	mov	r14, r16
    12a6:	19 c0       	rjmp	.+50     	; 0x12da <glcd_puts+0xb4>
    12a8:	f6 01       	movw	r30, r12
    12aa:	e8 0f       	add	r30, r24
    12ac:	f9 1f       	adc	r31, r25
    12ae:	0e 2d       	mov	r16, r14
    12b0:	20 e0       	ldi	r18, 0x00	; 0
    12b2:	a2 01       	movw	r20, r4
    12b4:	68 85       	ldd	r22, Y+8	; 0x08
    12b6:	79 85       	ldd	r23, Y+9	; 0x09
    12b8:	80 81       	ld	r24, Z
    12ba:	0e 94 59 08 	call	0x10b2	; 0x10b2 <glcd_putchar>
    12be:	28 85       	ldd	r18, Y+8	; 0x08
    12c0:	39 85       	ldd	r19, Y+9	; 0x09
    12c2:	28 0d       	add	r18, r8
    12c4:	39 1d       	adc	r19, r9
    12c6:	39 87       	std	Y+9, r19	; 0x09
    12c8:	28 87       	std	Y+8, r18	; 0x08
    12ca:	a2 16       	cp	r10, r18
    12cc:	b3 06       	cpc	r11, r19
    12ce:	24 f4       	brge	.+8      	; 0x12d8 <glcd_puts+0xb2>
    12d0:	46 0c       	add	r4, r6
    12d2:	57 1c       	adc	r5, r7
    12d4:	28 86       	std	Y+8, r2	; 0x08
    12d6:	39 86       	std	Y+9, r3	; 0x09
    12d8:	1f 5f       	subi	r17, 0xFF	; 255
    12da:	81 2f       	mov	r24, r17
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	f6 01       	movw	r30, r12
    12e0:	01 90       	ld	r0, Z+
    12e2:	00 20       	and	r0, r0
    12e4:	e9 f7       	brne	.-6      	; 0x12e0 <glcd_puts+0xba>
    12e6:	31 97       	sbiw	r30, 0x01	; 1
    12e8:	ec 19       	sub	r30, r12
    12ea:	fd 09       	sbc	r31, r13
    12ec:	8e 17       	cp	r24, r30
    12ee:	9f 07       	cpc	r25, r31
    12f0:	30 f1       	brcs	.+76     	; 0x133e <glcd_puts+0x118>
    12f2:	eb 80       	ldd	r14, Y+3	; 0x03
    12f4:	fc 80       	ldd	r15, Y+4	; 0x04
    12f6:	22 24       	eor	r2, r2
    12f8:	33 24       	eor	r3, r3
    12fa:	26 18       	sub	r2, r6
    12fc:	37 08       	sbc	r3, r7
    12fe:	22 0c       	add	r2, r2
    1300:	33 1c       	adc	r3, r3
    1302:	22 0c       	add	r2, r2
    1304:	33 1c       	adc	r3, r3
    1306:	22 0c       	add	r2, r2
    1308:	33 1c       	adc	r3, r3
    130a:	88 ef       	ldi	r24, 0xF8	; 248
    130c:	9f ef       	ldi	r25, 0xFF	; 255
    130e:	8e 19       	sub	r24, r14
    1310:	9f 09       	sbc	r25, r15
    1312:	68 9e       	mul	r6, r24
    1314:	f0 01       	movw	r30, r0
    1316:	69 9e       	mul	r6, r25
    1318:	f0 0d       	add	r31, r0
    131a:	78 9e       	mul	r7, r24
    131c:	f0 0d       	add	r31, r0
    131e:	11 24       	eor	r1, r1
    1320:	ff 83       	std	Y+7, r31	; 0x07
    1322:	ee 83       	std	Y+6, r30	; 0x06
    1324:	43 01       	movw	r8, r6
    1326:	88 0c       	add	r8, r8
    1328:	99 1c       	adc	r9, r9
    132a:	88 0c       	add	r8, r8
    132c:	99 1c       	adc	r9, r9
    132e:	88 0c       	add	r8, r8
    1330:	99 1c       	adc	r9, r9
    1332:	ff ef       	ldi	r31, 0xFF	; 255
    1334:	8f 1a       	sub	r8, r31
    1336:	9f 0a       	sbc	r9, r31
    1338:	ab 82       	std	Y+3, r10	; 0x03
    133a:	bd 82       	std	Y+5, r11	; 0x05
    133c:	3d c0       	rjmp	.+122    	; 0x13b8 <glcd_puts+0x192>
    133e:	ff 20       	and	r15, r15
    1340:	09 f4       	brne	.+2      	; 0x1344 <glcd_puts+0x11e>
    1342:	b2 cf       	rjmp	.-156    	; 0x12a8 <glcd_puts+0x82>
    1344:	eb 80       	ldd	r14, Y+3	; 0x03
    1346:	fc 80       	ldd	r15, Y+4	; 0x04
    1348:	d6 cf       	rjmp	.-84     	; 0x12f6 <glcd_puts+0xd0>
    134a:	76 01       	movw	r14, r12
    134c:	e2 0e       	add	r14, r18
    134e:	f3 1e       	adc	r15, r19
    1350:	f7 01       	movw	r30, r14
    1352:	80 81       	ld	r24, Z
    1354:	81 3e       	cpi	r24, 0xE1	; 225
    1356:	71 f4       	brne	.+28     	; 0x1374 <glcd_puts+0x14e>
    1358:	f7 01       	movw	r30, r14
    135a:	91 81       	ldd	r25, Z+1	; 0x01
    135c:	97 3c       	cpi	r25, 0xC7	; 199
    135e:	09 f4       	brne	.+2      	; 0x1362 <glcd_puts+0x13c>
    1360:	42 c0       	rjmp	.+132    	; 0x13e6 <glcd_puts+0x1c0>
    1362:	93 3c       	cpi	r25, 0xC3	; 195
    1364:	09 f4       	brne	.+2      	; 0x1368 <glcd_puts+0x142>
    1366:	41 c0       	rjmp	.+130    	; 0x13ea <glcd_puts+0x1c4>
    1368:	92 3c       	cpi	r25, 0xC2	; 194
    136a:	09 f4       	brne	.+2      	; 0x136e <glcd_puts+0x148>
    136c:	40 c0       	rjmp	.+128    	; 0x13ee <glcd_puts+0x1c8>
    136e:	95 3c       	cpi	r25, 0xC5	; 197
    1370:	09 f4       	brne	.+2      	; 0x1374 <glcd_puts+0x14e>
    1372:	3f c0       	rjmp	.+126    	; 0x13f2 <glcd_puts+0x1cc>
    1374:	a8 84       	ldd	r10, Y+8	; 0x08
    1376:	b9 84       	ldd	r11, Y+9	; 0x09
    1378:	a2 0c       	add	r10, r2
    137a:	b3 1c       	adc	r11, r3
    137c:	0a 81       	ldd	r16, Y+2	; 0x02
    137e:	21 e0       	ldi	r18, 0x01	; 1
    1380:	a2 01       	movw	r20, r4
    1382:	b5 01       	movw	r22, r10
    1384:	0e 94 59 08 	call	0x10b2	; 0x10b2 <glcd_putchar>
    1388:	f7 01       	movw	r30, r14
    138a:	80 81       	ld	r24, Z
    138c:	80 32       	cpi	r24, 0x20	; 32
    138e:	31 f4       	brne	.+12     	; 0x139c <glcd_puts+0x176>
    1390:	ae 80       	ldd	r10, Y+6	; 0x06
    1392:	bf 80       	ldd	r11, Y+7	; 0x07
    1394:	28 85       	ldd	r18, Y+8	; 0x08
    1396:	39 85       	ldd	r19, Y+9	; 0x09
    1398:	a2 0e       	add	r10, r18
    139a:	b3 1e       	adc	r11, r19
    139c:	1f 5f       	subi	r17, 0xFF	; 255
    139e:	b9 86       	std	Y+9, r11	; 0x09
    13a0:	a8 86       	std	Y+8, r10	; 0x08
    13a2:	88 85       	ldd	r24, Y+8	; 0x08
    13a4:	99 85       	ldd	r25, Y+9	; 0x09
    13a6:	88 15       	cp	r24, r8
    13a8:	99 05       	cpc	r25, r9
    13aa:	34 f4       	brge	.+12     	; 0x13b8 <glcd_puts+0x192>
    13ac:	46 0c       	add	r4, r6
    13ae:	57 1c       	adc	r5, r7
    13b0:	9b 81       	ldd	r25, Y+3	; 0x03
    13b2:	98 87       	std	Y+8, r25	; 0x08
    13b4:	ed 81       	ldd	r30, Y+5	; 0x05
    13b6:	e9 87       	std	Y+9, r30	; 0x09
    13b8:	21 2f       	mov	r18, r17
    13ba:	30 e0       	ldi	r19, 0x00	; 0
    13bc:	f6 01       	movw	r30, r12
    13be:	01 90       	ld	r0, Z+
    13c0:	00 20       	and	r0, r0
    13c2:	e9 f7       	brne	.-6      	; 0x13be <glcd_puts+0x198>
    13c4:	31 97       	sbiw	r30, 0x01	; 1
    13c6:	ec 19       	sub	r30, r12
    13c8:	fd 09       	sbc	r31, r13
    13ca:	2e 17       	cp	r18, r30
    13cc:	3f 07       	cpc	r19, r31
    13ce:	20 f4       	brcc	.+8      	; 0x13d8 <glcd_puts+0x1b2>
    13d0:	f9 81       	ldd	r31, Y+1	; 0x01
    13d2:	f1 30       	cpi	r31, 0x01	; 1
    13d4:	09 f4       	brne	.+2      	; 0x13d8 <glcd_puts+0x1b2>
    13d6:	b9 cf       	rjmp	.-142    	; 0x134a <glcd_puts+0x124>
    13d8:	81 ec       	ldi	r24, 0xC1	; 193
    13da:	90 e0       	ldi	r25, 0x00	; 0
    13dc:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <prevLet+0x1>
    13e0:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <prevLet>
    13e4:	16 c0       	rjmp	.+44     	; 0x1412 <glcd_puts+0x1ec>
    13e6:	89 ef       	ldi	r24, 0xF9	; 249
    13e8:	05 c0       	rjmp	.+10     	; 0x13f4 <glcd_puts+0x1ce>
    13ea:	87 ee       	ldi	r24, 0xE7	; 231
    13ec:	03 c0       	rjmp	.+6      	; 0x13f4 <glcd_puts+0x1ce>
    13ee:	88 ee       	ldi	r24, 0xE8	; 232
    13f0:	01 c0       	rjmp	.+2      	; 0x13f4 <glcd_puts+0x1ce>
    13f2:	89 ee       	ldi	r24, 0xE9	; 233
    13f4:	28 85       	ldd	r18, Y+8	; 0x08
    13f6:	39 85       	ldd	r19, Y+9	; 0x09
    13f8:	22 0d       	add	r18, r2
    13fa:	33 1d       	adc	r19, r3
    13fc:	39 87       	std	Y+9, r19	; 0x09
    13fe:	28 87       	std	Y+8, r18	; 0x08
    1400:	0a 81       	ldd	r16, Y+2	; 0x02
    1402:	21 e0       	ldi	r18, 0x01	; 1
    1404:	a2 01       	movw	r20, r4
    1406:	68 85       	ldd	r22, Y+8	; 0x08
    1408:	79 85       	ldd	r23, Y+9	; 0x09
    140a:	0e 94 59 08 	call	0x10b2	; 0x10b2 <glcd_putchar>
    140e:	1e 5f       	subi	r17, 0xFE	; 254
    1410:	c8 cf       	rjmp	.-112    	; 0x13a2 <glcd_puts+0x17c>
    1412:	29 96       	adiw	r28, 0x09	; 9
    1414:	0f b6       	in	r0, 0x3f	; 63
    1416:	f8 94       	cli
    1418:	de bf       	out	0x3e, r29	; 62
    141a:	0f be       	out	0x3f, r0	; 63
    141c:	cd bf       	out	0x3d, r28	; 61
    141e:	df 91       	pop	r29
    1420:	cf 91       	pop	r28
    1422:	1f 91       	pop	r17
    1424:	0f 91       	pop	r16
    1426:	ff 90       	pop	r15
    1428:	ef 90       	pop	r14
    142a:	df 90       	pop	r13
    142c:	cf 90       	pop	r12
    142e:	bf 90       	pop	r11
    1430:	af 90       	pop	r10
    1432:	9f 90       	pop	r9
    1434:	8f 90       	pop	r8
    1436:	7f 90       	pop	r7
    1438:	6f 90       	pop	r6
    143a:	5f 90       	pop	r5
    143c:	4f 90       	pop	r4
    143e:	3f 90       	pop	r3
    1440:	2f 90       	pop	r2
    1442:	08 95       	ret

00001444 <__vector_13>:
{0b00000000, 0b00000001, 0b00000010, 0b00000011, 0b00000100, 0b00000101, 0b00000110, 0b00000111, 0b00000000, 0b00000001, 0b00000010, 0b00000011, 0b00000100, 0b00000101, 0b00000110, 0b00000111},
{0b00000000, 0b00000001, 0b00000010, 0b00000011, 0b00000100, 0b00000101, 0b00000110, 0b00000111, 0b00000000, 0b00000001, 0b00000010, 0b00000011, 0b00000100, 0b00000101, 0b00000110, 0b00000111},
{0b00000000, 0b00000001, 0b00000010, 0b00000011, 0b00000100, 0b00000101, 0b00000110, 0b00000111, 0b00000000, 0b00000001, 0b00000010, 0b00000011, 0b00000100, 0b00000101, 0b00000110, 0b00000111},
{0b00000000, 0b00000001, 0b00000010, 0b00000011, 0b00000100, 0b00000101, 0b00000110, 0b00000111, 0b00000000, 0b00000001, 0b00000010, 0b00000011, 0b00000100, 0b00000101, 0b00000110, 0b00000111}};

ISR(USART_RXC_vect){
    1444:	1f 92       	push	r1
    1446:	0f 92       	push	r0
    1448:	0f b6       	in	r0, 0x3f	; 63
    144a:	0f 92       	push	r0
    144c:	11 24       	eor	r1, r1
    144e:	ef 92       	push	r14
    1450:	0f 93       	push	r16
    1452:	2f 93       	push	r18
    1454:	3f 93       	push	r19
    1456:	4f 93       	push	r20
    1458:	5f 93       	push	r21
    145a:	6f 93       	push	r22
    145c:	7f 93       	push	r23
    145e:	8f 93       	push	r24
    1460:	9f 93       	push	r25
    1462:	af 93       	push	r26
    1464:	bf 93       	push	r27
    1466:	ef 93       	push	r30
    1468:	ff 93       	push	r31
		t[i++] = UDR;
    146a:	80 91 da 02 	lds	r24, 0x02DA	; 0x8002da <__data_end>
    146e:	90 91 db 02 	lds	r25, 0x02DB	; 0x8002db <__data_end+0x1>
    1472:	9c 01       	movw	r18, r24
    1474:	2f 5f       	subi	r18, 0xFF	; 255
    1476:	3f 4f       	sbci	r19, 0xFF	; 255
    1478:	30 93 db 02 	sts	0x02DB, r19	; 0x8002db <__data_end+0x1>
    147c:	20 93 da 02 	sts	0x02DA, r18	; 0x8002da <__data_end>
    1480:	4c b1       	in	r20, 0x0c	; 12
    1482:	fc 01       	movw	r30, r24
    1484:	e0 5a       	subi	r30, 0xA0	; 160
    1486:	fe 4f       	sbci	r31, 0xFE	; 254
    1488:	40 83       	st	Z, r20
		if (i == 5)
    148a:	25 30       	cpi	r18, 0x05	; 5
    148c:	31 05       	cpc	r19, r1
    148e:	a9 f4       	brne	.+42     	; 0x14ba <__vector_13+0x76>
		{
			if(pageScreen == 0)
    1490:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <pageScreen>
    1494:	90 91 df 02 	lds	r25, 0x02DF	; 0x8002df <pageScreen+0x1>
    1498:	89 2b       	or	r24, r25
    149a:	59 f4       	brne	.+22     	; 0x14b2 <__vector_13+0x6e>
				glcd_puts(t,8,3,0,2,0);
    149c:	e1 2c       	mov	r14, r1
    149e:	02 e0       	ldi	r16, 0x02	; 2
    14a0:	20 e0       	ldi	r18, 0x00	; 0
    14a2:	43 e0       	ldi	r20, 0x03	; 3
    14a4:	50 e0       	ldi	r21, 0x00	; 0
    14a6:	68 e0       	ldi	r22, 0x08	; 8
    14a8:	70 e0       	ldi	r23, 0x00	; 0
    14aa:	80 e6       	ldi	r24, 0x60	; 96
    14ac:	91 e0       	ldi	r25, 0x01	; 1
    14ae:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
			i=0;
    14b2:	10 92 db 02 	sts	0x02DB, r1	; 0x8002db <__data_end+0x1>
    14b6:	10 92 da 02 	sts	0x02DA, r1	; 0x8002da <__data_end>
		}
	
}
    14ba:	ff 91       	pop	r31
    14bc:	ef 91       	pop	r30
    14be:	bf 91       	pop	r27
    14c0:	af 91       	pop	r26
    14c2:	9f 91       	pop	r25
    14c4:	8f 91       	pop	r24
    14c6:	7f 91       	pop	r23
    14c8:	6f 91       	pop	r22
    14ca:	5f 91       	pop	r21
    14cc:	4f 91       	pop	r20
    14ce:	3f 91       	pop	r19
    14d0:	2f 91       	pop	r18
    14d2:	0f 91       	pop	r16
    14d4:	ef 90       	pop	r14
    14d6:	0f 90       	pop	r0
    14d8:	0f be       	out	0x3f, r0	; 63
    14da:	0f 90       	pop	r0
    14dc:	1f 90       	pop	r1
    14de:	18 95       	reti

000014e0 <convertdectobin>:
unsigned char convertdectobin(int nBlock){
	if(0 == nBlock){
    14e0:	00 97       	sbiw	r24, 0x00	; 0
    14e2:	69 f1       	breq	.+90     	; 0x153e <convertdectobin+0x5e>
		return 0b00000000;
		}else if(1 == nBlock){
    14e4:	81 30       	cpi	r24, 0x01	; 1
    14e6:	91 05       	cpc	r25, r1
    14e8:	61 f1       	breq	.+88     	; 0x1542 <convertdectobin+0x62>
		return 0b00000001;
		}else if(2 == nBlock){
    14ea:	82 30       	cpi	r24, 0x02	; 2
    14ec:	91 05       	cpc	r25, r1
    14ee:	59 f1       	breq	.+86     	; 0x1546 <convertdectobin+0x66>
		return 0b00000010;
		}else if(3 == nBlock){
    14f0:	83 30       	cpi	r24, 0x03	; 3
    14f2:	91 05       	cpc	r25, r1
    14f4:	51 f1       	breq	.+84     	; 0x154a <convertdectobin+0x6a>
		return 0b00000011;
		}else if(4 == nBlock){
    14f6:	84 30       	cpi	r24, 0x04	; 4
    14f8:	91 05       	cpc	r25, r1
    14fa:	49 f1       	breq	.+82     	; 0x154e <convertdectobin+0x6e>
		return 0b00000100;
		}else if(5 == nBlock){
    14fc:	85 30       	cpi	r24, 0x05	; 5
    14fe:	91 05       	cpc	r25, r1
    1500:	41 f1       	breq	.+80     	; 0x1552 <convertdectobin+0x72>
		return 0b00000101;
		}else if(6 == nBlock){
    1502:	86 30       	cpi	r24, 0x06	; 6
    1504:	91 05       	cpc	r25, r1
    1506:	39 f1       	breq	.+78     	; 0x1556 <convertdectobin+0x76>
		return 0b00000110;
		}else if(7 == nBlock){
    1508:	87 30       	cpi	r24, 0x07	; 7
    150a:	91 05       	cpc	r25, r1
    150c:	31 f1       	breq	.+76     	; 0x155a <convertdectobin+0x7a>
		return 0b00000111;
		}else if(8 == nBlock){
    150e:	88 30       	cpi	r24, 0x08	; 8
    1510:	91 05       	cpc	r25, r1
    1512:	29 f1       	breq	.+74     	; 0x155e <convertdectobin+0x7e>
		return 0b00001000;
		}else if(9 == nBlock){
    1514:	89 30       	cpi	r24, 0x09	; 9
    1516:	91 05       	cpc	r25, r1
    1518:	21 f1       	breq	.+72     	; 0x1562 <convertdectobin+0x82>
		return 0b00001001;
		}else if( 10 == nBlock){
    151a:	8a 30       	cpi	r24, 0x0A	; 10
    151c:	91 05       	cpc	r25, r1
    151e:	19 f1       	breq	.+70     	; 0x1566 <convertdectobin+0x86>
		return 0b00001010;
		}else if(11 == nBlock){
    1520:	8b 30       	cpi	r24, 0x0B	; 11
    1522:	91 05       	cpc	r25, r1
    1524:	11 f1       	breq	.+68     	; 0x156a <convertdectobin+0x8a>
		return 0b00001011;
		}else if(12 == nBlock){
    1526:	8c 30       	cpi	r24, 0x0C	; 12
    1528:	91 05       	cpc	r25, r1
    152a:	09 f1       	breq	.+66     	; 0x156e <convertdectobin+0x8e>
		return 0b00001100;
		}else if(13 == nBlock){
    152c:	8d 30       	cpi	r24, 0x0D	; 13
    152e:	91 05       	cpc	r25, r1
    1530:	01 f1       	breq	.+64     	; 0x1572 <convertdectobin+0x92>
		return 0b00001101;
		}else if(14 == nBlock){
    1532:	8e 30       	cpi	r24, 0x0E	; 14
    1534:	91 05       	cpc	r25, r1
    1536:	f9 f0       	breq	.+62     	; 0x1576 <convertdectobin+0x96>
		return 0b00001110;
		}else if(15 == nBlock){
    1538:	0f 97       	sbiw	r24, 0x0f	; 15
    153a:	f9 f0       	breq	.+62     	; 0x157a <convertdectobin+0x9a>
    153c:	08 95       	ret
		}
	
}
unsigned char convertdectobin(int nBlock){
	if(0 == nBlock){
		return 0b00000000;
    153e:	80 e0       	ldi	r24, 0x00	; 0
    1540:	08 95       	ret
		}else if(1 == nBlock){
		return 0b00000001;
    1542:	81 e0       	ldi	r24, 0x01	; 1
    1544:	08 95       	ret
		}else if(2 == nBlock){
		return 0b00000010;
    1546:	82 e0       	ldi	r24, 0x02	; 2
    1548:	08 95       	ret
		}else if(3 == nBlock){
		return 0b00000011;
    154a:	83 e0       	ldi	r24, 0x03	; 3
    154c:	08 95       	ret
		}else if(4 == nBlock){
		return 0b00000100;
    154e:	84 e0       	ldi	r24, 0x04	; 4
    1550:	08 95       	ret
		}else if(5 == nBlock){
		return 0b00000101;
    1552:	85 e0       	ldi	r24, 0x05	; 5
    1554:	08 95       	ret
		}else if(6 == nBlock){
		return 0b00000110;
    1556:	86 e0       	ldi	r24, 0x06	; 6
    1558:	08 95       	ret
		}else if(7 == nBlock){
		return 0b00000111;
    155a:	87 e0       	ldi	r24, 0x07	; 7
    155c:	08 95       	ret
		}else if(8 == nBlock){
		return 0b00001000;
    155e:	88 e0       	ldi	r24, 0x08	; 8
    1560:	08 95       	ret
		}else if(9 == nBlock){
		return 0b00001001;
    1562:	89 e0       	ldi	r24, 0x09	; 9
    1564:	08 95       	ret
		}else if( 10 == nBlock){
		return 0b00001010;
    1566:	8a e0       	ldi	r24, 0x0A	; 10
    1568:	08 95       	ret
		}else if(11 == nBlock){
		return 0b00001011;
    156a:	8b e0       	ldi	r24, 0x0B	; 11
    156c:	08 95       	ret
		}else if(12 == nBlock){
		return 0b00001100;
    156e:	8c e0       	ldi	r24, 0x0C	; 12
    1570:	08 95       	ret
		}else if(13 == nBlock){
		return 0b00001101;
    1572:	8d e0       	ldi	r24, 0x0D	; 13
    1574:	08 95       	ret
		}else if(14 == nBlock){
		return 0b00001110;
    1576:	8e e0       	ldi	r24, 0x0E	; 14
    1578:	08 95       	ret
		}else if(15 == nBlock){
		return 0b00001111;
    157a:	8f e0       	ldi	r24, 0x0F	; 15
	}
}
    157c:	08 95       	ret

0000157e <createPattern>:
void createPattern(unsigned char key)
{//pattern[1]
	if (key == 0b11101110)
    157e:	8e 3e       	cpi	r24, 0xEE	; 238
    1580:	c9 f4       	brne	.+50     	; 0x15b4 <createPattern+0x36>
	{ paterns[selNumMicro][selNumpatterm*2 + 1] ^= 0b00000001;
    1582:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <selNumMicro>
    1586:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    158a:	e0 91 dc 02 	lds	r30, 0x02DC	; 0x8002dc <selNumpatterm>
    158e:	f0 91 dd 02 	lds	r31, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    1592:	ee 0f       	add	r30, r30
    1594:	ff 1f       	adc	r31, r31
    1596:	82 95       	swap	r24
    1598:	92 95       	swap	r25
    159a:	90 7f       	andi	r25, 0xF0	; 240
    159c:	98 27       	eor	r25, r24
    159e:	80 7f       	andi	r24, 0xF0	; 240
    15a0:	98 27       	eor	r25, r24
    15a2:	e8 0f       	add	r30, r24
    15a4:	f9 1f       	adc	r31, r25
    15a6:	ef 59       	subi	r30, 0x9F	; 159
    15a8:	ff 4f       	sbci	r31, 0xFF	; 255
    15aa:	90 81       	ld	r25, Z
    15ac:	81 e0       	ldi	r24, 0x01	; 1
    15ae:	89 27       	eor	r24, r25
    15b0:	80 83       	st	Z, r24
    15b2:	08 95       	ret
		//7  --- xor , bit0
}else if (key == 0b11011110)
    15b4:	8e 3d       	cpi	r24, 0xDE	; 222
    15b6:	c9 f4       	brne	.+50     	; 0x15ea <createPattern+0x6c>
{//8 --- bit1
	paterns[selNumMicro][selNumpatterm*2 + 1] ^= 0b00000010;
    15b8:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <selNumMicro>
    15bc:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    15c0:	e0 91 dc 02 	lds	r30, 0x02DC	; 0x8002dc <selNumpatterm>
    15c4:	f0 91 dd 02 	lds	r31, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    15c8:	ee 0f       	add	r30, r30
    15ca:	ff 1f       	adc	r31, r31
    15cc:	82 95       	swap	r24
    15ce:	92 95       	swap	r25
    15d0:	90 7f       	andi	r25, 0xF0	; 240
    15d2:	98 27       	eor	r25, r24
    15d4:	80 7f       	andi	r24, 0xF0	; 240
    15d6:	98 27       	eor	r25, r24
    15d8:	e8 0f       	add	r30, r24
    15da:	f9 1f       	adc	r31, r25
    15dc:	ef 59       	subi	r30, 0x9F	; 159
    15de:	ff 4f       	sbci	r31, 0xFF	; 255
    15e0:	90 81       	ld	r25, Z
    15e2:	82 e0       	ldi	r24, 0x02	; 2
    15e4:	89 27       	eor	r24, r25
    15e6:	80 83       	st	Z, r24
    15e8:	08 95       	ret
}else if (key == 0b10111110)
    15ea:	8e 3b       	cpi	r24, 0xBE	; 190
    15ec:	c9 f4       	brne	.+50     	; 0x1620 <createPattern+0xa2>
{//9
	paterns[selNumMicro][selNumpatterm*2 + 1] ^= 0b00000100;
    15ee:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <selNumMicro>
    15f2:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    15f6:	e0 91 dc 02 	lds	r30, 0x02DC	; 0x8002dc <selNumpatterm>
    15fa:	f0 91 dd 02 	lds	r31, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    15fe:	ee 0f       	add	r30, r30
    1600:	ff 1f       	adc	r31, r31
    1602:	82 95       	swap	r24
    1604:	92 95       	swap	r25
    1606:	90 7f       	andi	r25, 0xF0	; 240
    1608:	98 27       	eor	r25, r24
    160a:	80 7f       	andi	r24, 0xF0	; 240
    160c:	98 27       	eor	r25, r24
    160e:	e8 0f       	add	r30, r24
    1610:	f9 1f       	adc	r31, r25
    1612:	ef 59       	subi	r30, 0x9F	; 159
    1614:	ff 4f       	sbci	r31, 0xFF	; 255
    1616:	90 81       	ld	r25, Z
    1618:	84 e0       	ldi	r24, 0x04	; 4
    161a:	89 27       	eor	r24, r25
    161c:	80 83       	st	Z, r24
    161e:	08 95       	ret
}else if (key == 0b01111110)
    1620:	8e 37       	cpi	r24, 0x7E	; 126
    1622:	c9 f4       	brne	.+50     	; 0x1656 <createPattern+0xd8>
{///
	paterns[selNumMicro][selNumpatterm*2 + 1] ^= 0b00001000;
    1624:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <selNumMicro>
    1628:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    162c:	e0 91 dc 02 	lds	r30, 0x02DC	; 0x8002dc <selNumpatterm>
    1630:	f0 91 dd 02 	lds	r31, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    1634:	ee 0f       	add	r30, r30
    1636:	ff 1f       	adc	r31, r31
    1638:	82 95       	swap	r24
    163a:	92 95       	swap	r25
    163c:	90 7f       	andi	r25, 0xF0	; 240
    163e:	98 27       	eor	r25, r24
    1640:	80 7f       	andi	r24, 0xF0	; 240
    1642:	98 27       	eor	r25, r24
    1644:	e8 0f       	add	r30, r24
    1646:	f9 1f       	adc	r31, r25
    1648:	ef 59       	subi	r30, 0x9F	; 159
    164a:	ff 4f       	sbci	r31, 0xFF	; 255
    164c:	90 81       	ld	r25, Z
    164e:	88 e0       	ldi	r24, 0x08	; 8
    1650:	89 27       	eor	r24, r25
    1652:	80 83       	st	Z, r24
    1654:	08 95       	ret
}else if (key == 0b11101101)
    1656:	8d 3e       	cpi	r24, 0xED	; 237
    1658:	c9 f4       	brne	.+50     	; 0x168c <createPattern+0x10e>
{//4
	paterns[selNumMicro][selNumpatterm*2 + 1] ^= 0b00010000;
    165a:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <selNumMicro>
    165e:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    1662:	e0 91 dc 02 	lds	r30, 0x02DC	; 0x8002dc <selNumpatterm>
    1666:	f0 91 dd 02 	lds	r31, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    166a:	ee 0f       	add	r30, r30
    166c:	ff 1f       	adc	r31, r31
    166e:	82 95       	swap	r24
    1670:	92 95       	swap	r25
    1672:	90 7f       	andi	r25, 0xF0	; 240
    1674:	98 27       	eor	r25, r24
    1676:	80 7f       	andi	r24, 0xF0	; 240
    1678:	98 27       	eor	r25, r24
    167a:	e8 0f       	add	r30, r24
    167c:	f9 1f       	adc	r31, r25
    167e:	ef 59       	subi	r30, 0x9F	; 159
    1680:	ff 4f       	sbci	r31, 0xFF	; 255
    1682:	90 81       	ld	r25, Z
    1684:	80 e1       	ldi	r24, 0x10	; 16
    1686:	89 27       	eor	r24, r25
    1688:	80 83       	st	Z, r24
    168a:	08 95       	ret
}else if (key == 0b11011101)
    168c:	8d 3d       	cpi	r24, 0xDD	; 221
    168e:	c9 f4       	brne	.+50     	; 0x16c2 <createPattern+0x144>
{//5
	paterns[selNumMicro][selNumpatterm*2 + 1] ^= 0b00100000;
    1690:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <selNumMicro>
    1694:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    1698:	e0 91 dc 02 	lds	r30, 0x02DC	; 0x8002dc <selNumpatterm>
    169c:	f0 91 dd 02 	lds	r31, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    16a0:	ee 0f       	add	r30, r30
    16a2:	ff 1f       	adc	r31, r31
    16a4:	82 95       	swap	r24
    16a6:	92 95       	swap	r25
    16a8:	90 7f       	andi	r25, 0xF0	; 240
    16aa:	98 27       	eor	r25, r24
    16ac:	80 7f       	andi	r24, 0xF0	; 240
    16ae:	98 27       	eor	r25, r24
    16b0:	e8 0f       	add	r30, r24
    16b2:	f9 1f       	adc	r31, r25
    16b4:	ef 59       	subi	r30, 0x9F	; 159
    16b6:	ff 4f       	sbci	r31, 0xFF	; 255
    16b8:	90 81       	ld	r25, Z
    16ba:	80 e2       	ldi	r24, 0x20	; 32
    16bc:	89 27       	eor	r24, r25
    16be:	80 83       	st	Z, r24
    16c0:	08 95       	ret
}else if (key == 0b10111101)
    16c2:	8d 3b       	cpi	r24, 0xBD	; 189
    16c4:	c9 f4       	brne	.+50     	; 0x16f8 <createPattern+0x17a>
{//6
	paterns[selNumMicro][selNumpatterm*2 + 1] ^= 0b01000000;
    16c6:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <selNumMicro>
    16ca:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    16ce:	e0 91 dc 02 	lds	r30, 0x02DC	; 0x8002dc <selNumpatterm>
    16d2:	f0 91 dd 02 	lds	r31, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    16d6:	ee 0f       	add	r30, r30
    16d8:	ff 1f       	adc	r31, r31
    16da:	82 95       	swap	r24
    16dc:	92 95       	swap	r25
    16de:	90 7f       	andi	r25, 0xF0	; 240
    16e0:	98 27       	eor	r25, r24
    16e2:	80 7f       	andi	r24, 0xF0	; 240
    16e4:	98 27       	eor	r25, r24
    16e6:	e8 0f       	add	r30, r24
    16e8:	f9 1f       	adc	r31, r25
    16ea:	ef 59       	subi	r30, 0x9F	; 159
    16ec:	ff 4f       	sbci	r31, 0xFF	; 255
    16ee:	90 81       	ld	r25, Z
    16f0:	80 e4       	ldi	r24, 0x40	; 64
    16f2:	89 27       	eor	r24, r25
    16f4:	80 83       	st	Z, r24
    16f6:	08 95       	ret
}else if (key == 0b01111101)
    16f8:	8d 37       	cpi	r24, 0x7D	; 125
    16fa:	c1 f4       	brne	.+48     	; 0x172c <createPattern+0x1ae>
{//*
	paterns[selNumMicro][selNumpatterm*2 + 1] ^= 0b10000000;
    16fc:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <selNumMicro>
    1700:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    1704:	e0 91 dc 02 	lds	r30, 0x02DC	; 0x8002dc <selNumpatterm>
    1708:	f0 91 dd 02 	lds	r31, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    170c:	ee 0f       	add	r30, r30
    170e:	ff 1f       	adc	r31, r31
    1710:	82 95       	swap	r24
    1712:	92 95       	swap	r25
    1714:	90 7f       	andi	r25, 0xF0	; 240
    1716:	98 27       	eor	r25, r24
    1718:	80 7f       	andi	r24, 0xF0	; 240
    171a:	98 27       	eor	r25, r24
    171c:	e8 0f       	add	r30, r24
    171e:	f9 1f       	adc	r31, r25
    1720:	ef 59       	subi	r30, 0x9F	; 159
    1722:	ff 4f       	sbci	r31, 0xFF	; 255
    1724:	80 81       	ld	r24, Z
    1726:	80 58       	subi	r24, 0x80	; 128
    1728:	80 83       	st	Z, r24
    172a:	08 95       	ret
}
//pattern[0]
else if (key == 0b11101011)
    172c:	8b 3e       	cpi	r24, 0xEB	; 235
    172e:	c9 f4       	brne	.+50     	; 0x1762 <createPattern+0x1e4>
{//1  - xor , bit0
	paterns[selNumMicro][selNumpatterm*2] ^= 0b00000001;
    1730:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <selNumMicro>
    1734:	f0 91 e1 02 	lds	r31, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    1738:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    173c:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    1740:	88 0f       	add	r24, r24
    1742:	99 1f       	adc	r25, r25
    1744:	e2 95       	swap	r30
    1746:	f2 95       	swap	r31
    1748:	f0 7f       	andi	r31, 0xF0	; 240
    174a:	fe 27       	eor	r31, r30
    174c:	e0 7f       	andi	r30, 0xF0	; 240
    174e:	fe 27       	eor	r31, r30
    1750:	e8 0f       	add	r30, r24
    1752:	f9 1f       	adc	r31, r25
    1754:	e0 5a       	subi	r30, 0xA0	; 160
    1756:	ff 4f       	sbci	r31, 0xFF	; 255
    1758:	90 81       	ld	r25, Z
    175a:	81 e0       	ldi	r24, 0x01	; 1
    175c:	89 27       	eor	r24, r25
    175e:	80 83       	st	Z, r24
    1760:	08 95       	ret
}else if (key == 0b11011011)
    1762:	8b 3d       	cpi	r24, 0xDB	; 219
    1764:	c9 f4       	brne	.+50     	; 0x1798 <createPattern+0x21a>
{//2
	paterns[selNumMicro][selNumpatterm*2] ^= 0b00000010;
    1766:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <selNumMicro>
    176a:	f0 91 e1 02 	lds	r31, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    176e:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    1772:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    1776:	88 0f       	add	r24, r24
    1778:	99 1f       	adc	r25, r25
    177a:	e2 95       	swap	r30
    177c:	f2 95       	swap	r31
    177e:	f0 7f       	andi	r31, 0xF0	; 240
    1780:	fe 27       	eor	r31, r30
    1782:	e0 7f       	andi	r30, 0xF0	; 240
    1784:	fe 27       	eor	r31, r30
    1786:	e8 0f       	add	r30, r24
    1788:	f9 1f       	adc	r31, r25
    178a:	e0 5a       	subi	r30, 0xA0	; 160
    178c:	ff 4f       	sbci	r31, 0xFF	; 255
    178e:	90 81       	ld	r25, Z
    1790:	82 e0       	ldi	r24, 0x02	; 2
    1792:	89 27       	eor	r24, r25
    1794:	80 83       	st	Z, r24
    1796:	08 95       	ret
}else if (key == 0b10111011)
    1798:	8b 3b       	cpi	r24, 0xBB	; 187
    179a:	c9 f4       	brne	.+50     	; 0x17ce <createPattern+0x250>
{//3
	paterns[selNumMicro][selNumpatterm*2] ^= 0b00000100;
    179c:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <selNumMicro>
    17a0:	f0 91 e1 02 	lds	r31, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    17a4:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    17a8:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    17ac:	88 0f       	add	r24, r24
    17ae:	99 1f       	adc	r25, r25
    17b0:	e2 95       	swap	r30
    17b2:	f2 95       	swap	r31
    17b4:	f0 7f       	andi	r31, 0xF0	; 240
    17b6:	fe 27       	eor	r31, r30
    17b8:	e0 7f       	andi	r30, 0xF0	; 240
    17ba:	fe 27       	eor	r31, r30
    17bc:	e8 0f       	add	r30, r24
    17be:	f9 1f       	adc	r31, r25
    17c0:	e0 5a       	subi	r30, 0xA0	; 160
    17c2:	ff 4f       	sbci	r31, 0xFF	; 255
    17c4:	90 81       	ld	r25, Z
    17c6:	84 e0       	ldi	r24, 0x04	; 4
    17c8:	89 27       	eor	r24, r25
    17ca:	80 83       	st	Z, r24
    17cc:	08 95       	ret
}else if (key == 0b01111011)
    17ce:	8b 37       	cpi	r24, 0x7B	; 123
    17d0:	c9 f4       	brne	.+50     	; 0x1804 <createPattern+0x286>
{//-
	paterns[selNumMicro][selNumpatterm*2] ^= 0b00001000;
    17d2:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <selNumMicro>
    17d6:	f0 91 e1 02 	lds	r31, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    17da:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    17de:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    17e2:	88 0f       	add	r24, r24
    17e4:	99 1f       	adc	r25, r25
    17e6:	e2 95       	swap	r30
    17e8:	f2 95       	swap	r31
    17ea:	f0 7f       	andi	r31, 0xF0	; 240
    17ec:	fe 27       	eor	r31, r30
    17ee:	e0 7f       	andi	r30, 0xF0	; 240
    17f0:	fe 27       	eor	r31, r30
    17f2:	e8 0f       	add	r30, r24
    17f4:	f9 1f       	adc	r31, r25
    17f6:	e0 5a       	subi	r30, 0xA0	; 160
    17f8:	ff 4f       	sbci	r31, 0xFF	; 255
    17fa:	90 81       	ld	r25, Z
    17fc:	88 e0       	ldi	r24, 0x08	; 8
    17fe:	89 27       	eor	r24, r25
    1800:	80 83       	st	Z, r24
    1802:	08 95       	ret
}
else if (key == 0b11100111)
    1804:	87 3e       	cpi	r24, 0xE7	; 231
    1806:	c9 f4       	brne	.+50     	; 0x183a <createPattern+0x2bc>
{//onc
	paterns[selNumMicro][selNumpatterm*2] ^= 0b00010000;
    1808:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <selNumMicro>
    180c:	f0 91 e1 02 	lds	r31, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    1810:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    1814:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    1818:	88 0f       	add	r24, r24
    181a:	99 1f       	adc	r25, r25
    181c:	e2 95       	swap	r30
    181e:	f2 95       	swap	r31
    1820:	f0 7f       	andi	r31, 0xF0	; 240
    1822:	fe 27       	eor	r31, r30
    1824:	e0 7f       	andi	r30, 0xF0	; 240
    1826:	fe 27       	eor	r31, r30
    1828:	e8 0f       	add	r30, r24
    182a:	f9 1f       	adc	r31, r25
    182c:	e0 5a       	subi	r30, 0xA0	; 160
    182e:	ff 4f       	sbci	r31, 0xFF	; 255
    1830:	90 81       	ld	r25, Z
    1832:	80 e1       	ldi	r24, 0x10	; 16
    1834:	89 27       	eor	r24, r25
    1836:	80 83       	st	Z, r24
    1838:	08 95       	ret
}else if (key == 0b11010111)
    183a:	87 3d       	cpi	r24, 0xD7	; 215
    183c:	c9 f4       	brne	.+50     	; 0x1870 <createPattern+0x2f2>
{//0
	paterns[selNumMicro][selNumpatterm*2] ^= 0b00100000;
    183e:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <selNumMicro>
    1842:	f0 91 e1 02 	lds	r31, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    1846:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    184a:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    184e:	88 0f       	add	r24, r24
    1850:	99 1f       	adc	r25, r25
    1852:	e2 95       	swap	r30
    1854:	f2 95       	swap	r31
    1856:	f0 7f       	andi	r31, 0xF0	; 240
    1858:	fe 27       	eor	r31, r30
    185a:	e0 7f       	andi	r30, 0xF0	; 240
    185c:	fe 27       	eor	r31, r30
    185e:	e8 0f       	add	r30, r24
    1860:	f9 1f       	adc	r31, r25
    1862:	e0 5a       	subi	r30, 0xA0	; 160
    1864:	ff 4f       	sbci	r31, 0xFF	; 255
    1866:	90 81       	ld	r25, Z
    1868:	80 e2       	ldi	r24, 0x20	; 32
    186a:	89 27       	eor	r24, r25
    186c:	80 83       	st	Z, r24
    186e:	08 95       	ret
}else if (key == 0b10110111)
    1870:	87 3b       	cpi	r24, 0xB7	; 183
    1872:	c9 f4       	brne	.+50     	; 0x18a6 <createPattern+0x328>
{//=
	paterns[selNumMicro][selNumpatterm*2] ^= 0b01000000;
    1874:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <selNumMicro>
    1878:	f0 91 e1 02 	lds	r31, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    187c:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    1880:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    1884:	88 0f       	add	r24, r24
    1886:	99 1f       	adc	r25, r25
    1888:	e2 95       	swap	r30
    188a:	f2 95       	swap	r31
    188c:	f0 7f       	andi	r31, 0xF0	; 240
    188e:	fe 27       	eor	r31, r30
    1890:	e0 7f       	andi	r30, 0xF0	; 240
    1892:	fe 27       	eor	r31, r30
    1894:	e8 0f       	add	r30, r24
    1896:	f9 1f       	adc	r31, r25
    1898:	e0 5a       	subi	r30, 0xA0	; 160
    189a:	ff 4f       	sbci	r31, 0xFF	; 255
    189c:	90 81       	ld	r25, Z
    189e:	80 e4       	ldi	r24, 0x40	; 64
    18a0:	89 27       	eor	r24, r25
    18a2:	80 83       	st	Z, r24
    18a4:	08 95       	ret
}else if (key == 0b01110111)
    18a6:	87 37       	cpi	r24, 0x77	; 119
    18a8:	b9 f4       	brne	.+46     	; 0x18d8 <createPattern+0x35a>
{//+
	paterns[selNumMicro][selNumpatterm*2] ^= 0b10000000;
    18aa:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <selNumMicro>
    18ae:	f0 91 e1 02 	lds	r31, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    18b2:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    18b6:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    18ba:	88 0f       	add	r24, r24
    18bc:	99 1f       	adc	r25, r25
    18be:	e2 95       	swap	r30
    18c0:	f2 95       	swap	r31
    18c2:	f0 7f       	andi	r31, 0xF0	; 240
    18c4:	fe 27       	eor	r31, r30
    18c6:	e0 7f       	andi	r30, 0xF0	; 240
    18c8:	fe 27       	eor	r31, r30
    18ca:	e8 0f       	add	r30, r24
    18cc:	f9 1f       	adc	r31, r25
    18ce:	e0 5a       	subi	r30, 0xA0	; 160
    18d0:	ff 4f       	sbci	r31, 0xFF	; 255
    18d2:	80 81       	ld	r24, Z
    18d4:	80 58       	subi	r24, 0x80	; 128
    18d6:	80 83       	st	Z, r24
    18d8:	08 95       	ret

000018da <turnOnOff>:
	//while(){
		//
	//}
}
int turnOnOff(int i, unsigned char pat){
	if (i == 0)
    18da:	89 2b       	or	r24, r25
    18dc:	d9 f4       	brne	.+54     	; 0x1914 <turnOnOff+0x3a>
	{
		if (paterns[selNumMicro][selNumpatterm*2] & pat)
    18de:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <selNumMicro>
    18e2:	f0 91 e1 02 	lds	r31, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    18e6:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    18ea:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    18ee:	e2 95       	swap	r30
    18f0:	f2 95       	swap	r31
    18f2:	f0 7f       	andi	r31, 0xF0	; 240
    18f4:	fe 27       	eor	r31, r30
    18f6:	e0 7f       	andi	r30, 0xF0	; 240
    18f8:	fe 27       	eor	r31, r30
    18fa:	88 0f       	add	r24, r24
    18fc:	99 1f       	adc	r25, r25
    18fe:	e8 0f       	add	r30, r24
    1900:	f9 1f       	adc	r31, r25
    1902:	e0 5a       	subi	r30, 0xA0	; 160
    1904:	ff 4f       	sbci	r31, 0xFF	; 255
    1906:	80 81       	ld	r24, Z
    1908:	68 23       	and	r22, r24
    190a:	81 e0       	ldi	r24, 0x01	; 1
    190c:	90 e0       	ldi	r25, 0x00	; 0
    190e:	e1 f0       	breq	.+56     	; 0x1948 <turnOnOff+0x6e>
    1910:	80 e0       	ldi	r24, 0x00	; 0
    1912:	08 95       	ret
		{
			return 0;
		}
		return 1;
	}else{
		if ((paterns[selNumMicro][selNumpatterm*2 + 1] & pat))
    1914:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <selNumMicro>
    1918:	f0 91 e1 02 	lds	r31, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    191c:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    1920:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    1924:	e2 95       	swap	r30
    1926:	f2 95       	swap	r31
    1928:	f0 7f       	andi	r31, 0xF0	; 240
    192a:	fe 27       	eor	r31, r30
    192c:	e0 7f       	andi	r30, 0xF0	; 240
    192e:	fe 27       	eor	r31, r30
    1930:	88 0f       	add	r24, r24
    1932:	99 1f       	adc	r25, r25
    1934:	e8 0f       	add	r30, r24
    1936:	f9 1f       	adc	r31, r25
    1938:	e0 5a       	subi	r30, 0xA0	; 160
    193a:	ff 4f       	sbci	r31, 0xFF	; 255
    193c:	81 81       	ldd	r24, Z+1	; 0x01
    193e:	68 23       	and	r22, r24
    1940:	81 e0       	ldi	r24, 0x01	; 1
    1942:	90 e0       	ldi	r25, 0x00	; 0
    1944:	09 f0       	breq	.+2      	; 0x1948 <turnOnOff+0x6e>
    1946:	80 e0       	ldi	r24, 0x00	; 0
		{
			return 0;
		}
		return 1;
	}
}
    1948:	08 95       	ret

0000194a <drawPattern>:
void drawPattern(void){
    194a:	0f 93       	push	r16
			circle(50,20,3,turnOnOff(1,0b00000001),1);
    194c:	61 e0       	ldi	r22, 0x01	; 1
    194e:	81 e0       	ldi	r24, 0x01	; 1
    1950:	90 e0       	ldi	r25, 0x00	; 0
    1952:	0e 94 6d 0c 	call	0x18da	; 0x18da <turnOnOff>
    1956:	01 e0       	ldi	r16, 0x01	; 1
    1958:	28 2f       	mov	r18, r24
    195a:	43 e0       	ldi	r20, 0x03	; 3
    195c:	50 e0       	ldi	r21, 0x00	; 0
    195e:	64 e1       	ldi	r22, 0x14	; 20
    1960:	70 e0       	ldi	r23, 0x00	; 0
    1962:	82 e3       	ldi	r24, 0x32	; 50
    1964:	90 e0       	ldi	r25, 0x00	; 0
    1966:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <circle>
			circle(50,30,3,turnOnOff(1,0b00010000),1);
    196a:	60 e1       	ldi	r22, 0x10	; 16
    196c:	81 e0       	ldi	r24, 0x01	; 1
    196e:	90 e0       	ldi	r25, 0x00	; 0
    1970:	0e 94 6d 0c 	call	0x18da	; 0x18da <turnOnOff>
    1974:	28 2f       	mov	r18, r24
    1976:	43 e0       	ldi	r20, 0x03	; 3
    1978:	50 e0       	ldi	r21, 0x00	; 0
    197a:	6e e1       	ldi	r22, 0x1E	; 30
    197c:	70 e0       	ldi	r23, 0x00	; 0
    197e:	82 e3       	ldi	r24, 0x32	; 50
    1980:	90 e0       	ldi	r25, 0x00	; 0
    1982:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <circle>
			circle(50,40,3,turnOnOff(0,0b00000001),1);
    1986:	61 e0       	ldi	r22, 0x01	; 1
    1988:	80 e0       	ldi	r24, 0x00	; 0
    198a:	90 e0       	ldi	r25, 0x00	; 0
    198c:	0e 94 6d 0c 	call	0x18da	; 0x18da <turnOnOff>
    1990:	28 2f       	mov	r18, r24
    1992:	43 e0       	ldi	r20, 0x03	; 3
    1994:	50 e0       	ldi	r21, 0x00	; 0
    1996:	68 e2       	ldi	r22, 0x28	; 40
    1998:	70 e0       	ldi	r23, 0x00	; 0
    199a:	82 e3       	ldi	r24, 0x32	; 50
    199c:	90 e0       	ldi	r25, 0x00	; 0
    199e:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <circle>
			circle(50,50,3,turnOnOff(0,0b00010000),1);
    19a2:	60 e1       	ldi	r22, 0x10	; 16
    19a4:	80 e0       	ldi	r24, 0x00	; 0
    19a6:	90 e0       	ldi	r25, 0x00	; 0
    19a8:	0e 94 6d 0c 	call	0x18da	; 0x18da <turnOnOff>
    19ac:	28 2f       	mov	r18, r24
    19ae:	43 e0       	ldi	r20, 0x03	; 3
    19b0:	50 e0       	ldi	r21, 0x00	; 0
    19b2:	62 e3       	ldi	r22, 0x32	; 50
    19b4:	70 e0       	ldi	r23, 0x00	; 0
    19b6:	82 e3       	ldi	r24, 0x32	; 50
    19b8:	90 e0       	ldi	r25, 0x00	; 0
    19ba:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <circle>
			
			circle(60,20,3,turnOnOff(1,0b00000010),1);
    19be:	62 e0       	ldi	r22, 0x02	; 2
    19c0:	81 e0       	ldi	r24, 0x01	; 1
    19c2:	90 e0       	ldi	r25, 0x00	; 0
    19c4:	0e 94 6d 0c 	call	0x18da	; 0x18da <turnOnOff>
    19c8:	28 2f       	mov	r18, r24
    19ca:	43 e0       	ldi	r20, 0x03	; 3
    19cc:	50 e0       	ldi	r21, 0x00	; 0
    19ce:	64 e1       	ldi	r22, 0x14	; 20
    19d0:	70 e0       	ldi	r23, 0x00	; 0
    19d2:	8c e3       	ldi	r24, 0x3C	; 60
    19d4:	90 e0       	ldi	r25, 0x00	; 0
    19d6:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <circle>
			circle(60,30,3,turnOnOff(1,0b00100000),1);
    19da:	60 e2       	ldi	r22, 0x20	; 32
    19dc:	81 e0       	ldi	r24, 0x01	; 1
    19de:	90 e0       	ldi	r25, 0x00	; 0
    19e0:	0e 94 6d 0c 	call	0x18da	; 0x18da <turnOnOff>
    19e4:	28 2f       	mov	r18, r24
    19e6:	43 e0       	ldi	r20, 0x03	; 3
    19e8:	50 e0       	ldi	r21, 0x00	; 0
    19ea:	6e e1       	ldi	r22, 0x1E	; 30
    19ec:	70 e0       	ldi	r23, 0x00	; 0
    19ee:	8c e3       	ldi	r24, 0x3C	; 60
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <circle>
			circle(60,40,3,turnOnOff(0,0b00000010),1);
    19f6:	62 e0       	ldi	r22, 0x02	; 2
    19f8:	80 e0       	ldi	r24, 0x00	; 0
    19fa:	90 e0       	ldi	r25, 0x00	; 0
    19fc:	0e 94 6d 0c 	call	0x18da	; 0x18da <turnOnOff>
    1a00:	28 2f       	mov	r18, r24
    1a02:	43 e0       	ldi	r20, 0x03	; 3
    1a04:	50 e0       	ldi	r21, 0x00	; 0
    1a06:	68 e2       	ldi	r22, 0x28	; 40
    1a08:	70 e0       	ldi	r23, 0x00	; 0
    1a0a:	8c e3       	ldi	r24, 0x3C	; 60
    1a0c:	90 e0       	ldi	r25, 0x00	; 0
    1a0e:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <circle>
			circle(60,50,3,turnOnOff(0,0b00100000),1);
    1a12:	60 e2       	ldi	r22, 0x20	; 32
    1a14:	80 e0       	ldi	r24, 0x00	; 0
    1a16:	90 e0       	ldi	r25, 0x00	; 0
    1a18:	0e 94 6d 0c 	call	0x18da	; 0x18da <turnOnOff>
    1a1c:	28 2f       	mov	r18, r24
    1a1e:	43 e0       	ldi	r20, 0x03	; 3
    1a20:	50 e0       	ldi	r21, 0x00	; 0
    1a22:	62 e3       	ldi	r22, 0x32	; 50
    1a24:	70 e0       	ldi	r23, 0x00	; 0
    1a26:	8c e3       	ldi	r24, 0x3C	; 60
    1a28:	90 e0       	ldi	r25, 0x00	; 0
    1a2a:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <circle>
			
			circle(70,20,3,turnOnOff(1,0b00000100),1);
    1a2e:	64 e0       	ldi	r22, 0x04	; 4
    1a30:	81 e0       	ldi	r24, 0x01	; 1
    1a32:	90 e0       	ldi	r25, 0x00	; 0
    1a34:	0e 94 6d 0c 	call	0x18da	; 0x18da <turnOnOff>
    1a38:	28 2f       	mov	r18, r24
    1a3a:	43 e0       	ldi	r20, 0x03	; 3
    1a3c:	50 e0       	ldi	r21, 0x00	; 0
    1a3e:	64 e1       	ldi	r22, 0x14	; 20
    1a40:	70 e0       	ldi	r23, 0x00	; 0
    1a42:	86 e4       	ldi	r24, 0x46	; 70
    1a44:	90 e0       	ldi	r25, 0x00	; 0
    1a46:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <circle>
			circle(70,30,3,turnOnOff(1,0b01000000),1);
    1a4a:	60 e4       	ldi	r22, 0x40	; 64
    1a4c:	81 e0       	ldi	r24, 0x01	; 1
    1a4e:	90 e0       	ldi	r25, 0x00	; 0
    1a50:	0e 94 6d 0c 	call	0x18da	; 0x18da <turnOnOff>
    1a54:	28 2f       	mov	r18, r24
    1a56:	43 e0       	ldi	r20, 0x03	; 3
    1a58:	50 e0       	ldi	r21, 0x00	; 0
    1a5a:	6e e1       	ldi	r22, 0x1E	; 30
    1a5c:	70 e0       	ldi	r23, 0x00	; 0
    1a5e:	86 e4       	ldi	r24, 0x46	; 70
    1a60:	90 e0       	ldi	r25, 0x00	; 0
    1a62:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <circle>
			circle(70,40,3,turnOnOff(0,0b00000100),1);
    1a66:	64 e0       	ldi	r22, 0x04	; 4
    1a68:	80 e0       	ldi	r24, 0x00	; 0
    1a6a:	90 e0       	ldi	r25, 0x00	; 0
    1a6c:	0e 94 6d 0c 	call	0x18da	; 0x18da <turnOnOff>
    1a70:	28 2f       	mov	r18, r24
    1a72:	43 e0       	ldi	r20, 0x03	; 3
    1a74:	50 e0       	ldi	r21, 0x00	; 0
    1a76:	68 e2       	ldi	r22, 0x28	; 40
    1a78:	70 e0       	ldi	r23, 0x00	; 0
    1a7a:	86 e4       	ldi	r24, 0x46	; 70
    1a7c:	90 e0       	ldi	r25, 0x00	; 0
    1a7e:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <circle>
			circle(70,50,3,turnOnOff(0,0b01000000),1);
    1a82:	60 e4       	ldi	r22, 0x40	; 64
    1a84:	80 e0       	ldi	r24, 0x00	; 0
    1a86:	90 e0       	ldi	r25, 0x00	; 0
    1a88:	0e 94 6d 0c 	call	0x18da	; 0x18da <turnOnOff>
    1a8c:	28 2f       	mov	r18, r24
    1a8e:	43 e0       	ldi	r20, 0x03	; 3
    1a90:	50 e0       	ldi	r21, 0x00	; 0
    1a92:	62 e3       	ldi	r22, 0x32	; 50
    1a94:	70 e0       	ldi	r23, 0x00	; 0
    1a96:	86 e4       	ldi	r24, 0x46	; 70
    1a98:	90 e0       	ldi	r25, 0x00	; 0
    1a9a:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <circle>
			
			
			circle(80,20,3,turnOnOff(1,0b00001000),1);
    1a9e:	68 e0       	ldi	r22, 0x08	; 8
    1aa0:	81 e0       	ldi	r24, 0x01	; 1
    1aa2:	90 e0       	ldi	r25, 0x00	; 0
    1aa4:	0e 94 6d 0c 	call	0x18da	; 0x18da <turnOnOff>
    1aa8:	28 2f       	mov	r18, r24
    1aaa:	43 e0       	ldi	r20, 0x03	; 3
    1aac:	50 e0       	ldi	r21, 0x00	; 0
    1aae:	64 e1       	ldi	r22, 0x14	; 20
    1ab0:	70 e0       	ldi	r23, 0x00	; 0
    1ab2:	80 e5       	ldi	r24, 0x50	; 80
    1ab4:	90 e0       	ldi	r25, 0x00	; 0
    1ab6:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <circle>
			circle(80,30,3,turnOnOff(1,0b10000000),1);
    1aba:	60 e8       	ldi	r22, 0x80	; 128
    1abc:	81 e0       	ldi	r24, 0x01	; 1
    1abe:	90 e0       	ldi	r25, 0x00	; 0
    1ac0:	0e 94 6d 0c 	call	0x18da	; 0x18da <turnOnOff>
    1ac4:	28 2f       	mov	r18, r24
    1ac6:	43 e0       	ldi	r20, 0x03	; 3
    1ac8:	50 e0       	ldi	r21, 0x00	; 0
    1aca:	6e e1       	ldi	r22, 0x1E	; 30
    1acc:	70 e0       	ldi	r23, 0x00	; 0
    1ace:	80 e5       	ldi	r24, 0x50	; 80
    1ad0:	90 e0       	ldi	r25, 0x00	; 0
    1ad2:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <circle>
			circle(80,40,3,turnOnOff(0,0b00001000),1);
    1ad6:	68 e0       	ldi	r22, 0x08	; 8
    1ad8:	80 e0       	ldi	r24, 0x00	; 0
    1ada:	90 e0       	ldi	r25, 0x00	; 0
    1adc:	0e 94 6d 0c 	call	0x18da	; 0x18da <turnOnOff>
    1ae0:	28 2f       	mov	r18, r24
    1ae2:	43 e0       	ldi	r20, 0x03	; 3
    1ae4:	50 e0       	ldi	r21, 0x00	; 0
    1ae6:	68 e2       	ldi	r22, 0x28	; 40
    1ae8:	70 e0       	ldi	r23, 0x00	; 0
    1aea:	80 e5       	ldi	r24, 0x50	; 80
    1aec:	90 e0       	ldi	r25, 0x00	; 0
    1aee:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <circle>
			circle(80,50,3,turnOnOff(0,0b10000000),1);
    1af2:	60 e8       	ldi	r22, 0x80	; 128
    1af4:	80 e0       	ldi	r24, 0x00	; 0
    1af6:	90 e0       	ldi	r25, 0x00	; 0
    1af8:	0e 94 6d 0c 	call	0x18da	; 0x18da <turnOnOff>
    1afc:	28 2f       	mov	r18, r24
    1afe:	43 e0       	ldi	r20, 0x03	; 3
    1b00:	50 e0       	ldi	r21, 0x00	; 0
    1b02:	62 e3       	ldi	r22, 0x32	; 50
    1b04:	70 e0       	ldi	r23, 0x00	; 0
    1b06:	80 e5       	ldi	r24, 0x50	; 80
    1b08:	90 e0       	ldi	r25, 0x00	; 0
    1b0a:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <circle>
}
    1b0e:	0f 91       	pop	r16
    1b10:	08 95       	ret

00001b12 <keyboard>:
}else if (key == 0b01110111)
{//+
	paterns[selNumMicro][selNumpatterm*2] ^= 0b10000000;
}
}
void keyboard(char name []){
    1b12:	ef 92       	push	r14
    1b14:	ff 92       	push	r15
    1b16:	0f 93       	push	r16
    1b18:	1f 93       	push	r17
    1b1a:	cf 93       	push	r28
    1b1c:	df 93       	push	r29
    1b1e:	ec 01       	movw	r28, r24
		unsigned char rowKey = 0xff;
		unsigned char keyPressed;
		
		while (rowKey == 0xff)
		{
			DDRB = 0xf0;
    1b20:	0f 2e       	mov	r0, r31
    1b22:	f0 ef       	ldi	r31, 0xF0	; 240
    1b24:	ff 2e       	mov	r15, r31
    1b26:	f0 2d       	mov	r31, r0
			PORTB = 0x0f;
    1b28:	1f e0       	ldi	r17, 0x0F	; 15
}
void keyboard(char name []){
	unsigned char running = 0xff;
	while (running)
	{	
		glcd_clear();
    1b2a:	0e 94 57 05 	call	0xaae	; 0xaae <glcd_clear>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1b2e:	81 ee       	ldi	r24, 0xE1	; 225
    1b30:	94 e0       	ldi	r25, 0x04	; 4
    1b32:	01 97       	sbiw	r24, 0x01	; 1
    1b34:	f1 f7       	brne	.-4      	; 0x1b32 <keyboard+0x20>
    1b36:	00 c0       	rjmp	.+0      	; 0x1b38 <keyboard+0x26>
    1b38:	00 00       	nop
		_delay_ms(5);
		glcd_puts(name,8,4,0,1,0);
    1b3a:	e1 2c       	mov	r14, r1
    1b3c:	01 e0       	ldi	r16, 0x01	; 1
    1b3e:	20 e0       	ldi	r18, 0x00	; 0
    1b40:	44 e0       	ldi	r20, 0x04	; 4
    1b42:	50 e0       	ldi	r21, 0x00	; 0
    1b44:	68 e0       	ldi	r22, 0x08	; 8
    1b46:	70 e0       	ldi	r23, 0x00	; 0
    1b48:	ce 01       	movw	r24, r28
    1b4a:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
		glcd_puts("Up(Save & Back)",8,0,0,1,0);
    1b4e:	20 e0       	ldi	r18, 0x00	; 0
    1b50:	40 e0       	ldi	r20, 0x00	; 0
    1b52:	50 e0       	ldi	r21, 0x00	; 0
    1b54:	68 e0       	ldi	r22, 0x08	; 8
    1b56:	70 e0       	ldi	r23, 0x00	; 0
    1b58:	8a ea       	ldi	r24, 0xAA	; 170
    1b5a:	92 e0       	ldi	r25, 0x02	; 2
    1b5c:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
		drawPattern();
    1b60:	0e 94 a5 0c 	call	0x194a	; 0x194a <drawPattern>
		unsigned char pushKey = (PIND>>2);
    1b64:	80 b3       	in	r24, 0x10	; 16
		unsigned char rowKey = 0xff;
		unsigned char keyPressed;
		
		while (rowKey == 0xff)
		{
			DDRB = 0xf0;
    1b66:	f7 ba       	out	0x17, r15	; 23
			PORTB = 0x0f;
    1b68:	18 bb       	out	0x18, r17	; 24
			rowKey = PINB;
    1b6a:	26 b3       	in	r18, 0x16	; 22
			rowKey |=0xf0;
    1b6c:	20 6f       	ori	r18, 0xF0	; 240
			pushKey = (PIND>>2);
    1b6e:	80 b3       	in	r24, 0x10	; 16
    1b70:	86 95       	lsr	r24
    1b72:	86 95       	lsr	r24
			pushKey &=0x1F;
    1b74:	8f 71       	andi	r24, 0x1F	; 31
			if (pushKey == 0b00011101)
    1b76:	8d 31       	cpi	r24, 0x1D	; 29
    1b78:	61 f0       	breq	.+24     	; 0x1b92 <keyboard+0x80>
    1b7a:	6d c0       	rjmp	.+218    	; 0x1c56 <keyboard+0x144>
		unsigned char rowKey = 0xff;
		unsigned char keyPressed;
		
		while (rowKey == 0xff)
		{
			DDRB = 0xf0;
    1b7c:	f7 ba       	out	0x17, r15	; 23
			PORTB = 0x0f;
    1b7e:	18 bb       	out	0x18, r17	; 24
			rowKey = PINB;
    1b80:	26 b3       	in	r18, 0x16	; 22
			rowKey |=0xf0;
    1b82:	20 6f       	ori	r18, 0xF0	; 240
			pushKey = (PIND>>2);
    1b84:	90 b3       	in	r25, 0x10	; 16
    1b86:	96 95       	lsr	r25
    1b88:	96 95       	lsr	r25
			pushKey &=0x1F;
    1b8a:	9f 71       	andi	r25, 0x1F	; 31
			if (pushKey == 0b00011101)
    1b8c:	9d 31       	cpi	r25, 0x1D	; 29
    1b8e:	09 f0       	breq	.+2      	; 0x1b92 <keyboard+0x80>
    1b90:	62 c0       	rjmp	.+196    	; 0x1c56 <keyboard+0x144>
			{//up
				running = 0x00;
				unsigned char packetSel = 0b00000000;
				packetSel |=(convertdectobin(selNumMicro)<<3);
    1b92:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <selNumMicro>
    1b96:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    1b9a:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <convertdectobin>
    1b9e:	98 e0       	ldi	r25, 0x08	; 8
    1ba0:	89 9f       	mul	r24, r25
    1ba2:	e0 01       	movw	r28, r0
    1ba4:	11 24       	eor	r1, r1
				packetSel |=convertdectobin(selNumpatterm);
    1ba6:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    1baa:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    1bae:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <convertdectobin>
    1bb2:	8c 2b       	or	r24, r28
    1bb4:	41 e0       	ldi	r20, 0x01	; 1
    1bb6:	50 e0       	ldi	r21, 0x00	; 0
    1bb8:	20 e0       	ldi	r18, 0x00	; 0
    1bba:	30 e0       	ldi	r19, 0x00	; 0
    1bbc:	04 c0       	rjmp	.+8      	; 0x1bc6 <keyboard+0xb4>
    1bbe:	2f 5f       	subi	r18, 0xFF	; 255
    1bc0:	3f 4f       	sbci	r19, 0xFF	; 255
    1bc2:	4f 5f       	subi	r20, 0xFF	; 255
    1bc4:	5f 4f       	sbci	r21, 0xFF	; 255
				for(int c=0; c<3; c++){
				while(!(UCSRA & (1<<UDRE)));
    1bc6:	5d 9b       	sbis	0x0b, 5	; 11
    1bc8:	fe cf       	rjmp	.-4      	; 0x1bc6 <keyboard+0xb4>
				UDR = packetSel;
    1bca:	8c b9       	out	0x0c, r24	; 12
				if(c==0)
    1bcc:	21 15       	cp	r18, r1
    1bce:	31 05       	cpc	r19, r1
    1bd0:	b1 f4       	brne	.+44     	; 0x1bfe <keyboard+0xec>
					packetSel = paterns[selNumMicro][selNumpatterm*2];
    1bd2:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <selNumMicro>
    1bd6:	f0 91 e1 02 	lds	r31, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    1bda:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    1bde:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    1be2:	e2 95       	swap	r30
    1be4:	f2 95       	swap	r31
    1be6:	f0 7f       	andi	r31, 0xF0	; 240
    1be8:	fe 27       	eor	r31, r30
    1bea:	e0 7f       	andi	r30, 0xF0	; 240
    1bec:	fe 27       	eor	r31, r30
    1bee:	88 0f       	add	r24, r24
    1bf0:	99 1f       	adc	r25, r25
    1bf2:	e8 0f       	add	r30, r24
    1bf4:	f9 1f       	adc	r31, r25
    1bf6:	e0 5a       	subi	r30, 0xA0	; 160
    1bf8:	ff 4f       	sbci	r31, 0xFF	; 255
    1bfa:	80 81       	ld	r24, Z
    1bfc:	19 c0       	rjmp	.+50     	; 0x1c30 <keyboard+0x11e>
				if(c==1)
    1bfe:	21 30       	cpi	r18, 0x01	; 1
    1c00:	31 05       	cpc	r19, r1
    1c02:	b1 f4       	brne	.+44     	; 0x1c30 <keyboard+0x11e>
					packetSel = paterns[selNumMicro][selNumpatterm*2+1];
    1c04:	e0 91 e0 02 	lds	r30, 0x02E0	; 0x8002e0 <selNumMicro>
    1c08:	f0 91 e1 02 	lds	r31, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    1c0c:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    1c10:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    1c14:	e2 95       	swap	r30
    1c16:	f2 95       	swap	r31
    1c18:	f0 7f       	andi	r31, 0xF0	; 240
    1c1a:	fe 27       	eor	r31, r30
    1c1c:	e0 7f       	andi	r30, 0xF0	; 240
    1c1e:	fe 27       	eor	r31, r30
    1c20:	88 0f       	add	r24, r24
    1c22:	99 1f       	adc	r25, r25
    1c24:	e8 0f       	add	r30, r24
    1c26:	f9 1f       	adc	r31, r25
    1c28:	e0 5a       	subi	r30, 0xA0	; 160
    1c2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c2c:	81 81       	ldd	r24, Z+1	; 0x01
    1c2e:	c7 cf       	rjmp	.-114    	; 0x1bbe <keyboard+0xac>
			{//up
				running = 0x00;
				unsigned char packetSel = 0b00000000;
				packetSel |=(convertdectobin(selNumMicro)<<3);
				packetSel |=convertdectobin(selNumpatterm);
				for(int c=0; c<3; c++){
    1c30:	43 30       	cpi	r20, 0x03	; 3
    1c32:	51 05       	cpc	r21, r1
    1c34:	24 f2       	brlt	.-120    	; 0x1bbe <keyboard+0xac>
    1c36:	c0 e0       	ldi	r28, 0x00	; 0
    1c38:	d0 e0       	ldi	r29, 0x00	; 0
				if(c==1)
					packetSel = paterns[selNumMicro][selNumpatterm*2+1];
				}
				for (int v=0; v<16; v++)
				{
					eeprom_update_block (( const void *) paterns[v] , ( void *) (16*v), 16);
    1c3a:	40 e1       	ldi	r20, 0x10	; 16
    1c3c:	50 e0       	ldi	r21, 0x00	; 0
    1c3e:	be 01       	movw	r22, r28
    1c40:	ce 01       	movw	r24, r28
    1c42:	80 5a       	subi	r24, 0xA0	; 160
    1c44:	9f 4f       	sbci	r25, 0xFF	; 255
    1c46:	0e 94 97 13 	call	0x272e	; 0x272e <eeprom_update_block>
    1c4a:	60 96       	adiw	r28, 0x10	; 16
				if(c==0)
					packetSel = paterns[selNumMicro][selNumpatterm*2];
				if(c==1)
					packetSel = paterns[selNumMicro][selNumpatterm*2+1];
				}
				for (int v=0; v<16; v++)
    1c4c:	c1 15       	cp	r28, r1
    1c4e:	81 e0       	ldi	r24, 0x01	; 1
    1c50:	d8 07       	cpc	r29, r24
    1c52:	99 f7       	brne	.-26     	; 0x1c3a <keyboard+0x128>
    1c54:	0d c0       	rjmp	.+26     	; 0x1c70 <keyboard+0x15e>
		unsigned char pushKey = (PIND>>2);
		pushKey &=0x1F;
		unsigned char rowKey = 0xff;
		unsigned char keyPressed;
		
		while (rowKey == 0xff)
    1c56:	2f 3f       	cpi	r18, 0xFF	; 255
    1c58:	09 f4       	brne	.+2      	; 0x1c5c <keyboard+0x14a>
    1c5a:	90 cf       	rjmp	.-224    	; 0x1b7c <keyboard+0x6a>
				break;
			}
		}
		
		keyPressed = rowKey;
		DDRB = 0x00;
    1c5c:	17 ba       	out	0x17, r1	; 23
		PORTB = 0x00;
    1c5e:	18 ba       	out	0x18, r1	; 24

		DDRB = 0x0f;
    1c60:	17 bb       	out	0x17, r17	; 23
		PORTB = 0xf0;
    1c62:	f8 ba       	out	0x18, r15	; 24
		rowKey = PINB;
    1c64:	86 b3       	in	r24, 0x16	; 22
		rowKey |= 0x0f;
    1c66:	8f 60       	ori	r24, 0x0F	; 15
		keyPressed &=rowKey;
		if(running)
			createPattern(keyPressed);				
    1c68:	82 23       	and	r24, r18
    1c6a:	0e 94 bf 0a 	call	0x157e	; 0x157e <createPattern>
    1c6e:	5d cf       	rjmp	.-326    	; 0x1b2a <keyboard+0x18>
				break;
			}
		}
		
		keyPressed = rowKey;
		DDRB = 0x00;
    1c70:	17 ba       	out	0x17, r1	; 23
		PORTB = 0x00;
    1c72:	18 ba       	out	0x18, r1	; 24

		DDRB = 0x0f;
    1c74:	8f e0       	ldi	r24, 0x0F	; 15
    1c76:	87 bb       	out	0x17, r24	; 23
		PORTB = 0xf0;
    1c78:	80 ef       	ldi	r24, 0xF0	; 240
    1c7a:	88 bb       	out	0x18, r24	; 24
		rowKey = PINB;
    1c7c:	86 b3       	in	r24, 0x16	; 22
	}
	
	//while(){
		//
	//}
}
    1c7e:	df 91       	pop	r29
    1c80:	cf 91       	pop	r28
    1c82:	1f 91       	pop	r17
    1c84:	0f 91       	pop	r16
    1c86:	ff 90       	pop	r15
    1c88:	ef 90       	pop	r14
    1c8a:	08 95       	ret

00001c8c <menuPatern>:
			circle(80,20,3,turnOnOff(1,0b00001000),1);
			circle(80,30,3,turnOnOff(1,0b10000000),1);
			circle(80,40,3,turnOnOff(0,0b00001000),1);
			circle(80,50,3,turnOnOff(0,0b10000000),1);
}
void menuPatern(){
    1c8c:	ef 92       	push	r14
    1c8e:	0f 93       	push	r16
    1c90:	1f 93       	push	r17
    1c92:	cf 93       	push	r28
    1c94:	df 93       	push	r29
    1c96:	cd b7       	in	r28, 0x3d	; 61
    1c98:	de b7       	in	r29, 0x3e	; 62
    1c9a:	c0 54       	subi	r28, 0x40	; 64
    1c9c:	d1 09       	sbc	r29, r1
    1c9e:	0f b6       	in	r0, 0x3f	; 63
    1ca0:	f8 94       	cli
    1ca2:	de bf       	out	0x3e, r29	; 62
    1ca4:	0f be       	out	0x3f, r0	; 63
    1ca6:	cd bf       	out	0x3d, r28	; 61
	unsigned char namePattern[][8] = {"Pat1", "Pat2", "Pat3", "Pat4", "Pat5", "Pat6", "Pat7", "Pat8"};
    1ca8:	80 e4       	ldi	r24, 0x40	; 64
    1caa:	ea e6       	ldi	r30, 0x6A	; 106
    1cac:	f1 e0       	ldi	r31, 0x01	; 1
    1cae:	de 01       	movw	r26, r28
    1cb0:	11 96       	adiw	r26, 0x01	; 1
    1cb2:	01 90       	ld	r0, Z+
    1cb4:	0d 92       	st	X+, r0
    1cb6:	8a 95       	dec	r24
    1cb8:	e1 f7       	brne	.-8      	; 0x1cb2 <menuPatern+0x26>
		glcd_clear();
    1cba:	0e 94 57 05 	call	0xaae	; 0xaae <glcd_clear>
    1cbe:	81 ee       	ldi	r24, 0xE1	; 225
    1cc0:	94 e0       	ldi	r25, 0x04	; 4
    1cc2:	01 97       	sbiw	r24, 0x01	; 1
    1cc4:	f1 f7       	brne	.-4      	; 0x1cc2 <menuPatern+0x36>
    1cc6:	00 c0       	rjmp	.+0      	; 0x1cc8 <menuPatern+0x3c>
    1cc8:	00 00       	nop
		_delay_ms(5);
		glcd_puts(namePattern[selNumpatterm],8,4,0,1,0);
    1cca:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    1cce:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    1cd2:	88 0f       	add	r24, r24
    1cd4:	99 1f       	adc	r25, r25
    1cd6:	88 0f       	add	r24, r24
    1cd8:	99 1f       	adc	r25, r25
    1cda:	88 0f       	add	r24, r24
    1cdc:	99 1f       	adc	r25, r25
    1cde:	e1 2c       	mov	r14, r1
    1ce0:	01 e0       	ldi	r16, 0x01	; 1
    1ce2:	20 e0       	ldi	r18, 0x00	; 0
    1ce4:	44 e0       	ldi	r20, 0x04	; 4
    1ce6:	50 e0       	ldi	r21, 0x00	; 0
    1ce8:	68 e0       	ldi	r22, 0x08	; 8
    1cea:	70 e0       	ldi	r23, 0x00	; 0
    1cec:	e1 e0       	ldi	r30, 0x01	; 1
    1cee:	f0 e0       	ldi	r31, 0x00	; 0
    1cf0:	ec 0f       	add	r30, r28
    1cf2:	fd 1f       	adc	r31, r29
    1cf4:	8e 0f       	add	r24, r30
    1cf6:	9f 1f       	adc	r25, r31
    1cf8:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
		glcd_puts("Up(Back)",30,0,0,1,0);
    1cfc:	20 e0       	ldi	r18, 0x00	; 0
    1cfe:	40 e0       	ldi	r20, 0x00	; 0
    1d00:	50 e0       	ldi	r21, 0x00	; 0
    1d02:	6e e1       	ldi	r22, 0x1E	; 30
    1d04:	70 e0       	ldi	r23, 0x00	; 0
    1d06:	8a eb       	ldi	r24, 0xBA	; 186
    1d08:	92 e0       	ldi	r25, 0x02	; 2
    1d0a:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
		glcd_puts("Down(Edit)",30,7,0,1,0);
    1d0e:	20 e0       	ldi	r18, 0x00	; 0
    1d10:	47 e0       	ldi	r20, 0x07	; 7
    1d12:	50 e0       	ldi	r21, 0x00	; 0
    1d14:	6e e1       	ldi	r22, 0x1E	; 30
    1d16:	70 e0       	ldi	r23, 0x00	; 0
    1d18:	83 ec       	ldi	r24, 0xC3	; 195
    1d1a:	92 e0       	ldi	r25, 0x02	; 2
    1d1c:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
		glcd_puts("<",0,4,0,1,0);
    1d20:	20 e0       	ldi	r18, 0x00	; 0
    1d22:	44 e0       	ldi	r20, 0x04	; 4
    1d24:	50 e0       	ldi	r21, 0x00	; 0
    1d26:	60 e0       	ldi	r22, 0x00	; 0
    1d28:	70 e0       	ldi	r23, 0x00	; 0
    1d2a:	8e ec       	ldi	r24, 0xCE	; 206
    1d2c:	92 e0       	ldi	r25, 0x02	; 2
    1d2e:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
		glcd_puts(">",120,4,0,1,0);
    1d32:	20 e0       	ldi	r18, 0x00	; 0
    1d34:	44 e0       	ldi	r20, 0x04	; 4
    1d36:	50 e0       	ldi	r21, 0x00	; 0
    1d38:	68 e7       	ldi	r22, 0x78	; 120
    1d3a:	70 e0       	ldi	r23, 0x00	; 0
    1d3c:	80 ed       	ldi	r24, 0xD0	; 208
    1d3e:	92 e0       	ldi	r25, 0x02	; 2
    1d40:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
		drawPattern();
    1d44:	0e 94 a5 0c 	call	0x194a	; 0x194a <drawPattern>
		
		while(1){
		unsigned char pushKey = (PIND>>2);
    1d48:	10 b3       	in	r17, 0x10	; 16
    1d4a:	16 95       	lsr	r17
    1d4c:	16 95       	lsr	r17
		pushKey &=0x1F;
    1d4e:	1f 71       	andi	r17, 0x1F	; 31
		if (pushKey == 0b00011110)
    1d50:	1e 31       	cpi	r17, 0x1E	; 30
    1d52:	b9 f4       	brne	.+46     	; 0x1d82 <menuPatern+0xf6>
		{//ok
			unsigned char packetSel = 0b10000000;
			packetSel |=(convertdectobin(selNumMicro)<<3);
    1d54:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <selNumMicro>
    1d58:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    1d5c:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <convertdectobin>
    1d60:	f8 e0       	ldi	r31, 0x08	; 8
    1d62:	8f 9f       	mul	r24, r31
    1d64:	c0 01       	movw	r24, r0
    1d66:	11 24       	eor	r1, r1
    1d68:	08 2f       	mov	r16, r24
    1d6a:	00 68       	ori	r16, 0x80	; 128
			packetSel |=convertdectobin(selNumpatterm);
    1d6c:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    1d70:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    1d74:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <convertdectobin>
    1d78:	80 2b       	or	r24, r16
			while(!(UCSRA & (1<<UDRE)));
    1d7a:	5d 9b       	sbis	0x0b, 5	; 11
    1d7c:	fe cf       	rjmp	.-4      	; 0x1d7a <menuPatern+0xee>
			UDR = packetSel;
    1d7e:	8c b9       	out	0x0c, r24	; 12
    1d80:	c7 c0       	rjmp	.+398    	; 0x1f10 <menuPatern+0x284>
		}
		if (pushKey == 0b00011101)
    1d82:	1d 31       	cpi	r17, 0x1D	; 29
    1d84:	09 f4       	brne	.+2      	; 0x1d88 <menuPatern+0xfc>
    1d86:	20 c1       	rjmp	.+576    	; 0x1fc8 <menuPatern+0x33c>
		{//up
			break;
		}
		if (pushKey == 0b00011011)
    1d88:	1b 31       	cpi	r17, 0x1B	; 27
    1d8a:	09 f0       	breq	.+2      	; 0x1d8e <menuPatern+0x102>
    1d8c:	63 c0       	rjmp	.+198    	; 0x1e54 <menuPatern+0x1c8>
		{//down
			keyboard(namePattern[selNumpatterm]);
    1d8e:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    1d92:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    1d96:	88 0f       	add	r24, r24
    1d98:	99 1f       	adc	r25, r25
    1d9a:	88 0f       	add	r24, r24
    1d9c:	99 1f       	adc	r25, r25
    1d9e:	88 0f       	add	r24, r24
    1da0:	99 1f       	adc	r25, r25
    1da2:	21 e0       	ldi	r18, 0x01	; 1
    1da4:	30 e0       	ldi	r19, 0x00	; 0
    1da6:	2c 0f       	add	r18, r28
    1da8:	3d 1f       	adc	r19, r29
    1daa:	82 0f       	add	r24, r18
    1dac:	93 1f       	adc	r25, r19
    1dae:	0e 94 89 0d 	call	0x1b12	; 0x1b12 <keyboard>
			glcd_clear();
    1db2:	0e 94 57 05 	call	0xaae	; 0xaae <glcd_clear>
    1db6:	81 ee       	ldi	r24, 0xE1	; 225
    1db8:	94 e0       	ldi	r25, 0x04	; 4
    1dba:	01 97       	sbiw	r24, 0x01	; 1
    1dbc:	f1 f7       	brne	.-4      	; 0x1dba <menuPatern+0x12e>
    1dbe:	00 c0       	rjmp	.+0      	; 0x1dc0 <menuPatern+0x134>
    1dc0:	00 00       	nop
			_delay_ms(5);
			glcd_puts(namePattern[selNumpatterm],8,4,0,1,0);
    1dc2:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    1dc6:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    1dca:	88 0f       	add	r24, r24
    1dcc:	99 1f       	adc	r25, r25
    1dce:	88 0f       	add	r24, r24
    1dd0:	99 1f       	adc	r25, r25
    1dd2:	88 0f       	add	r24, r24
    1dd4:	99 1f       	adc	r25, r25
    1dd6:	e1 2c       	mov	r14, r1
    1dd8:	01 e0       	ldi	r16, 0x01	; 1
    1dda:	20 e0       	ldi	r18, 0x00	; 0
    1ddc:	44 e0       	ldi	r20, 0x04	; 4
    1dde:	50 e0       	ldi	r21, 0x00	; 0
    1de0:	68 e0       	ldi	r22, 0x08	; 8
    1de2:	70 e0       	ldi	r23, 0x00	; 0
    1de4:	e1 e0       	ldi	r30, 0x01	; 1
    1de6:	f0 e0       	ldi	r31, 0x00	; 0
    1de8:	ec 0f       	add	r30, r28
    1dea:	fd 1f       	adc	r31, r29
    1dec:	8e 0f       	add	r24, r30
    1dee:	9f 1f       	adc	r25, r31
    1df0:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
			glcd_puts("Up(Back)",30,0,0,1,0);
    1df4:	20 e0       	ldi	r18, 0x00	; 0
    1df6:	40 e0       	ldi	r20, 0x00	; 0
    1df8:	50 e0       	ldi	r21, 0x00	; 0
    1dfa:	6e e1       	ldi	r22, 0x1E	; 30
    1dfc:	70 e0       	ldi	r23, 0x00	; 0
    1dfe:	8a eb       	ldi	r24, 0xBA	; 186
    1e00:	92 e0       	ldi	r25, 0x02	; 2
    1e02:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
			glcd_puts("Down(Edit)",30,7,0,1,0);
    1e06:	20 e0       	ldi	r18, 0x00	; 0
    1e08:	47 e0       	ldi	r20, 0x07	; 7
    1e0a:	50 e0       	ldi	r21, 0x00	; 0
    1e0c:	6e e1       	ldi	r22, 0x1E	; 30
    1e0e:	70 e0       	ldi	r23, 0x00	; 0
    1e10:	83 ec       	ldi	r24, 0xC3	; 195
    1e12:	92 e0       	ldi	r25, 0x02	; 2
    1e14:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
			glcd_puts("<",0,4,0,1,0);
    1e18:	20 e0       	ldi	r18, 0x00	; 0
    1e1a:	44 e0       	ldi	r20, 0x04	; 4
    1e1c:	50 e0       	ldi	r21, 0x00	; 0
    1e1e:	60 e0       	ldi	r22, 0x00	; 0
    1e20:	70 e0       	ldi	r23, 0x00	; 0
    1e22:	8e ec       	ldi	r24, 0xCE	; 206
    1e24:	92 e0       	ldi	r25, 0x02	; 2
    1e26:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
			glcd_puts(">",120,4,0,1,0);
    1e2a:	20 e0       	ldi	r18, 0x00	; 0
    1e2c:	44 e0       	ldi	r20, 0x04	; 4
    1e2e:	50 e0       	ldi	r21, 0x00	; 0
    1e30:	68 e7       	ldi	r22, 0x78	; 120
    1e32:	70 e0       	ldi	r23, 0x00	; 0
    1e34:	80 ed       	ldi	r24, 0xD0	; 208
    1e36:	92 e0       	ldi	r25, 0x02	; 2
    1e38:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
			drawPattern();
    1e3c:	0e 94 a5 0c 	call	0x194a	; 0x194a <drawPattern>
    1e40:	ff e9       	ldi	r31, 0x9F	; 159
    1e42:	26 e8       	ldi	r18, 0x86	; 134
    1e44:	31 e0       	ldi	r19, 0x01	; 1
    1e46:	f1 50       	subi	r31, 0x01	; 1
    1e48:	20 40       	sbci	r18, 0x00	; 0
    1e4a:	30 40       	sbci	r19, 0x00	; 0
    1e4c:	e1 f7       	brne	.-8      	; 0x1e46 <menuPatern+0x1ba>
    1e4e:	00 c0       	rjmp	.+0      	; 0x1e50 <menuPatern+0x1c4>
    1e50:	00 00       	nop
    1e52:	7a cf       	rjmp	.-268    	; 0x1d48 <menuPatern+0xbc>
			_delay_ms(500);

		}
		if (pushKey == 0b00010111)
    1e54:	17 31       	cpi	r17, 0x17	; 23
    1e56:	09 f0       	breq	.+2      	; 0x1e5a <menuPatern+0x1ce>
    1e58:	5b c0       	rjmp	.+182    	; 0x1f10 <menuPatern+0x284>
		{
				glcd_clear();
    1e5a:	0e 94 57 05 	call	0xaae	; 0xaae <glcd_clear>
    1e5e:	81 ee       	ldi	r24, 0xE1	; 225
    1e60:	94 e0       	ldi	r25, 0x04	; 4
    1e62:	01 97       	sbiw	r24, 0x01	; 1
    1e64:	f1 f7       	brne	.-4      	; 0x1e62 <menuPatern+0x1d6>
    1e66:	00 c0       	rjmp	.+0      	; 0x1e68 <menuPatern+0x1dc>
    1e68:	00 00       	nop
				_delay_ms(5);
				selNumpatterm =  ++selNumpatterm>=8 ? 0 : selNumpatterm;
    1e6a:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    1e6e:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    1e72:	01 96       	adiw	r24, 0x01	; 1
    1e74:	88 30       	cpi	r24, 0x08	; 8
    1e76:	91 05       	cpc	r25, r1
    1e78:	14 f0       	brlt	.+4      	; 0x1e7e <menuPatern+0x1f2>
    1e7a:	80 e0       	ldi	r24, 0x00	; 0
    1e7c:	90 e0       	ldi	r25, 0x00	; 0
    1e7e:	90 93 dd 02 	sts	0x02DD, r25	; 0x8002dd <selNumpatterm+0x1>
    1e82:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <selNumpatterm>
				glcd_puts(namePattern[selNumpatterm],8,4,0,1,0);
    1e86:	88 0f       	add	r24, r24
    1e88:	99 1f       	adc	r25, r25
    1e8a:	88 0f       	add	r24, r24
    1e8c:	99 1f       	adc	r25, r25
    1e8e:	88 0f       	add	r24, r24
    1e90:	99 1f       	adc	r25, r25
    1e92:	e1 2c       	mov	r14, r1
    1e94:	01 e0       	ldi	r16, 0x01	; 1
    1e96:	20 e0       	ldi	r18, 0x00	; 0
    1e98:	44 e0       	ldi	r20, 0x04	; 4
    1e9a:	50 e0       	ldi	r21, 0x00	; 0
    1e9c:	68 e0       	ldi	r22, 0x08	; 8
    1e9e:	70 e0       	ldi	r23, 0x00	; 0
    1ea0:	e1 e0       	ldi	r30, 0x01	; 1
    1ea2:	f0 e0       	ldi	r31, 0x00	; 0
    1ea4:	ec 0f       	add	r30, r28
    1ea6:	fd 1f       	adc	r31, r29
    1ea8:	8e 0f       	add	r24, r30
    1eaa:	9f 1f       	adc	r25, r31
    1eac:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
				glcd_puts("Up(Back)",30,0,0,1,0);
    1eb0:	20 e0       	ldi	r18, 0x00	; 0
    1eb2:	40 e0       	ldi	r20, 0x00	; 0
    1eb4:	50 e0       	ldi	r21, 0x00	; 0
    1eb6:	6e e1       	ldi	r22, 0x1E	; 30
    1eb8:	70 e0       	ldi	r23, 0x00	; 0
    1eba:	8a eb       	ldi	r24, 0xBA	; 186
    1ebc:	92 e0       	ldi	r25, 0x02	; 2
    1ebe:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
				glcd_puts("Down(Edit)",30,7,0,1,0);
    1ec2:	20 e0       	ldi	r18, 0x00	; 0
    1ec4:	47 e0       	ldi	r20, 0x07	; 7
    1ec6:	50 e0       	ldi	r21, 0x00	; 0
    1ec8:	6e e1       	ldi	r22, 0x1E	; 30
    1eca:	70 e0       	ldi	r23, 0x00	; 0
    1ecc:	83 ec       	ldi	r24, 0xC3	; 195
    1ece:	92 e0       	ldi	r25, 0x02	; 2
    1ed0:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
				glcd_puts("<",0,4,0,1,0);
    1ed4:	20 e0       	ldi	r18, 0x00	; 0
    1ed6:	44 e0       	ldi	r20, 0x04	; 4
    1ed8:	50 e0       	ldi	r21, 0x00	; 0
    1eda:	60 e0       	ldi	r22, 0x00	; 0
    1edc:	70 e0       	ldi	r23, 0x00	; 0
    1ede:	8e ec       	ldi	r24, 0xCE	; 206
    1ee0:	92 e0       	ldi	r25, 0x02	; 2
    1ee2:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
				glcd_puts(">",120,4,0,1,0);
    1ee6:	20 e0       	ldi	r18, 0x00	; 0
    1ee8:	44 e0       	ldi	r20, 0x04	; 4
    1eea:	50 e0       	ldi	r21, 0x00	; 0
    1eec:	68 e7       	ldi	r22, 0x78	; 120
    1eee:	70 e0       	ldi	r23, 0x00	; 0
    1ef0:	80 ed       	ldi	r24, 0xD0	; 208
    1ef2:	92 e0       	ldi	r25, 0x02	; 2
    1ef4:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
				drawPattern();
    1ef8:	0e 94 a5 0c 	call	0x194a	; 0x194a <drawPattern>
    1efc:	ff e9       	ldi	r31, 0x9F	; 159
    1efe:	26 e8       	ldi	r18, 0x86	; 134
    1f00:	31 e0       	ldi	r19, 0x01	; 1
    1f02:	f1 50       	subi	r31, 0x01	; 1
    1f04:	20 40       	sbci	r18, 0x00	; 0
    1f06:	30 40       	sbci	r19, 0x00	; 0
    1f08:	e1 f7       	brne	.-8      	; 0x1f02 <menuPatern+0x276>
    1f0a:	00 c0       	rjmp	.+0      	; 0x1f0c <menuPatern+0x280>
    1f0c:	00 00       	nop
    1f0e:	1c cf       	rjmp	.-456    	; 0x1d48 <menuPatern+0xbc>
				_delay_ms(500);
		}
		if (pushKey == 0b00001111)
    1f10:	1f 30       	cpi	r17, 0x0F	; 15
    1f12:	09 f0       	breq	.+2      	; 0x1f16 <menuPatern+0x28a>
    1f14:	19 cf       	rjmp	.-462    	; 0x1d48 <menuPatern+0xbc>
		{//left
				glcd_clear();
    1f16:	0e 94 57 05 	call	0xaae	; 0xaae <glcd_clear>
    1f1a:	81 ee       	ldi	r24, 0xE1	; 225
    1f1c:	94 e0       	ldi	r25, 0x04	; 4
    1f1e:	01 97       	sbiw	r24, 0x01	; 1
    1f20:	f1 f7       	brne	.-4      	; 0x1f1e <menuPatern+0x292>
    1f22:	00 c0       	rjmp	.+0      	; 0x1f24 <menuPatern+0x298>
    1f24:	00 00       	nop
				_delay_ms(5);
				selNumpatterm = --selNumpatterm <0 ? 7 : selNumpatterm;
    1f26:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <selNumpatterm>
    1f2a:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <selNumpatterm+0x1>
    1f2e:	01 97       	sbiw	r24, 0x01	; 1
    1f30:	12 f4       	brpl	.+4      	; 0x1f36 <menuPatern+0x2aa>
    1f32:	87 e0       	ldi	r24, 0x07	; 7
    1f34:	90 e0       	ldi	r25, 0x00	; 0
    1f36:	90 93 dd 02 	sts	0x02DD, r25	; 0x8002dd <selNumpatterm+0x1>
    1f3a:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <selNumpatterm>
				glcd_puts(namePattern[selNumpatterm],8,4,0,1,0);
    1f3e:	88 0f       	add	r24, r24
    1f40:	99 1f       	adc	r25, r25
    1f42:	88 0f       	add	r24, r24
    1f44:	99 1f       	adc	r25, r25
    1f46:	88 0f       	add	r24, r24
    1f48:	99 1f       	adc	r25, r25
    1f4a:	e1 2c       	mov	r14, r1
    1f4c:	01 e0       	ldi	r16, 0x01	; 1
    1f4e:	20 e0       	ldi	r18, 0x00	; 0
    1f50:	44 e0       	ldi	r20, 0x04	; 4
    1f52:	50 e0       	ldi	r21, 0x00	; 0
    1f54:	68 e0       	ldi	r22, 0x08	; 8
    1f56:	70 e0       	ldi	r23, 0x00	; 0
    1f58:	e1 e0       	ldi	r30, 0x01	; 1
    1f5a:	f0 e0       	ldi	r31, 0x00	; 0
    1f5c:	ec 0f       	add	r30, r28
    1f5e:	fd 1f       	adc	r31, r29
    1f60:	8e 0f       	add	r24, r30
    1f62:	9f 1f       	adc	r25, r31
    1f64:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
				glcd_puts("Up(Back)",30,0,0,1,0);
    1f68:	20 e0       	ldi	r18, 0x00	; 0
    1f6a:	40 e0       	ldi	r20, 0x00	; 0
    1f6c:	50 e0       	ldi	r21, 0x00	; 0
    1f6e:	6e e1       	ldi	r22, 0x1E	; 30
    1f70:	70 e0       	ldi	r23, 0x00	; 0
    1f72:	8a eb       	ldi	r24, 0xBA	; 186
    1f74:	92 e0       	ldi	r25, 0x02	; 2
    1f76:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
				glcd_puts("Down(Edit)",30,7,0,1,0);
    1f7a:	20 e0       	ldi	r18, 0x00	; 0
    1f7c:	47 e0       	ldi	r20, 0x07	; 7
    1f7e:	50 e0       	ldi	r21, 0x00	; 0
    1f80:	6e e1       	ldi	r22, 0x1E	; 30
    1f82:	70 e0       	ldi	r23, 0x00	; 0
    1f84:	83 ec       	ldi	r24, 0xC3	; 195
    1f86:	92 e0       	ldi	r25, 0x02	; 2
    1f88:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
				glcd_puts("<",0,4,0,1,0);
    1f8c:	20 e0       	ldi	r18, 0x00	; 0
    1f8e:	44 e0       	ldi	r20, 0x04	; 4
    1f90:	50 e0       	ldi	r21, 0x00	; 0
    1f92:	60 e0       	ldi	r22, 0x00	; 0
    1f94:	70 e0       	ldi	r23, 0x00	; 0
    1f96:	8e ec       	ldi	r24, 0xCE	; 206
    1f98:	92 e0       	ldi	r25, 0x02	; 2
    1f9a:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
				glcd_puts(">",120,4,0,1,0);
    1f9e:	20 e0       	ldi	r18, 0x00	; 0
    1fa0:	44 e0       	ldi	r20, 0x04	; 4
    1fa2:	50 e0       	ldi	r21, 0x00	; 0
    1fa4:	68 e7       	ldi	r22, 0x78	; 120
    1fa6:	70 e0       	ldi	r23, 0x00	; 0
    1fa8:	80 ed       	ldi	r24, 0xD0	; 208
    1faa:	92 e0       	ldi	r25, 0x02	; 2
    1fac:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
				drawPattern();
    1fb0:	0e 94 a5 0c 	call	0x194a	; 0x194a <drawPattern>
    1fb4:	ff e9       	ldi	r31, 0x9F	; 159
    1fb6:	26 e8       	ldi	r18, 0x86	; 134
    1fb8:	31 e0       	ldi	r19, 0x01	; 1
    1fba:	f1 50       	subi	r31, 0x01	; 1
    1fbc:	20 40       	sbci	r18, 0x00	; 0
    1fbe:	30 40       	sbci	r19, 0x00	; 0
    1fc0:	e1 f7       	brne	.-8      	; 0x1fba <menuPatern+0x32e>
    1fc2:	00 c0       	rjmp	.+0      	; 0x1fc4 <menuPatern+0x338>
    1fc4:	00 00       	nop
    1fc6:	c0 ce       	rjmp	.-640    	; 0x1d48 <menuPatern+0xbc>
				_delay_ms(500);
			
		}
	}
}
    1fc8:	c0 5c       	subi	r28, 0xC0	; 192
    1fca:	df 4f       	sbci	r29, 0xFF	; 255
    1fcc:	0f b6       	in	r0, 0x3f	; 63
    1fce:	f8 94       	cli
    1fd0:	de bf       	out	0x3e, r29	; 62
    1fd2:	0f be       	out	0x3f, r0	; 63
    1fd4:	cd bf       	out	0x3d, r28	; 61
    1fd6:	df 91       	pop	r29
    1fd8:	cf 91       	pop	r28
    1fda:	1f 91       	pop	r17
    1fdc:	0f 91       	pop	r16
    1fde:	ef 90       	pop	r14
    1fe0:	08 95       	ret

00001fe2 <main>:
void main(void)
{
    1fe2:	cf 93       	push	r28
    1fe4:	df 93       	push	r29
    1fe6:	cd b7       	in	r28, 0x3d	; 61
    1fe8:	de b7       	in	r29, 0x3e	; 62
    1fea:	da 95       	dec	r29
    1fec:	0f b6       	in	r0, 0x3f	; 63
    1fee:	f8 94       	cli
    1ff0:	de bf       	out	0x3e, r29	; 62
    1ff2:	0f be       	out	0x3f, r0	; 63
    1ff4:	cd bf       	out	0x3d, r28	; 61
#pragma used+

unsigned char nameMicro[][16] = {"Micro01", "Micro02", "Micro03", "Micro04", "Micro05", "Micro06",
    1ff6:	80 e0       	ldi	r24, 0x00	; 0
    1ff8:	ea ea       	ldi	r30, 0xAA	; 170
    1ffa:	f1 e0       	ldi	r31, 0x01	; 1
    1ffc:	de 01       	movw	r26, r28
    1ffe:	11 96       	adiw	r26, 0x01	; 1
    2000:	01 90       	ld	r0, Z+
    2002:	0d 92       	st	X+, r0
    2004:	8a 95       	dec	r24
    2006:	e1 f7       	brne	.-8      	; 0x2000 <main+0x1e>
	"Micro13", "Micro14", "Micro15", "Micro16"};
#pragma used-



DATADDR = 0xff;
    2008:	8f ef       	ldi	r24, 0xFF	; 255
    200a:	8a bb       	out	0x1a, r24	; 26
DDRD=0x80;
    200c:	80 e8       	ldi	r24, 0x80	; 128
    200e:	81 bb       	out	0x11, r24	; 17
DDRD &= 0x83;
    2010:	81 b3       	in	r24, 0x11	; 17
    2012:	83 78       	andi	r24, 0x83	; 131
    2014:	81 bb       	out	0x11, r24	; 17
PORTD |= 0x7c;
    2016:	82 b3       	in	r24, 0x12	; 18
    2018:	8c 67       	ori	r24, 0x7C	; 124
    201a:	82 bb       	out	0x12, r24	; 18
DDRC = 0x0F;
    201c:	8f e0       	ldi	r24, 0x0F	; 15
    201e:	84 bb       	out	0x14, r24	; 20

glcd_on();
    2020:	0e 94 0a 05 	call	0xa14	; 0xa14 <glcd_on>

UCSRB = (1<<RXEN) | (1<<RXCIE) |  (1<<TXEN);
    2024:	88 e9       	ldi	r24, 0x98	; 152
    2026:	8a b9       	out	0x0a, r24	; 10
UCSRC = (1<< UCSZ1) | (1<<UCSZ0) | (1<<URSEL);
    2028:	86 e8       	ldi	r24, 0x86	; 134
    202a:	80 bd       	out	0x20, r24	; 32
UBRRL = 0x33;
    202c:	83 e3       	ldi	r24, 0x33	; 51
    202e:	89 b9       	out	0x09, r24	; 9
sei();
    2030:	78 94       	sei

DDRD &= 0x83;
    2032:	81 b3       	in	r24, 0x11	; 17
    2034:	83 78       	andi	r24, 0x83	; 131
    2036:	81 bb       	out	0x11, r24	; 17
PORTD |= 0x7c;
    2038:	82 b3       	in	r24, 0x12	; 18
    203a:	8c 67       	ori	r24, 0x7C	; 124
    203c:	82 bb       	out	0x12, r24	; 18
    203e:	00 e0       	ldi	r16, 0x00	; 0
    2040:	10 e0       	ldi	r17, 0x00	; 0
for (int v=0; v<16; v++)
{
	eeprom_update_block (( const void *) paterns[v] , ( void *) (16*v), 16);
    2042:	40 e1       	ldi	r20, 0x10	; 16
    2044:	50 e0       	ldi	r21, 0x00	; 0
    2046:	b8 01       	movw	r22, r16
    2048:	c8 01       	movw	r24, r16
    204a:	80 5a       	subi	r24, 0xA0	; 160
    204c:	9f 4f       	sbci	r25, 0xFF	; 255
    204e:	0e 94 97 13 	call	0x272e	; 0x272e <eeprom_update_block>
    2052:	00 5f       	subi	r16, 0xF0	; 240
    2054:	1f 4f       	sbci	r17, 0xFF	; 255
UBRRL = 0x33;
sei();

DDRD &= 0x83;
PORTD |= 0x7c;
for (int v=0; v<16; v++)
    2056:	01 15       	cp	r16, r1
    2058:	21 e0       	ldi	r18, 0x01	; 1
    205a:	12 07       	cpc	r17, r18
    205c:	91 f7       	brne	.-28     	; 0x2042 <main+0x60>
    205e:	00 e0       	ldi	r16, 0x00	; 0
    2060:	10 e0       	ldi	r17, 0x00	; 0
{
	eeprom_update_block (( const void *) paterns[v] , ( void *) (16*v), 16);
}
for (int z=0; z<16; z++)
{
eeprom_read_block (( void *) paterns[z] , ( const void *) (16*z), 16) ;
    2062:	40 e1       	ldi	r20, 0x10	; 16
    2064:	50 e0       	ldi	r21, 0x00	; 0
    2066:	b8 01       	movw	r22, r16
    2068:	c8 01       	movw	r24, r16
    206a:	80 5a       	subi	r24, 0xA0	; 160
    206c:	9f 4f       	sbci	r25, 0xFF	; 255
    206e:	0e 94 87 13 	call	0x270e	; 0x270e <eeprom_read_block>
    2072:	00 5f       	subi	r16, 0xF0	; 240
    2074:	1f 4f       	sbci	r17, 0xFF	; 255
PORTD |= 0x7c;
for (int v=0; v<16; v++)
{
	eeprom_update_block (( const void *) paterns[v] , ( void *) (16*v), 16);
}
for (int z=0; z<16; z++)
    2076:	01 15       	cp	r16, r1
    2078:	81 e0       	ldi	r24, 0x01	; 1
    207a:	18 07       	cpc	r17, r24
    207c:	91 f7       	brne	.-28     	; 0x2062 <main+0x80>
    207e:	1f ef       	ldi	r17, 0xFF	; 255
	else if (pushKey == 0b00001111)
	{//left
		if(pageScreen == 1){
		//glcd_clear();
		//_delay_ms(5);
		selNumMicro = --selNumMicro <0 ? 15 : selNumMicro;
    2080:	0f 2e       	mov	r0, r31
    2082:	ff e0       	ldi	r31, 0x0F	; 15
    2084:	8f 2e       	mov	r8, r31
    2086:	f0 2d       	mov	r31, r0
    2088:	91 2c       	mov	r9, r1
	{
		if(pageScreen == 1){
		//glcd_clear();
		//_delay_ms(5);
		
		selNumMicro =  ++selNumMicro>=16 ? 0 : selNumMicro;
    208a:	b1 2c       	mov	r11, r1
    208c:	f1 2c       	mov	r15, r1
			glcd_puts(nameMicro[selNumMicro],8,3,0,2,0);
			glcd_puts("Up",50,0,0,1,0);
			glcd_puts("<",0,4,0,1,0);
			glcd_puts(">",120,4,0,1,0);
		}else{
			pageScreen = 1;
    208e:	cc 24       	eor	r12, r12
    2090:	c3 94       	inc	r12
    2092:	d1 2c       	mov	r13, r1
	}
	if (pushKey == 0b00011110)
	{//ok
		if (pageScreen == 1)
		{
		resetMenu = 0xff;
    2094:	aa 24       	eor	r10, r10
    2096:	aa 94       	dec	r10
eeprom_read_block (( void *) paterns[z] , ( const void *) (16*z), 16) ;
}

unsigned char resetMenu = 0xff;
while(1){
	unsigned char pushKey = (PIND>>2);
    2098:	80 b3       	in	r24, 0x10	; 16
    209a:	86 95       	lsr	r24
    209c:	86 95       	lsr	r24
	pushKey &=0x1F;
    209e:	8f 71       	andi	r24, 0x1F	; 31
	if (pushKey == 0b00011111 && resetMenu)
    20a0:	8f 31       	cpi	r24, 0x1F	; 31
    20a2:	09 f0       	breq	.+2      	; 0x20a6 <main+0xc4>
    20a4:	65 c0       	rjmp	.+202    	; 0x2170 <main+0x18e>
    20a6:	11 23       	and	r17, r17
    20a8:	09 f4       	brne	.+2      	; 0x20ac <main+0xca>
    20aa:	6c c1       	rjmp	.+728    	; 0x2384 <main+0x3a2>
	{
		if(pageScreen == 0){
    20ac:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <pageScreen>
    20b0:	90 91 df 02 	lds	r25, 0x02DF	; 0x8002df <pageScreen+0x1>
    20b4:	89 2b       	or	r24, r25
    20b6:	f1 f4       	brne	.+60     	; 0x20f4 <main+0x112>
			glcd_clear();
    20b8:	0e 94 57 05 	call	0xaae	; 0xaae <glcd_clear>
    20bc:	e1 ee       	ldi	r30, 0xE1	; 225
    20be:	f4 e0       	ldi	r31, 0x04	; 4
    20c0:	31 97       	sbiw	r30, 0x01	; 1
    20c2:	f1 f7       	brne	.-4      	; 0x20c0 <main+0xde>
    20c4:	00 c0       	rjmp	.+0      	; 0x20c6 <main+0xe4>
    20c6:	00 00       	nop
			_delay_ms(5);
			glcd_puts(t,8,3,0,2,0);
    20c8:	e1 2c       	mov	r14, r1
    20ca:	02 e0       	ldi	r16, 0x02	; 2
    20cc:	20 e0       	ldi	r18, 0x00	; 0
    20ce:	43 e0       	ldi	r20, 0x03	; 3
    20d0:	50 e0       	ldi	r21, 0x00	; 0
    20d2:	68 e0       	ldi	r22, 0x08	; 8
    20d4:	70 e0       	ldi	r23, 0x00	; 0
    20d6:	80 e6       	ldi	r24, 0x60	; 96
    20d8:	91 e0       	ldi	r25, 0x01	; 1
    20da:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
			glcd_puts("Down",50,7,0,1,0);
    20de:	01 e0       	ldi	r16, 0x01	; 1
    20e0:	20 e0       	ldi	r18, 0x00	; 0
    20e2:	47 e0       	ldi	r20, 0x07	; 7
    20e4:	50 e0       	ldi	r21, 0x00	; 0
    20e6:	62 e3       	ldi	r22, 0x32	; 50
    20e8:	70 e0       	ldi	r23, 0x00	; 0
    20ea:	82 ed       	ldi	r24, 0xD2	; 210
    20ec:	92 e0       	ldi	r25, 0x02	; 2
    20ee:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
    20f2:	48 c1       	rjmp	.+656    	; 0x2384 <main+0x3a2>
			
		}else{
				glcd_clear();
    20f4:	0e 94 57 05 	call	0xaae	; 0xaae <glcd_clear>
    20f8:	81 ee       	ldi	r24, 0xE1	; 225
    20fa:	94 e0       	ldi	r25, 0x04	; 4
    20fc:	01 97       	sbiw	r24, 0x01	; 1
    20fe:	f1 f7       	brne	.-4      	; 0x20fc <main+0x11a>
    2100:	00 c0       	rjmp	.+0      	; 0x2102 <main+0x120>
    2102:	00 00       	nop
				_delay_ms(5);
				glcd_puts(nameMicro[selNumMicro],8,3,0,2,0);
    2104:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <selNumMicro>
    2108:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    210c:	82 95       	swap	r24
    210e:	92 95       	swap	r25
    2110:	90 7f       	andi	r25, 0xF0	; 240
    2112:	98 27       	eor	r25, r24
    2114:	80 7f       	andi	r24, 0xF0	; 240
    2116:	98 27       	eor	r25, r24
    2118:	e1 2c       	mov	r14, r1
    211a:	02 e0       	ldi	r16, 0x02	; 2
    211c:	20 e0       	ldi	r18, 0x00	; 0
    211e:	43 e0       	ldi	r20, 0x03	; 3
    2120:	50 e0       	ldi	r21, 0x00	; 0
    2122:	68 e0       	ldi	r22, 0x08	; 8
    2124:	70 e0       	ldi	r23, 0x00	; 0
    2126:	e1 e0       	ldi	r30, 0x01	; 1
    2128:	f0 e0       	ldi	r31, 0x00	; 0
    212a:	ec 0f       	add	r30, r28
    212c:	fd 1f       	adc	r31, r29
    212e:	8e 0f       	add	r24, r30
    2130:	9f 1f       	adc	r25, r31
    2132:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
				glcd_puts("Up",50,0,0,1,0);
    2136:	01 e0       	ldi	r16, 0x01	; 1
    2138:	20 e0       	ldi	r18, 0x00	; 0
    213a:	4b 2d       	mov	r20, r11
    213c:	5f 2d       	mov	r21, r15
    213e:	62 e3       	ldi	r22, 0x32	; 50
    2140:	70 e0       	ldi	r23, 0x00	; 0
    2142:	87 ed       	ldi	r24, 0xD7	; 215
    2144:	92 e0       	ldi	r25, 0x02	; 2
    2146:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
				glcd_puts("<",0,4,0,1,0);
    214a:	20 e0       	ldi	r18, 0x00	; 0
    214c:	44 e0       	ldi	r20, 0x04	; 4
    214e:	50 e0       	ldi	r21, 0x00	; 0
    2150:	6b 2d       	mov	r22, r11
    2152:	7f 2d       	mov	r23, r15
    2154:	8e ec       	ldi	r24, 0xCE	; 206
    2156:	92 e0       	ldi	r25, 0x02	; 2
    2158:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
				glcd_puts(">",120,4,0,1,0);
    215c:	20 e0       	ldi	r18, 0x00	; 0
    215e:	44 e0       	ldi	r20, 0x04	; 4
    2160:	50 e0       	ldi	r21, 0x00	; 0
    2162:	68 e7       	ldi	r22, 0x78	; 120
    2164:	70 e0       	ldi	r23, 0x00	; 0
    2166:	80 ed       	ldi	r24, 0xD0	; 208
    2168:	92 e0       	ldi	r25, 0x02	; 2
    216a:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
    216e:	0a c1       	rjmp	.+532    	; 0x2384 <main+0x3a2>
		}
		resetMenu = 0x00;
	}
	if (pushKey == 0b00011110)
    2170:	8e 31       	cpi	r24, 0x1E	; 30
    2172:	e1 f4       	brne	.+56     	; 0x21ac <main+0x1ca>
	{//ok
		if (pageScreen == 1)
    2174:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <pageScreen>
    2178:	90 91 df 02 	lds	r25, 0x02DF	; 0x8002df <pageScreen+0x1>
    217c:	01 97       	sbiw	r24, 0x01	; 1
    217e:	09 f0       	breq	.+2      	; 0x2182 <main+0x1a0>
    2180:	8b cf       	rjmp	.-234    	; 0x2098 <main+0xb6>
		{
		resetMenu = 0xff;
		menuPatern();
    2182:	0e 94 46 0e 	call	0x1c8c	; 0x1c8c <menuPatern>
		PORTD |= 0x7c;
    2186:	82 b3       	in	r24, 0x12	; 18
    2188:	8c 67       	ori	r24, 0x7C	; 124
    218a:	82 bb       	out	0x12, r24	; 18
    218c:	ff e9       	ldi	r31, 0x9F	; 159
    218e:	26 e8       	ldi	r18, 0x86	; 134
    2190:	81 e0       	ldi	r24, 0x01	; 1
    2192:	f1 50       	subi	r31, 0x01	; 1
    2194:	20 40       	sbci	r18, 0x00	; 0
    2196:	80 40       	sbci	r24, 0x00	; 0
    2198:	e1 f7       	brne	.-8      	; 0x2192 <main+0x1b0>
    219a:	00 c0       	rjmp	.+0      	; 0x219c <main+0x1ba>
    219c:	00 00       	nop
		_delay_ms(500);
		pushKey = (PIND>>2);
    219e:	80 b3       	in	r24, 0x10	; 16
		pushKey &=0x1F;
		pageScreen = 1;
    21a0:	d0 92 df 02 	sts	0x02DF, r13	; 0x8002df <pageScreen+0x1>
    21a4:	c0 92 de 02 	sts	0x02DE, r12	; 0x8002de <pageScreen>
	}
	if (pushKey == 0b00011110)
	{//ok
		if (pageScreen == 1)
		{
		resetMenu = 0xff;
    21a8:	1a 2d       	mov	r17, r10
    21aa:	76 cf       	rjmp	.-276    	; 0x2098 <main+0xb6>
		pushKey = (PIND>>2);
		pushKey &=0x1F;
		pageScreen = 1;
		}
	}
	else if (pushKey == 0b00011101)
    21ac:	8d 31       	cpi	r24, 0x1D	; 29
    21ae:	71 f5       	brne	.+92     	; 0x220c <main+0x22a>
	{//up
		pageScreen--;		
    21b0:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <pageScreen>
    21b4:	90 91 df 02 	lds	r25, 0x02DF	; 0x8002df <pageScreen+0x1>
    21b8:	01 97       	sbiw	r24, 0x01	; 1
    21ba:	90 93 df 02 	sts	0x02DF, r25	; 0x8002df <pageScreen+0x1>
    21be:	80 93 de 02 	sts	0x02DE, r24	; 0x8002de <pageScreen>
		if(pageScreen == 0){
    21c2:	89 2b       	or	r24, r25
    21c4:	f1 f4       	brne	.+60     	; 0x2202 <main+0x220>
			glcd_clear();
    21c6:	0e 94 57 05 	call	0xaae	; 0xaae <glcd_clear>
    21ca:	e1 ee       	ldi	r30, 0xE1	; 225
    21cc:	f4 e0       	ldi	r31, 0x04	; 4
    21ce:	31 97       	sbiw	r30, 0x01	; 1
    21d0:	f1 f7       	brne	.-4      	; 0x21ce <main+0x1ec>
    21d2:	00 c0       	rjmp	.+0      	; 0x21d4 <main+0x1f2>
    21d4:	00 00       	nop
			_delay_ms(5);
			glcd_puts(t,8,3,0,2,0);
    21d6:	e1 2c       	mov	r14, r1
    21d8:	02 e0       	ldi	r16, 0x02	; 2
    21da:	20 e0       	ldi	r18, 0x00	; 0
    21dc:	43 e0       	ldi	r20, 0x03	; 3
    21de:	50 e0       	ldi	r21, 0x00	; 0
    21e0:	68 e0       	ldi	r22, 0x08	; 8
    21e2:	70 e0       	ldi	r23, 0x00	; 0
    21e4:	80 e6       	ldi	r24, 0x60	; 96
    21e6:	91 e0       	ldi	r25, 0x01	; 1
    21e8:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
			glcd_puts("Down",50,7,0,1,0);
    21ec:	01 e0       	ldi	r16, 0x01	; 1
    21ee:	20 e0       	ldi	r18, 0x00	; 0
    21f0:	47 e0       	ldi	r20, 0x07	; 7
    21f2:	50 e0       	ldi	r21, 0x00	; 0
    21f4:	62 e3       	ldi	r22, 0x32	; 50
    21f6:	70 e0       	ldi	r23, 0x00	; 0
    21f8:	82 ed       	ldi	r24, 0xD2	; 210
    21fa:	92 e0       	ldi	r25, 0x02	; 2
    21fc:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
    2200:	4b cf       	rjmp	.-362    	; 0x2098 <main+0xb6>
		}
		else{
			pageScreen = 0;
    2202:	b0 92 de 02 	sts	0x02DE, r11	; 0x8002de <pageScreen>
    2206:	f0 92 df 02 	sts	0x02DF, r15	; 0x8002df <pageScreen+0x1>
    220a:	46 cf       	rjmp	.-372    	; 0x2098 <main+0xb6>
		}
	}
	else if (pushKey == 0b00011011)
    220c:	8b 31       	cpi	r24, 0x1B	; 27
    220e:	09 f0       	breq	.+2      	; 0x2212 <main+0x230>
    2210:	4e c0       	rjmp	.+156    	; 0x22ae <main+0x2cc>
	{//down
		pageScreen++;
    2212:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <pageScreen>
    2216:	90 91 df 02 	lds	r25, 0x02DF	; 0x8002df <pageScreen+0x1>
    221a:	01 96       	adiw	r24, 0x01	; 1
    221c:	90 93 df 02 	sts	0x02DF, r25	; 0x8002df <pageScreen+0x1>
    2220:	80 93 de 02 	sts	0x02DE, r24	; 0x8002de <pageScreen>

		if(pageScreen == 1){
    2224:	01 97       	sbiw	r24, 0x01	; 1
    2226:	f1 f5       	brne	.+124    	; 0x22a4 <main+0x2c2>
			glcd_clear();
    2228:	0e 94 57 05 	call	0xaae	; 0xaae <glcd_clear>
    222c:	81 ee       	ldi	r24, 0xE1	; 225
    222e:	94 e0       	ldi	r25, 0x04	; 4
    2230:	01 97       	sbiw	r24, 0x01	; 1
    2232:	f1 f7       	brne	.-4      	; 0x2230 <main+0x24e>
    2234:	00 c0       	rjmp	.+0      	; 0x2236 <main+0x254>
    2236:	00 00       	nop
			_delay_ms(5);
			glcd_puts(nameMicro[selNumMicro],8,3,0,2,0);
    2238:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <selNumMicro>
    223c:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    2240:	82 95       	swap	r24
    2242:	92 95       	swap	r25
    2244:	90 7f       	andi	r25, 0xF0	; 240
    2246:	98 27       	eor	r25, r24
    2248:	80 7f       	andi	r24, 0xF0	; 240
    224a:	98 27       	eor	r25, r24
    224c:	e1 2c       	mov	r14, r1
    224e:	02 e0       	ldi	r16, 0x02	; 2
    2250:	20 e0       	ldi	r18, 0x00	; 0
    2252:	43 e0       	ldi	r20, 0x03	; 3
    2254:	50 e0       	ldi	r21, 0x00	; 0
    2256:	68 e0       	ldi	r22, 0x08	; 8
    2258:	70 e0       	ldi	r23, 0x00	; 0
    225a:	e1 e0       	ldi	r30, 0x01	; 1
    225c:	f0 e0       	ldi	r31, 0x00	; 0
    225e:	ec 0f       	add	r30, r28
    2260:	fd 1f       	adc	r31, r29
    2262:	8e 0f       	add	r24, r30
    2264:	9f 1f       	adc	r25, r31
    2266:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
			glcd_puts("Up",50,0,0,1,0);
    226a:	01 e0       	ldi	r16, 0x01	; 1
    226c:	20 e0       	ldi	r18, 0x00	; 0
    226e:	4b 2d       	mov	r20, r11
    2270:	5f 2d       	mov	r21, r15
    2272:	62 e3       	ldi	r22, 0x32	; 50
    2274:	70 e0       	ldi	r23, 0x00	; 0
    2276:	87 ed       	ldi	r24, 0xD7	; 215
    2278:	92 e0       	ldi	r25, 0x02	; 2
    227a:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
			glcd_puts("<",0,4,0,1,0);
    227e:	20 e0       	ldi	r18, 0x00	; 0
    2280:	44 e0       	ldi	r20, 0x04	; 4
    2282:	50 e0       	ldi	r21, 0x00	; 0
    2284:	6b 2d       	mov	r22, r11
    2286:	7f 2d       	mov	r23, r15
    2288:	8e ec       	ldi	r24, 0xCE	; 206
    228a:	92 e0       	ldi	r25, 0x02	; 2
    228c:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
			glcd_puts(">",120,4,0,1,0);
    2290:	20 e0       	ldi	r18, 0x00	; 0
    2292:	44 e0       	ldi	r20, 0x04	; 4
    2294:	50 e0       	ldi	r21, 0x00	; 0
    2296:	68 e7       	ldi	r22, 0x78	; 120
    2298:	70 e0       	ldi	r23, 0x00	; 0
    229a:	80 ed       	ldi	r24, 0xD0	; 208
    229c:	92 e0       	ldi	r25, 0x02	; 2
    229e:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
    22a2:	fa ce       	rjmp	.-524    	; 0x2098 <main+0xb6>
		}else{
			pageScreen = 1;
    22a4:	d0 92 df 02 	sts	0x02DF, r13	; 0x8002df <pageScreen+0x1>
    22a8:	c0 92 de 02 	sts	0x02DE, r12	; 0x8002de <pageScreen>
    22ac:	f5 ce       	rjmp	.-534    	; 0x2098 <main+0xb6>
		}

	}
	else if (pushKey == 0b00010111)
    22ae:	87 31       	cpi	r24, 0x17	; 23
    22b0:	a1 f5       	brne	.+104    	; 0x231a <main+0x338>
	{
		if(pageScreen == 1){
    22b2:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <pageScreen>
    22b6:	90 91 df 02 	lds	r25, 0x02DF	; 0x8002df <pageScreen+0x1>
    22ba:	01 97       	sbiw	r24, 0x01	; 1
    22bc:	09 f0       	breq	.+2      	; 0x22c0 <main+0x2de>
    22be:	ec ce       	rjmp	.-552    	; 0x2098 <main+0xb6>
		//glcd_clear();
		//_delay_ms(5);
		
		selNumMicro =  ++selNumMicro>=16 ? 0 : selNumMicro;
    22c0:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <selNumMicro>
    22c4:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    22c8:	01 96       	adiw	r24, 0x01	; 1
    22ca:	80 31       	cpi	r24, 0x10	; 16
    22cc:	91 05       	cpc	r25, r1
    22ce:	14 f0       	brlt	.+4      	; 0x22d4 <main+0x2f2>
    22d0:	8b 2d       	mov	r24, r11
    22d2:	9f 2d       	mov	r25, r15
    22d4:	90 93 e1 02 	sts	0x02E1, r25	; 0x8002e1 <selNumMicro+0x1>
    22d8:	80 93 e0 02 	sts	0x02E0, r24	; 0x8002e0 <selNumMicro>
		glcd_puts(nameMicro[selNumMicro],8,3,0,2,0);
    22dc:	82 95       	swap	r24
    22de:	92 95       	swap	r25
    22e0:	90 7f       	andi	r25, 0xF0	; 240
    22e2:	98 27       	eor	r25, r24
    22e4:	80 7f       	andi	r24, 0xF0	; 240
    22e6:	98 27       	eor	r25, r24
    22e8:	e1 2c       	mov	r14, r1
    22ea:	02 e0       	ldi	r16, 0x02	; 2
    22ec:	20 e0       	ldi	r18, 0x00	; 0
    22ee:	43 e0       	ldi	r20, 0x03	; 3
    22f0:	50 e0       	ldi	r21, 0x00	; 0
    22f2:	68 e0       	ldi	r22, 0x08	; 8
    22f4:	70 e0       	ldi	r23, 0x00	; 0
    22f6:	e1 e0       	ldi	r30, 0x01	; 1
    22f8:	f0 e0       	ldi	r31, 0x00	; 0
    22fa:	ec 0f       	add	r30, r28
    22fc:	fd 1f       	adc	r31, r29
    22fe:	8e 0f       	add	r24, r30
    2300:	9f 1f       	adc	r25, r31
    2302:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
    2306:	ff e9       	ldi	r31, 0x9F	; 159
    2308:	26 e8       	ldi	r18, 0x86	; 134
    230a:	81 e0       	ldi	r24, 0x01	; 1
    230c:	f1 50       	subi	r31, 0x01	; 1
    230e:	20 40       	sbci	r18, 0x00	; 0
    2310:	80 40       	sbci	r24, 0x00	; 0
    2312:	e1 f7       	brne	.-8      	; 0x230c <main+0x32a>
    2314:	00 c0       	rjmp	.+0      	; 0x2316 <main+0x334>
    2316:	00 00       	nop
    2318:	bf ce       	rjmp	.-642    	; 0x2098 <main+0xb6>
			//glcd_puts("Up",50,0,0,1,0);
			//glcd_puts("<",0,4,0,1,0);
			//glcd_puts(">",120,4,0,1,0);
		}
	}
	else if (pushKey == 0b00001111)
    231a:	8f 30       	cpi	r24, 0x0F	; 15
    231c:	09 f0       	breq	.+2      	; 0x2320 <main+0x33e>
    231e:	bc ce       	rjmp	.-648    	; 0x2098 <main+0xb6>
	{//left
		if(pageScreen == 1){
    2320:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <pageScreen>
    2324:	90 91 df 02 	lds	r25, 0x02DF	; 0x8002df <pageScreen+0x1>
    2328:	01 97       	sbiw	r24, 0x01	; 1
    232a:	09 f0       	breq	.+2      	; 0x232e <main+0x34c>
    232c:	b5 ce       	rjmp	.-662    	; 0x2098 <main+0xb6>
		//glcd_clear();
		//_delay_ms(5);
		selNumMicro = --selNumMicro <0 ? 15 : selNumMicro;
    232e:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <selNumMicro>
    2332:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <selNumMicro+0x1>
    2336:	01 97       	sbiw	r24, 0x01	; 1
    2338:	12 f4       	brpl	.+4      	; 0x233e <main+0x35c>
    233a:	88 2d       	mov	r24, r8
    233c:	99 2d       	mov	r25, r9
    233e:	90 93 e1 02 	sts	0x02E1, r25	; 0x8002e1 <selNumMicro+0x1>
    2342:	80 93 e0 02 	sts	0x02E0, r24	; 0x8002e0 <selNumMicro>
		glcd_puts(nameMicro[selNumMicro],8,3,0,2,0);
    2346:	82 95       	swap	r24
    2348:	92 95       	swap	r25
    234a:	90 7f       	andi	r25, 0xF0	; 240
    234c:	98 27       	eor	r25, r24
    234e:	80 7f       	andi	r24, 0xF0	; 240
    2350:	98 27       	eor	r25, r24
    2352:	e1 2c       	mov	r14, r1
    2354:	02 e0       	ldi	r16, 0x02	; 2
    2356:	20 e0       	ldi	r18, 0x00	; 0
    2358:	43 e0       	ldi	r20, 0x03	; 3
    235a:	50 e0       	ldi	r21, 0x00	; 0
    235c:	68 e0       	ldi	r22, 0x08	; 8
    235e:	70 e0       	ldi	r23, 0x00	; 0
    2360:	e1 e0       	ldi	r30, 0x01	; 1
    2362:	f0 e0       	ldi	r31, 0x00	; 0
    2364:	ec 0f       	add	r30, r28
    2366:	fd 1f       	adc	r31, r29
    2368:	8e 0f       	add	r24, r30
    236a:	9f 1f       	adc	r25, r31
    236c:	0e 94 13 09 	call	0x1226	; 0x1226 <glcd_puts>
    2370:	ff e9       	ldi	r31, 0x9F	; 159
    2372:	26 e8       	ldi	r18, 0x86	; 134
    2374:	81 e0       	ldi	r24, 0x01	; 1
    2376:	f1 50       	subi	r31, 0x01	; 1
    2378:	20 40       	sbci	r18, 0x00	; 0
    237a:	80 40       	sbci	r24, 0x00	; 0
    237c:	e1 f7       	brne	.-8      	; 0x2376 <main+0x394>
    237e:	00 c0       	rjmp	.+0      	; 0x2380 <main+0x39e>
    2380:	00 00       	nop
    2382:	8a ce       	rjmp	.-748    	; 0x2098 <main+0xb6>
	}
	if (pushKey == 0b00011110)
	{//ok
		if (pageScreen == 1)
		{
		resetMenu = 0xff;
    2384:	10 e0       	ldi	r17, 0x00	; 0
    2386:	88 ce       	rjmp	.-752    	; 0x2098 <main+0xb6>

00002388 <__subsf3>:
    2388:	50 58       	subi	r21, 0x80	; 128

0000238a <__addsf3>:
    238a:	bb 27       	eor	r27, r27
    238c:	aa 27       	eor	r26, r26
    238e:	0e 94 dc 11 	call	0x23b8	; 0x23b8 <__addsf3x>
    2392:	0c 94 f2 12 	jmp	0x25e4	; 0x25e4 <__fp_round>
    2396:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <__fp_pscA>
    239a:	38 f0       	brcs	.+14     	; 0x23aa <__addsf3+0x20>
    239c:	0e 94 eb 12 	call	0x25d6	; 0x25d6 <__fp_pscB>
    23a0:	20 f0       	brcs	.+8      	; 0x23aa <__addsf3+0x20>
    23a2:	39 f4       	brne	.+14     	; 0x23b2 <__addsf3+0x28>
    23a4:	9f 3f       	cpi	r25, 0xFF	; 255
    23a6:	19 f4       	brne	.+6      	; 0x23ae <__addsf3+0x24>
    23a8:	26 f4       	brtc	.+8      	; 0x23b2 <__addsf3+0x28>
    23aa:	0c 94 e1 12 	jmp	0x25c2	; 0x25c2 <__fp_nan>
    23ae:	0e f4       	brtc	.+2      	; 0x23b2 <__addsf3+0x28>
    23b0:	e0 95       	com	r30
    23b2:	e7 fb       	bst	r30, 7
    23b4:	0c 94 db 12 	jmp	0x25b6	; 0x25b6 <__fp_inf>

000023b8 <__addsf3x>:
    23b8:	e9 2f       	mov	r30, r25
    23ba:	0e 94 03 13 	call	0x2606	; 0x2606 <__fp_split3>
    23be:	58 f3       	brcs	.-42     	; 0x2396 <__addsf3+0xc>
    23c0:	ba 17       	cp	r27, r26
    23c2:	62 07       	cpc	r22, r18
    23c4:	73 07       	cpc	r23, r19
    23c6:	84 07       	cpc	r24, r20
    23c8:	95 07       	cpc	r25, r21
    23ca:	20 f0       	brcs	.+8      	; 0x23d4 <__addsf3x+0x1c>
    23cc:	79 f4       	brne	.+30     	; 0x23ec <__addsf3x+0x34>
    23ce:	a6 f5       	brtc	.+104    	; 0x2438 <__addsf3x+0x80>
    23d0:	0c 94 25 13 	jmp	0x264a	; 0x264a <__fp_zero>
    23d4:	0e f4       	brtc	.+2      	; 0x23d8 <__addsf3x+0x20>
    23d6:	e0 95       	com	r30
    23d8:	0b 2e       	mov	r0, r27
    23da:	ba 2f       	mov	r27, r26
    23dc:	a0 2d       	mov	r26, r0
    23de:	0b 01       	movw	r0, r22
    23e0:	b9 01       	movw	r22, r18
    23e2:	90 01       	movw	r18, r0
    23e4:	0c 01       	movw	r0, r24
    23e6:	ca 01       	movw	r24, r20
    23e8:	a0 01       	movw	r20, r0
    23ea:	11 24       	eor	r1, r1
    23ec:	ff 27       	eor	r31, r31
    23ee:	59 1b       	sub	r21, r25
    23f0:	99 f0       	breq	.+38     	; 0x2418 <__addsf3x+0x60>
    23f2:	59 3f       	cpi	r21, 0xF9	; 249
    23f4:	50 f4       	brcc	.+20     	; 0x240a <__addsf3x+0x52>
    23f6:	50 3e       	cpi	r21, 0xE0	; 224
    23f8:	68 f1       	brcs	.+90     	; 0x2454 <__addsf3x+0x9c>
    23fa:	1a 16       	cp	r1, r26
    23fc:	f0 40       	sbci	r31, 0x00	; 0
    23fe:	a2 2f       	mov	r26, r18
    2400:	23 2f       	mov	r18, r19
    2402:	34 2f       	mov	r19, r20
    2404:	44 27       	eor	r20, r20
    2406:	58 5f       	subi	r21, 0xF8	; 248
    2408:	f3 cf       	rjmp	.-26     	; 0x23f0 <__addsf3x+0x38>
    240a:	46 95       	lsr	r20
    240c:	37 95       	ror	r19
    240e:	27 95       	ror	r18
    2410:	a7 95       	ror	r26
    2412:	f0 40       	sbci	r31, 0x00	; 0
    2414:	53 95       	inc	r21
    2416:	c9 f7       	brne	.-14     	; 0x240a <__addsf3x+0x52>
    2418:	7e f4       	brtc	.+30     	; 0x2438 <__addsf3x+0x80>
    241a:	1f 16       	cp	r1, r31
    241c:	ba 0b       	sbc	r27, r26
    241e:	62 0b       	sbc	r22, r18
    2420:	73 0b       	sbc	r23, r19
    2422:	84 0b       	sbc	r24, r20
    2424:	ba f0       	brmi	.+46     	; 0x2454 <__addsf3x+0x9c>
    2426:	91 50       	subi	r25, 0x01	; 1
    2428:	a1 f0       	breq	.+40     	; 0x2452 <__addsf3x+0x9a>
    242a:	ff 0f       	add	r31, r31
    242c:	bb 1f       	adc	r27, r27
    242e:	66 1f       	adc	r22, r22
    2430:	77 1f       	adc	r23, r23
    2432:	88 1f       	adc	r24, r24
    2434:	c2 f7       	brpl	.-16     	; 0x2426 <__addsf3x+0x6e>
    2436:	0e c0       	rjmp	.+28     	; 0x2454 <__addsf3x+0x9c>
    2438:	ba 0f       	add	r27, r26
    243a:	62 1f       	adc	r22, r18
    243c:	73 1f       	adc	r23, r19
    243e:	84 1f       	adc	r24, r20
    2440:	48 f4       	brcc	.+18     	; 0x2454 <__addsf3x+0x9c>
    2442:	87 95       	ror	r24
    2444:	77 95       	ror	r23
    2446:	67 95       	ror	r22
    2448:	b7 95       	ror	r27
    244a:	f7 95       	ror	r31
    244c:	9e 3f       	cpi	r25, 0xFE	; 254
    244e:	08 f0       	brcs	.+2      	; 0x2452 <__addsf3x+0x9a>
    2450:	b0 cf       	rjmp	.-160    	; 0x23b2 <__addsf3+0x28>
    2452:	93 95       	inc	r25
    2454:	88 0f       	add	r24, r24
    2456:	08 f0       	brcs	.+2      	; 0x245a <__addsf3x+0xa2>
    2458:	99 27       	eor	r25, r25
    245a:	ee 0f       	add	r30, r30
    245c:	97 95       	ror	r25
    245e:	87 95       	ror	r24
    2460:	08 95       	ret

00002462 <__fixunssfsi>:
    2462:	0e 94 0b 13 	call	0x2616	; 0x2616 <__fp_splitA>
    2466:	88 f0       	brcs	.+34     	; 0x248a <__fixunssfsi+0x28>
    2468:	9f 57       	subi	r25, 0x7F	; 127
    246a:	98 f0       	brcs	.+38     	; 0x2492 <__fixunssfsi+0x30>
    246c:	b9 2f       	mov	r27, r25
    246e:	99 27       	eor	r25, r25
    2470:	b7 51       	subi	r27, 0x17	; 23
    2472:	b0 f0       	brcs	.+44     	; 0x24a0 <__fixunssfsi+0x3e>
    2474:	e1 f0       	breq	.+56     	; 0x24ae <__fixunssfsi+0x4c>
    2476:	66 0f       	add	r22, r22
    2478:	77 1f       	adc	r23, r23
    247a:	88 1f       	adc	r24, r24
    247c:	99 1f       	adc	r25, r25
    247e:	1a f0       	brmi	.+6      	; 0x2486 <__fixunssfsi+0x24>
    2480:	ba 95       	dec	r27
    2482:	c9 f7       	brne	.-14     	; 0x2476 <__fixunssfsi+0x14>
    2484:	14 c0       	rjmp	.+40     	; 0x24ae <__fixunssfsi+0x4c>
    2486:	b1 30       	cpi	r27, 0x01	; 1
    2488:	91 f0       	breq	.+36     	; 0x24ae <__fixunssfsi+0x4c>
    248a:	0e 94 25 13 	call	0x264a	; 0x264a <__fp_zero>
    248e:	b1 e0       	ldi	r27, 0x01	; 1
    2490:	08 95       	ret
    2492:	0c 94 25 13 	jmp	0x264a	; 0x264a <__fp_zero>
    2496:	67 2f       	mov	r22, r23
    2498:	78 2f       	mov	r23, r24
    249a:	88 27       	eor	r24, r24
    249c:	b8 5f       	subi	r27, 0xF8	; 248
    249e:	39 f0       	breq	.+14     	; 0x24ae <__fixunssfsi+0x4c>
    24a0:	b9 3f       	cpi	r27, 0xF9	; 249
    24a2:	cc f3       	brlt	.-14     	; 0x2496 <__fixunssfsi+0x34>
    24a4:	86 95       	lsr	r24
    24a6:	77 95       	ror	r23
    24a8:	67 95       	ror	r22
    24aa:	b3 95       	inc	r27
    24ac:	d9 f7       	brne	.-10     	; 0x24a4 <__fixunssfsi+0x42>
    24ae:	3e f4       	brtc	.+14     	; 0x24be <__fixunssfsi+0x5c>
    24b0:	90 95       	com	r25
    24b2:	80 95       	com	r24
    24b4:	70 95       	com	r23
    24b6:	61 95       	neg	r22
    24b8:	7f 4f       	sbci	r23, 0xFF	; 255
    24ba:	8f 4f       	sbci	r24, 0xFF	; 255
    24bc:	9f 4f       	sbci	r25, 0xFF	; 255
    24be:	08 95       	ret

000024c0 <__floatunsisf>:
    24c0:	e8 94       	clt
    24c2:	09 c0       	rjmp	.+18     	; 0x24d6 <__floatsisf+0x12>

000024c4 <__floatsisf>:
    24c4:	97 fb       	bst	r25, 7
    24c6:	3e f4       	brtc	.+14     	; 0x24d6 <__floatsisf+0x12>
    24c8:	90 95       	com	r25
    24ca:	80 95       	com	r24
    24cc:	70 95       	com	r23
    24ce:	61 95       	neg	r22
    24d0:	7f 4f       	sbci	r23, 0xFF	; 255
    24d2:	8f 4f       	sbci	r24, 0xFF	; 255
    24d4:	9f 4f       	sbci	r25, 0xFF	; 255
    24d6:	99 23       	and	r25, r25
    24d8:	a9 f0       	breq	.+42     	; 0x2504 <__floatsisf+0x40>
    24da:	f9 2f       	mov	r31, r25
    24dc:	96 e9       	ldi	r25, 0x96	; 150
    24de:	bb 27       	eor	r27, r27
    24e0:	93 95       	inc	r25
    24e2:	f6 95       	lsr	r31
    24e4:	87 95       	ror	r24
    24e6:	77 95       	ror	r23
    24e8:	67 95       	ror	r22
    24ea:	b7 95       	ror	r27
    24ec:	f1 11       	cpse	r31, r1
    24ee:	f8 cf       	rjmp	.-16     	; 0x24e0 <__floatsisf+0x1c>
    24f0:	fa f4       	brpl	.+62     	; 0x2530 <__floatsisf+0x6c>
    24f2:	bb 0f       	add	r27, r27
    24f4:	11 f4       	brne	.+4      	; 0x24fa <__floatsisf+0x36>
    24f6:	60 ff       	sbrs	r22, 0
    24f8:	1b c0       	rjmp	.+54     	; 0x2530 <__floatsisf+0x6c>
    24fa:	6f 5f       	subi	r22, 0xFF	; 255
    24fc:	7f 4f       	sbci	r23, 0xFF	; 255
    24fe:	8f 4f       	sbci	r24, 0xFF	; 255
    2500:	9f 4f       	sbci	r25, 0xFF	; 255
    2502:	16 c0       	rjmp	.+44     	; 0x2530 <__floatsisf+0x6c>
    2504:	88 23       	and	r24, r24
    2506:	11 f0       	breq	.+4      	; 0x250c <__floatsisf+0x48>
    2508:	96 e9       	ldi	r25, 0x96	; 150
    250a:	11 c0       	rjmp	.+34     	; 0x252e <__floatsisf+0x6a>
    250c:	77 23       	and	r23, r23
    250e:	21 f0       	breq	.+8      	; 0x2518 <__floatsisf+0x54>
    2510:	9e e8       	ldi	r25, 0x8E	; 142
    2512:	87 2f       	mov	r24, r23
    2514:	76 2f       	mov	r23, r22
    2516:	05 c0       	rjmp	.+10     	; 0x2522 <__floatsisf+0x5e>
    2518:	66 23       	and	r22, r22
    251a:	71 f0       	breq	.+28     	; 0x2538 <__floatsisf+0x74>
    251c:	96 e8       	ldi	r25, 0x86	; 134
    251e:	86 2f       	mov	r24, r22
    2520:	70 e0       	ldi	r23, 0x00	; 0
    2522:	60 e0       	ldi	r22, 0x00	; 0
    2524:	2a f0       	brmi	.+10     	; 0x2530 <__floatsisf+0x6c>
    2526:	9a 95       	dec	r25
    2528:	66 0f       	add	r22, r22
    252a:	77 1f       	adc	r23, r23
    252c:	88 1f       	adc	r24, r24
    252e:	da f7       	brpl	.-10     	; 0x2526 <__floatsisf+0x62>
    2530:	88 0f       	add	r24, r24
    2532:	96 95       	lsr	r25
    2534:	87 95       	ror	r24
    2536:	97 f9       	bld	r25, 7
    2538:	08 95       	ret

0000253a <fmax>:
    253a:	99 0f       	add	r25, r25
    253c:	bb 0b       	sbc	r27, r27
    253e:	55 0f       	add	r21, r21
    2540:	aa 0b       	sbc	r26, r26
    2542:	e0 e8       	ldi	r30, 0x80	; 128
    2544:	fe ef       	ldi	r31, 0xFE	; 254
    2546:	16 16       	cp	r1, r22
    2548:	17 06       	cpc	r1, r23
    254a:	e8 07       	cpc	r30, r24
    254c:	f9 07       	cpc	r31, r25
    254e:	70 f0       	brcs	.+28     	; 0x256c <fmax+0x32>
    2550:	12 16       	cp	r1, r18
    2552:	13 06       	cpc	r1, r19
    2554:	e4 07       	cpc	r30, r20
    2556:	f5 07       	cpc	r31, r21
    2558:	60 f0       	brcs	.+24     	; 0x2572 <fmax+0x38>
    255a:	ba 17       	cp	r27, r26
    255c:	3c f0       	brlt	.+14     	; 0x256c <fmax+0x32>
    255e:	49 f4       	brne	.+18     	; 0x2572 <fmax+0x38>
    2560:	62 17       	cp	r22, r18
    2562:	73 07       	cpc	r23, r19
    2564:	84 07       	cpc	r24, r20
    2566:	95 07       	cpc	r25, r21
    2568:	a7 95       	ror	r26
    256a:	1b f4       	brvc	.+6      	; 0x2572 <fmax+0x38>
    256c:	b9 01       	movw	r22, r18
    256e:	ca 01       	movw	r24, r20
    2570:	ba 2f       	mov	r27, r26
    2572:	b6 95       	lsr	r27
    2574:	97 95       	ror	r25
    2576:	08 95       	ret

00002578 <fmin>:
    2578:	99 0f       	add	r25, r25
    257a:	bb 0b       	sbc	r27, r27
    257c:	55 0f       	add	r21, r21
    257e:	aa 0b       	sbc	r26, r26
    2580:	e0 e8       	ldi	r30, 0x80	; 128
    2582:	fe ef       	ldi	r31, 0xFE	; 254
    2584:	16 16       	cp	r1, r22
    2586:	17 06       	cpc	r1, r23
    2588:	e8 07       	cpc	r30, r24
    258a:	f9 07       	cpc	r31, r25
    258c:	70 f0       	brcs	.+28     	; 0x25aa <fmin+0x32>
    258e:	12 16       	cp	r1, r18
    2590:	13 06       	cpc	r1, r19
    2592:	e4 07       	cpc	r30, r20
    2594:	f5 07       	cpc	r31, r21
    2596:	60 f0       	brcs	.+24     	; 0x25b0 <fmin+0x38>
    2598:	ba 17       	cp	r27, r26
    259a:	54 f0       	brlt	.+20     	; 0x25b0 <fmin+0x38>
    259c:	31 f4       	brne	.+12     	; 0x25aa <fmin+0x32>
    259e:	26 17       	cp	r18, r22
    25a0:	37 07       	cpc	r19, r23
    25a2:	48 07       	cpc	r20, r24
    25a4:	59 07       	cpc	r21, r25
    25a6:	a7 95       	ror	r26
    25a8:	1b f4       	brvc	.+6      	; 0x25b0 <fmin+0x38>
    25aa:	b9 01       	movw	r22, r18
    25ac:	ca 01       	movw	r24, r20
    25ae:	ba 2f       	mov	r27, r26
    25b0:	b6 95       	lsr	r27
    25b2:	97 95       	ror	r25
    25b4:	08 95       	ret

000025b6 <__fp_inf>:
    25b6:	97 f9       	bld	r25, 7
    25b8:	9f 67       	ori	r25, 0x7F	; 127
    25ba:	80 e8       	ldi	r24, 0x80	; 128
    25bc:	70 e0       	ldi	r23, 0x00	; 0
    25be:	60 e0       	ldi	r22, 0x00	; 0
    25c0:	08 95       	ret

000025c2 <__fp_nan>:
    25c2:	9f ef       	ldi	r25, 0xFF	; 255
    25c4:	80 ec       	ldi	r24, 0xC0	; 192
    25c6:	08 95       	ret

000025c8 <__fp_pscA>:
    25c8:	00 24       	eor	r0, r0
    25ca:	0a 94       	dec	r0
    25cc:	16 16       	cp	r1, r22
    25ce:	17 06       	cpc	r1, r23
    25d0:	18 06       	cpc	r1, r24
    25d2:	09 06       	cpc	r0, r25
    25d4:	08 95       	ret

000025d6 <__fp_pscB>:
    25d6:	00 24       	eor	r0, r0
    25d8:	0a 94       	dec	r0
    25da:	12 16       	cp	r1, r18
    25dc:	13 06       	cpc	r1, r19
    25de:	14 06       	cpc	r1, r20
    25e0:	05 06       	cpc	r0, r21
    25e2:	08 95       	ret

000025e4 <__fp_round>:
    25e4:	09 2e       	mov	r0, r25
    25e6:	03 94       	inc	r0
    25e8:	00 0c       	add	r0, r0
    25ea:	11 f4       	brne	.+4      	; 0x25f0 <__fp_round+0xc>
    25ec:	88 23       	and	r24, r24
    25ee:	52 f0       	brmi	.+20     	; 0x2604 <__fp_round+0x20>
    25f0:	bb 0f       	add	r27, r27
    25f2:	40 f4       	brcc	.+16     	; 0x2604 <__fp_round+0x20>
    25f4:	bf 2b       	or	r27, r31
    25f6:	11 f4       	brne	.+4      	; 0x25fc <__fp_round+0x18>
    25f8:	60 ff       	sbrs	r22, 0
    25fa:	04 c0       	rjmp	.+8      	; 0x2604 <__fp_round+0x20>
    25fc:	6f 5f       	subi	r22, 0xFF	; 255
    25fe:	7f 4f       	sbci	r23, 0xFF	; 255
    2600:	8f 4f       	sbci	r24, 0xFF	; 255
    2602:	9f 4f       	sbci	r25, 0xFF	; 255
    2604:	08 95       	ret

00002606 <__fp_split3>:
    2606:	57 fd       	sbrc	r21, 7
    2608:	90 58       	subi	r25, 0x80	; 128
    260a:	44 0f       	add	r20, r20
    260c:	55 1f       	adc	r21, r21
    260e:	59 f0       	breq	.+22     	; 0x2626 <__fp_splitA+0x10>
    2610:	5f 3f       	cpi	r21, 0xFF	; 255
    2612:	71 f0       	breq	.+28     	; 0x2630 <__fp_splitA+0x1a>
    2614:	47 95       	ror	r20

00002616 <__fp_splitA>:
    2616:	88 0f       	add	r24, r24
    2618:	97 fb       	bst	r25, 7
    261a:	99 1f       	adc	r25, r25
    261c:	61 f0       	breq	.+24     	; 0x2636 <__fp_splitA+0x20>
    261e:	9f 3f       	cpi	r25, 0xFF	; 255
    2620:	79 f0       	breq	.+30     	; 0x2640 <__fp_splitA+0x2a>
    2622:	87 95       	ror	r24
    2624:	08 95       	ret
    2626:	12 16       	cp	r1, r18
    2628:	13 06       	cpc	r1, r19
    262a:	14 06       	cpc	r1, r20
    262c:	55 1f       	adc	r21, r21
    262e:	f2 cf       	rjmp	.-28     	; 0x2614 <__fp_split3+0xe>
    2630:	46 95       	lsr	r20
    2632:	f1 df       	rcall	.-30     	; 0x2616 <__fp_splitA>
    2634:	08 c0       	rjmp	.+16     	; 0x2646 <__fp_splitA+0x30>
    2636:	16 16       	cp	r1, r22
    2638:	17 06       	cpc	r1, r23
    263a:	18 06       	cpc	r1, r24
    263c:	99 1f       	adc	r25, r25
    263e:	f1 cf       	rjmp	.-30     	; 0x2622 <__fp_splitA+0xc>
    2640:	86 95       	lsr	r24
    2642:	71 05       	cpc	r23, r1
    2644:	61 05       	cpc	r22, r1
    2646:	08 94       	sec
    2648:	08 95       	ret

0000264a <__fp_zero>:
    264a:	e8 94       	clt

0000264c <__fp_szero>:
    264c:	bb 27       	eor	r27, r27
    264e:	66 27       	eor	r22, r22
    2650:	77 27       	eor	r23, r23
    2652:	cb 01       	movw	r24, r22
    2654:	97 f9       	bld	r25, 7
    2656:	08 95       	ret
    2658:	19 f4       	brne	.+6      	; 0x2660 <__fp_szero+0x14>
    265a:	16 f4       	brtc	.+4      	; 0x2660 <__fp_szero+0x14>
    265c:	0c 94 e1 12 	jmp	0x25c2	; 0x25c2 <__fp_nan>
    2660:	0c 94 72 13 	jmp	0x26e4	; 0x26e4 <__fp_mpack>

00002664 <sqrt>:
    2664:	0e 94 0b 13 	call	0x2616	; 0x2616 <__fp_splitA>
    2668:	b8 f3       	brcs	.-18     	; 0x2658 <__fp_szero+0xc>
    266a:	99 23       	and	r25, r25
    266c:	c9 f3       	breq	.-14     	; 0x2660 <__fp_szero+0x14>
    266e:	b6 f3       	brts	.-20     	; 0x265c <__fp_szero+0x10>
    2670:	9f 57       	subi	r25, 0x7F	; 127
    2672:	55 0b       	sbc	r21, r21
    2674:	87 ff       	sbrs	r24, 7
    2676:	0e 94 80 13 	call	0x2700	; 0x2700 <__fp_norm2>
    267a:	00 24       	eor	r0, r0
    267c:	a0 e6       	ldi	r26, 0x60	; 96
    267e:	40 ea       	ldi	r20, 0xA0	; 160
    2680:	90 01       	movw	r18, r0
    2682:	80 58       	subi	r24, 0x80	; 128
    2684:	56 95       	lsr	r21
    2686:	97 95       	ror	r25
    2688:	28 f4       	brcc	.+10     	; 0x2694 <sqrt+0x30>
    268a:	80 5c       	subi	r24, 0xC0	; 192
    268c:	66 0f       	add	r22, r22
    268e:	77 1f       	adc	r23, r23
    2690:	88 1f       	adc	r24, r24
    2692:	20 f0       	brcs	.+8      	; 0x269c <sqrt+0x38>
    2694:	26 17       	cp	r18, r22
    2696:	37 07       	cpc	r19, r23
    2698:	48 07       	cpc	r20, r24
    269a:	30 f4       	brcc	.+12     	; 0x26a8 <sqrt+0x44>
    269c:	62 1b       	sub	r22, r18
    269e:	73 0b       	sbc	r23, r19
    26a0:	84 0b       	sbc	r24, r20
    26a2:	20 29       	or	r18, r0
    26a4:	31 29       	or	r19, r1
    26a6:	4a 2b       	or	r20, r26
    26a8:	a6 95       	lsr	r26
    26aa:	17 94       	ror	r1
    26ac:	07 94       	ror	r0
    26ae:	20 25       	eor	r18, r0
    26b0:	31 25       	eor	r19, r1
    26b2:	4a 27       	eor	r20, r26
    26b4:	58 f7       	brcc	.-42     	; 0x268c <sqrt+0x28>
    26b6:	66 0f       	add	r22, r22
    26b8:	77 1f       	adc	r23, r23
    26ba:	88 1f       	adc	r24, r24
    26bc:	20 f0       	brcs	.+8      	; 0x26c6 <sqrt+0x62>
    26be:	26 17       	cp	r18, r22
    26c0:	37 07       	cpc	r19, r23
    26c2:	48 07       	cpc	r20, r24
    26c4:	30 f4       	brcc	.+12     	; 0x26d2 <sqrt+0x6e>
    26c6:	62 0b       	sbc	r22, r18
    26c8:	73 0b       	sbc	r23, r19
    26ca:	84 0b       	sbc	r24, r20
    26cc:	20 0d       	add	r18, r0
    26ce:	31 1d       	adc	r19, r1
    26d0:	41 1d       	adc	r20, r1
    26d2:	a0 95       	com	r26
    26d4:	81 f7       	brne	.-32     	; 0x26b6 <sqrt+0x52>
    26d6:	b9 01       	movw	r22, r18
    26d8:	84 2f       	mov	r24, r20
    26da:	91 58       	subi	r25, 0x81	; 129
    26dc:	88 0f       	add	r24, r24
    26de:	96 95       	lsr	r25
    26e0:	87 95       	ror	r24
    26e2:	08 95       	ret

000026e4 <__fp_mpack>:
    26e4:	9f 3f       	cpi	r25, 0xFF	; 255
    26e6:	31 f0       	breq	.+12     	; 0x26f4 <__fp_mpack_finite+0xc>

000026e8 <__fp_mpack_finite>:
    26e8:	91 50       	subi	r25, 0x01	; 1
    26ea:	20 f4       	brcc	.+8      	; 0x26f4 <__fp_mpack_finite+0xc>
    26ec:	87 95       	ror	r24
    26ee:	77 95       	ror	r23
    26f0:	67 95       	ror	r22
    26f2:	b7 95       	ror	r27
    26f4:	88 0f       	add	r24, r24
    26f6:	91 1d       	adc	r25, r1
    26f8:	96 95       	lsr	r25
    26fa:	87 95       	ror	r24
    26fc:	97 f9       	bld	r25, 7
    26fe:	08 95       	ret

00002700 <__fp_norm2>:
    2700:	91 50       	subi	r25, 0x01	; 1
    2702:	50 40       	sbci	r21, 0x00	; 0
    2704:	66 0f       	add	r22, r22
    2706:	77 1f       	adc	r23, r23
    2708:	88 1f       	adc	r24, r24
    270a:	d2 f7       	brpl	.-12     	; 0x2700 <__fp_norm2>
    270c:	08 95       	ret

0000270e <eeprom_read_block>:
    270e:	dc 01       	movw	r26, r24
    2710:	cb 01       	movw	r24, r22

00002712 <eeprom_read_blraw>:
    2712:	fc 01       	movw	r30, r24
    2714:	e1 99       	sbic	0x1c, 1	; 28
    2716:	fe cf       	rjmp	.-4      	; 0x2714 <eeprom_read_blraw+0x2>
    2718:	06 c0       	rjmp	.+12     	; 0x2726 <eeprom_read_blraw+0x14>
    271a:	ff bb       	out	0x1f, r31	; 31
    271c:	ee bb       	out	0x1e, r30	; 30
    271e:	e0 9a       	sbi	0x1c, 0	; 28
    2720:	31 96       	adiw	r30, 0x01	; 1
    2722:	0d b2       	in	r0, 0x1d	; 29
    2724:	0d 92       	st	X+, r0
    2726:	41 50       	subi	r20, 0x01	; 1
    2728:	50 40       	sbci	r21, 0x00	; 0
    272a:	b8 f7       	brcc	.-18     	; 0x271a <eeprom_read_blraw+0x8>
    272c:	08 95       	ret

0000272e <eeprom_update_block>:
    272e:	dc 01       	movw	r26, r24
    2730:	a4 0f       	add	r26, r20
    2732:	b5 1f       	adc	r27, r21
    2734:	41 50       	subi	r20, 0x01	; 1
    2736:	50 40       	sbci	r21, 0x00	; 0
    2738:	48 f0       	brcs	.+18     	; 0x274c <eeprom_update_block+0x1e>
    273a:	cb 01       	movw	r24, r22
    273c:	84 0f       	add	r24, r20
    273e:	95 1f       	adc	r25, r21
    2740:	2e 91       	ld	r18, -X
    2742:	0e 94 a8 13 	call	0x2750	; 0x2750 <eeprom_update_r18>
    2746:	41 50       	subi	r20, 0x01	; 1
    2748:	50 40       	sbci	r21, 0x00	; 0
    274a:	d0 f7       	brcc	.-12     	; 0x2740 <eeprom_update_block+0x12>
    274c:	08 95       	ret

0000274e <eeprom_update_byte>:
    274e:	26 2f       	mov	r18, r22

00002750 <eeprom_update_r18>:
    2750:	e1 99       	sbic	0x1c, 1	; 28
    2752:	fe cf       	rjmp	.-4      	; 0x2750 <eeprom_update_r18>
    2754:	9f bb       	out	0x1f, r25	; 31
    2756:	8e bb       	out	0x1e, r24	; 30
    2758:	e0 9a       	sbi	0x1c, 0	; 28
    275a:	01 97       	sbiw	r24, 0x01	; 1
    275c:	0d b2       	in	r0, 0x1d	; 29
    275e:	02 16       	cp	r0, r18
    2760:	31 f0       	breq	.+12     	; 0x276e <eeprom_update_r18+0x1e>
    2762:	2d bb       	out	0x1d, r18	; 29
    2764:	0f b6       	in	r0, 0x3f	; 63
    2766:	f8 94       	cli
    2768:	e2 9a       	sbi	0x1c, 2	; 28
    276a:	e1 9a       	sbi	0x1c, 1	; 28
    276c:	0f be       	out	0x3f, r0	; 63
    276e:	08 95       	ret

00002770 <_exit>:
    2770:	f8 94       	cli

00002772 <__stop_program>:
    2772:	ff cf       	rjmp	.-2      	; 0x2772 <__stop_program>
